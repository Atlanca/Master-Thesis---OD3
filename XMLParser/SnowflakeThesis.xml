<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE pdf2xml SYSTEM "pdf2xml.dtd">

<pdf2xml producer="poppler" version="0.48.0">
<page number="1" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="0" size="14" family="Times" color="#000000"/>
	<fontspec id="1" size="34" family="Times" color="#000000"/>
	<fontspec id="2" size="18" family="Times" color="#000000"/>
	<fontspec id="3" size="16" family="Times" color="#000000"/>
	<fontspec id="4" size="16" family="Times" color="#000000"/>
<text top="109" left="108" width="4" height="18" font="0"> </text>
<text top="146" left="108" width="4" height="18" font="0"> </text>
<text top="182" left="108" width="4" height="18" font="0"> </text>
<text top="219" left="139" width="636" height="41" font="1"><b>Analysis, design and development </b></text>
<text top="280" left="184" width="547" height="41" font="1"><b>of a web-shop template using </b></text>
<text top="342" left="138" width="630" height="41" font="1"><b>SPHERE.IO e-commerce platform</b></text>
<text top="360" left="768" width="4" height="18" font="0"> </text>
<text top="418" left="108" width="4" height="18" font="0"> </text>
<text top="454" left="361" width="183" height="24" font="2">Laura Luiz Escoriza</text>
<text top="458" left="545" width="4" height="18" font="0"> </text>
<text top="496" left="287" width="333" height="20" font="3">Facultat d’Informàtica de Barcelona (FIB)</text>
<text top="498" left="619" width="4" height="18" font="0"> </text>
<text top="535" left="215" width="476" height="20" font="3">Universitat Politècnica de Catalunya (UPC) - BarcelonaTech</text>
<text top="537" left="691" width="4" height="18" font="0"> </text>
<text top="574" left="108" width="4" height="18" font="0"> </text>
<text top="617" left="411" width="89" height="24" font="2">Director: </text>
<text top="644" left="395" width="117" height="24" font="2">Hajo Eichler</text>
<text top="649" left="511" width="4" height="18" font="0"> </text>
<text top="687" left="412" width="86" height="20" font="3">Company: </text>
<text top="710" left="364" width="179" height="20" font="3">commercetools GmbH</text>
<text top="712" left="543" width="4" height="18" font="0"> </text>
<text top="749" left="108" width="5" height="24" font="2"> </text>
<text top="791" left="414" width="78" height="24" font="2">Advisor:</text>
<text top="796" left="492" width="4" height="18" font="0"> </text>
<text top="818" left="373" width="159" height="24" font="2">Carles Farré Tost</text>
<text top="823" left="533" width="4" height="18" font="0"> </text>
<text top="861" left="402" width="106" height="20" font="3">Department: </text>
<text top="884" left="243" width="420" height="20" font="3">Enginyeria de Serveis i Sistemes d’Informació (ESSI)</text>
<text top="886" left="663" width="4" height="18" font="0"> </text>
<text top="924" left="108" width="4" height="18" font="0"> </text>
<text top="966" left="400" width="106" height="20" font="3">Master thesis</text>
<text top="968" left="506" width="4" height="18" font="0"> </text>
<text top="1002" left="282" width="342" height="20" font="4"><i>Degree in Informatics Engineering (2003)</i></text>
<text top="1003" left="624" width="4" height="18" font="0"> </text>
<text top="1037" left="399" width="108" height="20" font="3">January 2014</text>
<text top="1039" left="507" width="4" height="18" font="0"> </text>
</page>
<page number="2" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="789" width="12" height="20" font="0">2	  </text>
<text top="109" left="108" width="4" height="18" font="0"> </text>
<text top="109" left="324" width="4" height="18" font="0"> </text>
</page>
<page number="3" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0">  3	  </text>
<text top="109" left="108" width="4" height="18" font="0"> </text>
<text top="152" left="108" width="4" height="20" font="0">	  </text>
<text top="152" left="324" width="4" height="18" font="0"> </text>
</page>
<page number="4" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="5" size="16" family="Times" color="#000000"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="789" width="12" height="20" font="0">4	  </text>
<text top="111" left="108" width="4" height="18" font="0"> </text>
<text top="145" left="108" width="221" height="20" font="5"><b>DADES DEL PROJECTE</b></text>
<text top="147" left="330" width="4" height="18" font="0"> </text>
<text top="181" left="108" width="4" height="18" font="0"> </text>
<text top="214" left="108" width="166" height="20" font="4"><i>Títol del projecte:   </i></text>
<text top="214" left="324" width="459" height="20" font="3">Analysis, design and development of a web-shop template</text>
<text top="216" left="783" width="4" height="18" font="0"> </text>
<text top="250" left="324" width="326" height="20" font="3">using SPHERE.IO e-commerce platform.</text>
<text top="251" left="650" width="4" height="18" font="0"> </text>
<text top="285" left="108" width="166" height="20" font="4"><i>Nom de l'estudiant:</i>  </text>
<text top="285" left="324" width="157" height="20" font="3">Laura Luiz Escoriza</text>
<text top="287" left="481" width="4" height="18" font="0"> </text>
<text top="321" left="108" width="83" height="20" font="4"><i>Titulació:</i> </text>
<text top="321" left="216" width="4" height="20" font="3"> </text>
<text top="321" left="270" width="4" height="20" font="3"> </text>
<text top="321" left="324" width="269" height="20" font="3">Enginyeria en Informàtica (2003)</text>
<text top="322" left="593" width="4" height="18" font="0"> </text>
<text top="356" left="108" width="69" height="20" font="4"><i>Crèdits:</i> </text>
<text top="356" left="216" width="4" height="20" font="3"> </text>
<text top="356" left="270" width="4" height="20" font="3"> </text>
<text top="356" left="324" width="33" height="20" font="3">37,5</text>
<text top="358" left="358" width="4" height="18" font="0"> </text>
<text top="392" left="108" width="79" height="20" font="4"><i>Director:</i> </text>
<text top="392" left="216" width="4" height="20" font="3"> </text>
<text top="392" left="270" width="4" height="20" font="3"> </text>
<text top="392" left="324" width="100" height="20" font="3">Hajo Eichler</text>
<text top="393" left="424" width="4" height="18" font="0"> </text>
<text top="427" left="108" width="180" height="20" font="4"><i>Empresa del director</i>: </text>
<text top="427" left="324" width="179" height="20" font="3">commercetools GmbH</text>
<text top="429" left="503" width="4" height="18" font="0"> </text>
<text top="463" left="108" width="68" height="20" font="4"><i>Ponent:</i> </text>
<text top="463" left="216" width="4" height="20" font="3"> </text>
<text top="463" left="270" width="4" height="20" font="3"> </text>
<text top="463" left="324" width="136" height="20" font="3">Carles Farré Tost</text>
<text top="464" left="461" width="4" height="18" font="0"> </text>
<text top="498" left="108" width="259" height="20" font="4"><i>Departament del ponent:</i>  ESSI </text>
<text top="519" left="108" width="4" height="18" font="0"> </text>
<text top="555" left="108" width="4" height="18" font="0"> </text>
<text top="588" left="108" width="404" height="20" font="5"><b>MEMBRES DEL TRIBUNAL </b><i>(nom i signatura)</i></text>
<text top="590" left="513" width="4" height="18" font="0"> </text>
<text top="624" left="108" width="4" height="18" font="0"> </text>
<text top="657" left="108" width="112" height="20" font="4"><i>1.  President:</i>  </text>
<text top="657" left="270" width="4" height="20" font="3"> </text>
<text top="657" left="324" width="159" height="20" font="3">Antoni Urpí Tubella</text>
<text top="659" left="484" width="4" height="18" font="0"> </text>
<text top="713" left="108" width="80" height="20" font="4"><i>2.  Vocal:</i> </text>
<text top="713" left="216" width="4" height="20" font="3"> </text>
<text top="713" left="270" width="4" height="20" font="3"> </text>
<text top="713" left="324" width="187" height="20" font="3">Klaus Gerhard Langohr</text>
<text top="715" left="512" width="4" height="18" font="0"> </text>
<text top="769" left="108" width="112" height="20" font="4"><i>3.  Secretari:</i>  </text>
<text top="769" left="270" width="4" height="20" font="3"> </text>
<text top="769" left="324" width="136" height="20" font="3">Carles Farré Tost</text>
<text top="771" left="461" width="4" height="18" font="0"> </text>
<text top="827" left="108" width="4" height="18" font="0"> </text>
<text top="861" left="108" width="146" height="20" font="5"><b>QUALIFICACIÓ</b></text>
<text top="863" left="254" width="4" height="18" font="0"> </text>
<text top="897" left="108" width="4" height="18" font="0"> </text>
<text top="930" left="108" width="186" height="20" font="4"><i>Qualificació numèrica:</i></text>
<text top="932" left="294" width="4" height="18" font="0"> </text>
<text top="965" left="108" width="199" height="20" font="4"><i>Qualificació descriptiva:</i></text>
<text top="967" left="307" width="4" height="18" font="0"> </text>
<text top="1001" left="108" width="52" height="20" font="4"><i>Data: </i></text>
<text top="1022" left="108" width="4" height="18" font="0"> </text>
<text top="1057" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="5" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0">  5	  </text>
<text top="109" left="108" width="4" height="18" font="0"> </text>
<text top="152" left="189" width="4" height="18" font="0"> </text>
<text top="186" left="108" width="4" height="18" font="0"> </text>
<text top="186" left="324" width="4" height="18" font="0"> </text>
</page>
<page number="6" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="6" size="25" family="Times" color="#000000"/>
	<fontspec id="7" size="19" family="Times" color="#000000"/>
	<fontspec id="8" size="14" family="Times" color="#000000"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="789" width="12" height="20" font="0">6	  </text>
<text top="109" left="108" width="16" height="33" font="6">A</text>
<text top="114" left="124" width="81" height="26" font="7">BSTRACT</text>
<text top="109" left="206" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="592" height="18" font="8"><i>In the present thesis a possible next generation of e-commerce solutions with a </i></text>
<text top="191" left="108" width="592" height="18" font="8"><i>platform-as-a-service  model  is  presented  and  analyzed.  This  generation  tries </i></text>
<text top="219" left="108" width="592" height="18" font="8"><i>to fill the gap of missing developer-friendly alternatives to build systems with </i></text>
<text top="247" left="108" width="592" height="18" font="8"><i>e-commerce  components.  Current  offered  solutions  are  mostly  aimed  for  the </i></text>
<text top="275" left="108" width="592" height="18" font="8"><i>comfortable use of designers and other non-technical roles, usually in the shape </i></text>
<text top="303" left="108" width="592" height="18" font="8"><i>of  out-of-the-box  products.  These  solutions  are  usually  limiting  the  ability  of </i></text>
<text top="331" left="108" width="592" height="18" font="8"><i>developers to integrate technologies or build innovative business models, thus </i></text>
<text top="359" left="108" width="592" height="18" font="8"><i>sometimes  forcing  companies  to  invest  in  projects  that  have  to  be  built </i></text>
<text top="387" left="108" width="195" height="18" font="8"><i>practically from the start.</i> </text>
<text top="431" left="108" width="592" height="18" font="8"><i>This document describes the development of the first web-shop built with one of </i></text>
<text top="459" left="108" width="592" height="18" font="8"><i>these  solutions,  SPHERE.IO,  an  e-commerce  platform-as-a-service  developed </i></text>
<text top="487" left="108" width="592" height="18" font="8"><i>in  Berlin  by  commercetools  GmbH.  During  this  process,  questions  are  being </i></text>
<text top="515" left="108" width="592" height="18" font="8"><i>answered about the suitability of e-commerce platforms to develop web-shops, </i></text>
<text top="543" left="108" width="592" height="18" font="8"><i>a product most developers have to face when providing e-commerce solutions </i></text>
<text top="571" left="108" width="592" height="18" font="8"><i>to companies. The web-shop has a dual purpose, as it will also serve as the first </i></text>
<text top="599" left="108" width="592" height="18" font="8"><i>open-source template provided by the platform to help other developers build </i></text>
<text top="627" left="108" width="150" height="18" font="8"><i>their own solutions.</i> </text>
<text top="627" left="471" width="4" height="18" font="0"> </text>
</page>
<page number="7" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0">  7	  </text>
<text top="109" left="108" width="16" height="33" font="6">A</text>
<text top="114" left="124" width="186" height="26" font="7">CKNOWLEDGMENTS</text>
<text top="109" left="311" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="682" height="18" font="0">I would especially like to thank Hajo for accepting being the director of my thesis and reading </text>
<text top="191" left="108" width="665" height="18" font="0">all these endless pages despite of having so much to do (really, how can you find the time!). </text>
<text top="218" left="108" width="529" height="18" font="0">Thanks for your support and always good advice to improve this project. </text>
<text top="262" left="108" width="671" height="18" font="0">I would also like to thank all the rest of the SPHERE.IO team for creating and raising such a </text>
<text top="290" left="108" width="442" height="18" font="0">great product, giving me the opportunity to work with them. </text>
<text top="333" left="108" width="186" height="18" font="0">From the ones that were: </text>
<text top="361" left="108" width="410" height="18" font="0">Aurélie, Jens, Roman, Ian, Lenni, Christian and Martin. </text>
<text top="389" left="108" width="305" height="18" font="0">(I loved the time we spent together, guys) </text>
<text top="433" left="108" width="153" height="18" font="0">To the ones that are: </text>
<text top="460" left="108" width="496" height="18" font="0">Nicole, Peter, Gregor, Dirk, Oleg, Nicola, Martin, Michael and Sven. </text>
<text top="504" left="108" width="692" height="18" font="0">I would like to thank my teacher Carles, who guided me through this project from the distance. </text>
<text top="532" left="108" width="660" height="18" font="0">Thank you especially for DSBW, which documentation I check constantly, not only for this </text>
<text top="560" left="108" width="59" height="18" font="0">project. </text>
<text top="603" left="108" width="654" height="18" font="0">Thanks to my roommate Sebastian, the most experienced online shopper I have ever met, </text>
<text top="631" left="108" width="682" height="18" font="0">whose advice was very convenient I must say. Thank you for helping me and have such loving </text>
<text top="659" left="108" width="547" height="18" font="0">cats that kept me well entertained during the long days locked in my room. </text>
<text top="703" left="108" width="620" height="18" font="0">Many thanks as well to those friends that helped me somehow to be where I am now. </text>
<text top="730" left="108" width="466" height="18" font="0">Particularly Hèctor and Pau, who help me the most. Thank you. </text>
<text top="774" left="108" width="676" height="18" font="0">And of course thousand thanks to the most important person in my life, my husband Héctor, </text>
<text top="802" left="108" width="591" height="18" font="0">whose constant care, support and help was so necessary during all my career life. </text>
<text top="830" left="108" width="352" height="18" font="0">I would not be here without you, you know that. </text>
<text top="873" left="108" width="596" height="18" font="0">Finally, I thank my parents, from whom I inherited the love for arts and business. </text>
<text top="901" left="108" width="430" height="18" font="0">Because they raised me to be a person capable of anything. </text>
<text top="929" left="108" width="288" height="18" font="0">And I chose to be a computer engineer. </text>
<text top="972" left="108" width="4" height="18" font="0"> </text>
<text top="972" left="324" width="4" height="18" font="0"> </text>
</page>
<page number="8" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="9" size="14" family="Times" color="#000000"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="789" width="12" height="20" font="0">8	  </text>
<text top="109" left="108" width="7" height="33" font="6">I</text>
<text top="114" left="116" width="50" height="26" font="7">NDEX</text>
<text top="109" left="166" width="6" height="33" font="6">	  </text>
<text top="157" left="798" width="4" height="18" font="0"> </text>
<text top="191" left="108" width="4" height="20" font="0">	  </text>
<text top="230" left="108" width="689" height="20" font="9"><b>Abstract	  .............................................................................................................................................	  6</b></text>
<text top="228" left="797" width="4" height="21" font="3">	  </text>
<text top="268" left="108" width="689" height="20" font="9"><b>Acknowledgments	  .............................................................................................................................	  7</b></text>
<text top="266" left="797" width="4" height="21" font="3">	  </text>
<text top="306" left="108" width="689" height="20" font="9"><b>Index	  .................................................................................................................................................	  8</b></text>
<text top="304" left="797" width="4" height="21" font="3">	  </text>
<text top="344" left="108" width="689" height="20" font="9"><b>Glossary	  ..........................................................................................................................................	  11</b></text>
<text top="342" left="797" width="4" height="21" font="3">	  </text>
<text top="382" left="108" width="8" height="20" font="9"><b>1</b></text>
<text top="381" left="117" width="4" height="21" font="3">	  </text>
<text top="382" left="135" width="662" height="20" font="9"><b>Introduction	  ..............................................................................................................................	  14</b></text>
<text top="381" left="797" width="4" height="21" font="3">	  </text>
<text top="420" left="126" width="21" height="20" font="9"><b>1.1</b></text>
<text top="419" left="147" width="4" height="21" font="3">	  </text>
<text top="420" left="166" width="631" height="20" font="9"><b>Motivation	  .........................................................................................................................	  14</b></text>
<text top="419" left="797" width="4" height="21" font="3">	  </text>
<text top="459" left="126" width="21" height="20" font="9"><b>1.2</b></text>
<text top="457" left="147" width="4" height="21" font="3">	  </text>
<text top="459" left="166" width="631" height="20" font="9"><b>Objectives	  ..........................................................................................................................	  15</b></text>
<text top="457" left="797" width="4" height="21" font="3">	  </text>
<text top="497" left="126" width="21" height="20" font="9"><b>1.3</b></text>
<text top="495" left="147" width="4" height="21" font="3">	  </text>
<text top="497" left="166" width="631" height="20" font="9"><b>Background	  ........................................................................................................................	  16</b></text>
<text top="495" left="797" width="4" height="21" font="3">	  </text>
<text top="535" left="144" width="33" height="20" font="0">1.3.1</text>
<text top="533" left="178" width="4" height="21" font="3">	  </text>
<text top="535" left="196" width="601" height="20" font="0">What	  is	  e-­‐commerce	  ..........................................................................................................	  16</text>
<text top="533" left="797" width="4" height="21" font="3">	  </text>
<text top="573" left="144" width="33" height="20" font="0">1.3.2</text>
<text top="571" left="178" width="4" height="21" font="3">	  </text>
<text top="573" left="196" width="601" height="20" font="0">History	  of	  e-­‐commerce	  .......................................................................................................	  18</text>
<text top="571" left="797" width="4" height="21" font="3">	  </text>
<text top="611" left="144" width="33" height="20" font="0">1.3.3</text>
<text top="610" left="178" width="4" height="21" font="3">	  </text>
<text top="611" left="196" width="601" height="20" font="0">Future	  of	  e-­‐commerce	  ........................................................................................................	  21</text>
<text top="610" left="797" width="4" height="21" font="3">	  </text>
<text top="649" left="144" width="33" height="20" font="0">1.3.4</text>
<text top="648" left="178" width="4" height="21" font="3">	  </text>
<text top="649" left="196" width="601" height="20" font="0">Current	  alternatives	  ...........................................................................................................	  23</text>
<text top="648" left="797" width="4" height="21" font="3">	  </text>
<text top="688" left="126" width="21" height="20" font="9"><b>1.4</b></text>
<text top="686" left="147" width="4" height="21" font="3">	  </text>
<text top="688" left="166" width="631" height="20" font="9"><b>Planning	  .............................................................................................................................	  24</b></text>
<text top="686" left="797" width="4" height="21" font="3">	  </text>
<text top="726" left="144" width="33" height="20" font="0">1.4.1</text>
<text top="724" left="178" width="4" height="21" font="3">	  </text>
<text top="726" left="196" width="601" height="20" font="0">Methodology	  selection	  .......................................................................................................	  25</text>
<text top="724" left="797" width="4" height="21" font="3">	  </text>
<text top="764" left="144" width="33" height="20" font="0">1.4.2</text>
<text top="762" left="178" width="4" height="21" font="3">	  </text>
<text top="764" left="196" width="601" height="20" font="0">Description	  of	  the	  methodology	  ........................................................................................	  26</text>
<text top="762" left="797" width="4" height="21" font="3">	  </text>
<text top="802" left="144" width="33" height="20" font="0">1.4.3</text>
<text top="800" left="178" width="4" height="21" font="3">	  </text>
<text top="802" left="196" width="601" height="20" font="0">Risk	  management	  ...............................................................................................................	  27</text>
<text top="800" left="797" width="4" height="21" font="3">	  </text>
<text top="840" left="144" width="33" height="20" font="0">1.4.4</text>
<text top="839" left="178" width="4" height="21" font="3">	  </text>
<text top="840" left="196" width="601" height="20" font="0">Initial	  timeline	  ....................................................................................................................	  27</text>
<text top="839" left="797" width="4" height="21" font="3">	  </text>
<text top="878" left="108" width="8" height="20" font="9"><b>2</b></text>
<text top="877" left="117" width="4" height="21" font="3">	  </text>
<text top="878" left="135" width="662" height="20" font="9"><b>Requirement	  analysis	  ................................................................................................................	  30</b></text>
<text top="877" left="797" width="4" height="21" font="3">	  </text>
<text top="917" left="126" width="21" height="20" font="9"><b>2.1</b></text>
<text top="915" left="147" width="4" height="21" font="3">	  </text>
<text top="917" left="166" width="631" height="20" font="9"><b>Stakeholders	  analysis	  .........................................................................................................	  30</b></text>
<text top="915" left="797" width="4" height="21" font="3">	  </text>
<text top="955" left="126" width="21" height="20" font="9"><b>2.2</b></text>
<text top="953" left="147" width="4" height="21" font="3">	  </text>
<text top="955" left="166" width="631" height="20" font="9"><b>Functional	  requirements	  .....................................................................................................	  31</b></text>
<text top="953" left="797" width="4" height="21" font="3">	  </text>
<text top="993" left="126" width="21" height="20" font="9"><b>2.3</b></text>
<text top="991" left="147" width="4" height="21" font="3">	  </text>
<text top="993" left="166" width="631" height="20" font="9"><b>Non-­‐functional	  requirements	  .............................................................................................	  32</b></text>
<text top="991" left="797" width="4" height="21" font="3">	  </text>
<text top="1031" left="108" width="8" height="20" font="9"><b>3</b></text>
<text top="1029" left="117" width="4" height="21" font="3">	  </text>
<text top="1031" left="135" width="662" height="20" font="9"><b>Specification	  ..............................................................................................................................	  34</b></text>
<text top="1029" left="797" width="4" height="21" font="3">	  </text>
</page>
<page number="9" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0">  9	  </text>
<text top="110" left="126" width="21" height="20" font="9"><b>3.1</b></text>
<text top="108" left="147" width="4" height="21" font="3">	  </text>
<text top="110" left="166" width="631" height="20" font="9"><b>Use	  case	  model	  ...................................................................................................................	  34</b></text>
<text top="108" left="797" width="4" height="21" font="3">	  </text>
<text top="148" left="126" width="21" height="20" font="9"><b>3.2</b></text>
<text top="146" left="147" width="4" height="21" font="3">	  </text>
<text top="148" left="166" width="631" height="20" font="9"><b>System	  behavior	  model	  ......................................................................................................	  39</b></text>
<text top="146" left="797" width="4" height="21" font="3">	  </text>
<text top="186" left="126" width="21" height="20" font="9"><b>3.3</b></text>
<text top="184" left="147" width="4" height="21" font="3">	  </text>
<text top="186" left="166" width="631" height="20" font="9"><b>Conceptual	  model	  ...............................................................................................................	  42</b></text>
<text top="184" left="797" width="4" height="21" font="3">	  </text>
<text top="224" left="126" width="21" height="20" font="9"><b>3.4</b></text>
<text top="223" left="147" width="4" height="21" font="3">	  </text>
<text top="224" left="166" width="631" height="20" font="9"><b>State	  diagrams	  ....................................................................................................................	  44</b></text>
<text top="223" left="797" width="4" height="21" font="3">	  </text>
<text top="262" left="108" width="8" height="20" font="9"><b>4</b></text>
<text top="261" left="117" width="4" height="21" font="3">	  </text>
<text top="262" left="135" width="662" height="20" font="9"><b>Design	  .......................................................................................................................................	  47</b></text>
<text top="261" left="797" width="4" height="21" font="3">	  </text>
<text top="301" left="126" width="21" height="20" font="9"><b>4.1</b></text>
<text top="299" left="147" width="4" height="21" font="3">	  </text>
<text top="301" left="166" width="631" height="20" font="9"><b>System	  physical	  architecture	  ..............................................................................................	  47</b></text>
<text top="299" left="797" width="4" height="21" font="3">	  </text>
<text top="339" left="126" width="21" height="20" font="9"><b>4.2</b></text>
<text top="337" left="147" width="4" height="21" font="3">	  </text>
<text top="339" left="166" width="631" height="20" font="9"><b>System	  logical	  architecture	  .................................................................................................	  49</b></text>
<text top="337" left="797" width="4" height="21" font="3">	  </text>
<text top="377" left="144" width="33" height="20" font="0">4.2.1</text>
<text top="375" left="178" width="4" height="21" font="3">	  </text>
<text top="377" left="196" width="601" height="20" font="0">Description	  of	  used	  technologies	  .......................................................................................	  53</text>
<text top="375" left="797" width="4" height="21" font="3">	  </text>
<text top="415" left="144" width="33" height="20" font="0">4.2.2</text>
<text top="413" left="178" width="4" height="21" font="3">	  </text>
<text top="415" left="196" width="601" height="20" font="0">External	  design	  ...................................................................................................................	  61</text>
<text top="413" left="797" width="4" height="21" font="3">	  </text>
<text top="453" left="144" width="33" height="20" font="0">4.2.3</text>
<text top="452" left="178" width="4" height="21" font="3">	  </text>
<text top="453" left="196" width="601" height="20" font="0">Internal	  design	  ....................................................................................................................	  75</text>
<text top="452" left="797" width="4" height="21" font="3">	  </text>
<text top="491" left="144" width="33" height="20" font="0">4.2.4</text>
<text top="490" left="178" width="4" height="21" font="3">	  </text>
<text top="491" left="196" width="601" height="20" font="0">Design	  of	  the	  Model	  component	  ........................................................................................	  84</text>
<text top="490" left="797" width="4" height="21" font="3">	  </text>
<text top="530" left="144" width="33" height="20" font="0">4.2.5</text>
<text top="528" left="178" width="4" height="21" font="3">	  </text>
<text top="530" left="196" width="601" height="20" font="0">Design	  of	  the	  View	  component	  ..........................................................................................	  88</text>
<text top="528" left="797" width="4" height="21" font="3">	  </text>
<text top="568" left="144" width="33" height="20" font="0">4.2.6</text>
<text top="566" left="178" width="4" height="21" font="3">	  </text>
<text top="568" left="196" width="601" height="20" font="0">Design	  of	  the	  Controller	  component	  ..................................................................................	  91</text>
<text top="566" left="797" width="4" height="21" font="3">	  </text>
<text top="606" left="108" width="8" height="20" font="9"><b>5</b></text>
<text top="604" left="117" width="4" height="21" font="3">	  </text>
<text top="606" left="135" width="662" height="20" font="9"><b>Implementation	  .........................................................................................................................	  94</b></text>
<text top="604" left="797" width="4" height="21" font="3">	  </text>
<text top="644" left="126" width="21" height="20" font="9"><b>5.1</b></text>
<text top="642" left="147" width="4" height="21" font="3">	  </text>
<text top="644" left="166" width="631" height="20" font="9"><b>Development	  environment	  .................................................................................................	  94</b></text>
<text top="642" left="797" width="4" height="21" font="3">	  </text>
<text top="682" left="126" width="21" height="20" font="9"><b>5.2</b></text>
<text top="680" left="147" width="4" height="21" font="3">	  </text>
<text top="682" left="166" width="631" height="20" font="9"><b>Examples	  of	  used	  technologies	  ...........................................................................................	  95</b></text>
<text top="680" left="797" width="4" height="21" font="3">	  </text>
<text top="720" left="144" width="33" height="20" font="0">5.2.1</text>
<text top="719" left="178" width="4" height="21" font="3">	  </text>
<text top="720" left="196" width="601" height="20" font="0">Forms	  ..................................................................................................................................	  96</text>
<text top="719" left="797" width="4" height="21" font="3">	  </text>
<text top="758" left="144" width="33" height="20" font="0">5.2.2</text>
<text top="757" left="178" width="4" height="21" font="3">	  </text>
<text top="758" left="196" width="601" height="20" font="0">List	  products	  .....................................................................................................................	  107</text>
<text top="757" left="797" width="4" height="21" font="3">	  </text>
<text top="797" left="144" width="33" height="20" font="0">5.2.3</text>
<text top="795" left="178" width="4" height="21" font="3">	  </text>
<text top="797" left="196" width="601" height="20" font="0">Payment	  ...........................................................................................................................	  115</text>
<text top="795" left="797" width="4" height="21" font="3">	  </text>
<text top="835" left="108" width="8" height="20" font="9"><b>6</b></text>
<text top="833" left="117" width="4" height="21" font="3">	  </text>
<text top="835" left="135" width="662" height="20" font="9"><b>System	  tests	  ............................................................................................................................	  119</b></text>
<text top="833" left="797" width="4" height="21" font="3">	  </text>
<text top="873" left="126" width="21" height="20" font="9"><b>6.1</b></text>
<text top="871" left="147" width="4" height="21" font="3">	  </text>
<text top="873" left="166" width="631" height="20" font="9"><b>Functional	  tests	  ................................................................................................................	  119</b></text>
<text top="871" left="797" width="4" height="21" font="3">	  </text>
<text top="911" left="144" width="33" height="20" font="0">6.1.1</text>
<text top="909" left="178" width="4" height="21" font="3">	  </text>
<text top="911" left="196" width="601" height="20" font="0">Unit	  tests	  ..........................................................................................................................	  121</text>
<text top="909" left="797" width="4" height="21" font="3">	  </text>
<text top="949" left="144" width="33" height="20" font="0">6.1.2</text>
<text top="948" left="178" width="4" height="21" font="3">	  </text>
<text top="949" left="196" width="601" height="20" font="0">Integration	  tests	  ...............................................................................................................	  123</text>
<text top="948" left="797" width="4" height="21" font="3">	  </text>
<text top="987" left="144" width="33" height="20" font="0">6.1.3</text>
<text top="986" left="178" width="4" height="21" font="3">	  </text>
<text top="987" left="196" width="601" height="20" font="0">Acceptance	  tests	  ..............................................................................................................	  124</text>
<text top="986" left="797" width="4" height="21" font="3">	  </text>
<text top="1026" left="126" width="21" height="20" font="9"><b>6.2</b></text>
<text top="1024" left="147" width="4" height="21" font="3">	  </text>
<text top="1026" left="166" width="631" height="20" font="9"><b>Usability	  tests	  ...................................................................................................................	  125</b></text>
<text top="1024" left="797" width="4" height="21" font="3">	  </text>
</page>
<page number="10" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">10	  </text>
<text top="110" left="126" width="21" height="20" font="9"><b>6.3</b></text>
<text top="108" left="147" width="4" height="21" font="3">	  </text>
<text top="110" left="166" width="631" height="20" font="9"><b>Performance	  tests	  ............................................................................................................	  127</b></text>
<text top="108" left="797" width="4" height="21" font="3">	  </text>
<text top="148" left="108" width="8" height="20" font="9"><b>7</b></text>
<text top="146" left="117" width="4" height="21" font="3">	  </text>
<text top="148" left="135" width="662" height="20" font="9"><b>Actual	  planning	  and	  economical	  analysis	  .................................................................................	  132</b></text>
<text top="146" left="797" width="4" height="21" font="3">	  </text>
<text top="186" left="126" width="21" height="20" font="9"><b>7.1</b></text>
<text top="184" left="147" width="4" height="21" font="3">	  </text>
<text top="186" left="166" width="631" height="20" font="9"><b>Deviation	  from	  initial	  timeline	  ..........................................................................................	  132</b></text>
<text top="184" left="797" width="4" height="21" font="3">	  </text>
<text top="224" left="126" width="21" height="20" font="9"><b>7.2</b></text>
<text top="223" left="147" width="4" height="21" font="3">	  </text>
<text top="224" left="166" width="631" height="20" font="9"><b>Economic	  valuation	  ..........................................................................................................	  134</b></text>
<text top="223" left="797" width="4" height="21" font="3">	  </text>
<text top="262" left="108" width="8" height="20" font="9"><b>8</b></text>
<text top="261" left="117" width="4" height="21" font="3">	  </text>
<text top="262" left="135" width="662" height="20" font="9"><b>Conclusion	  ...............................................................................................................................	  137</b></text>
<text top="261" left="797" width="4" height="21" font="3">	  </text>
<text top="301" left="126" width="21" height="20" font="9"><b>8.1</b></text>
<text top="299" left="147" width="4" height="21" font="3">	  </text>
<text top="301" left="166" width="631" height="20" font="9"><b>Future	  work	  ......................................................................................................................	  139</b></text>
<text top="299" left="797" width="4" height="21" font="3">	  </text>
<text top="339" left="126" width="21" height="20" font="9"><b>8.2</b></text>
<text top="337" left="147" width="4" height="21" font="3">	  </text>
<text top="339" left="166" width="631" height="20" font="9"><b>Personal	  conclusions	  ........................................................................................................	  140</b></text>
<text top="337" left="797" width="4" height="21" font="3">	  </text>
<text top="377" left="108" width="689" height="20" font="9"><b>Bibliography	  ..................................................................................................................................	  142</b></text>
<text top="375" left="797" width="4" height="21" font="3">	  </text>
<text top="415" left="108" width="79" height="20" font="9"><b>Appendix	  A</b></text>
<text top="413" left="187" width="4" height="21" font="3">	  </text>
<text top="415" left="205" width="591" height="20" font="9"><b>Developer	  manual	  ...................................................................................................	  145</b></text>
<text top="413" left="797" width="4" height="21" font="3">	  </text>
<text top="453" left="108" width="78" height="20" font="9"><b>Appendix	  B</b></text>
<text top="452" left="187" width="4" height="21" font="3">	  </text>
<text top="453" left="205" width="592" height="20" font="9"><b>Product	  Backlog	  .......................................................................................................	  148</b></text>
<text top="452" left="797" width="4" height="21" font="3">	  </text>
<text top="491" left="108" width="78" height="20" font="9"><b>Appendix	  C</b></text>
<text top="490" left="186" width="4" height="21" font="3">	  </text>
<text top="491" left="204" width="593" height="20" font="9"><b>Testing	  information	  .................................................................................................	  152</b></text>
<text top="490" left="797" width="4" height="21" font="3">	  </text>
<text top="530" left="108" width="4" height="20" font="9"><b>	  </b></text>
<text top="568" left="108" width="4" height="20" font="0">	  </text>
<text top="568" left="324" width="4" height="20" font="0">	  </text>
</page>
<page number="11" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="30" height="20" font="0">  11	  </text>
<text top="109" left="108" width="17" height="33" font="6">G</text>
<text top="114" left="126" width="81" height="26" font="7">LOSSARY</text>
<text top="109" left="207" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="4" height="18" font="0"> </text>
<text top="206" left="108" width="46" height="18" font="0">AJAX </text>
<text top="206" left="216" width="568" height="18" font="0">Stands for Asynchronous JavaScript and XML, and is a technique used on the </text>
<text top="234" left="216" width="507" height="18" font="0">client side of a system to perform asynchronous operations (although </text>
<text top="262" left="216" width="565" height="18" font="0">synchronous are also allowed), such as communicating with a server, without </text>
<text top="290" left="216" width="531" height="18" font="0">keeping the client idle. The use of XML is not required despite the name. </text>
<text top="333" left="108" width="31" height="18" font="0">API </text>
<text top="333" left="216" width="518" height="18" font="0">Stands for Application Programming Interface, and in general means a </text>
<text top="361" left="216" width="554" height="18" font="0">specification that defines how to interact with another software component. </text>
<text top="404" left="108" width="40" height="18" font="0">CDN </text>
<text top="404" left="216" width="584" height="18" font="0">Stands for Content Management Network, and it is a large distributed system of </text>
<text top="433" left="216" width="581" height="18" font="0">servers deployed in multiple data centers across the Internet, allowing to server </text>
<text top="460" left="216" width="349" height="18" font="0">content with high availability and performance. </text>
<text top="504" left="108" width="33" height="18" font="0">CSS </text>
<text top="504" left="216" width="525" height="18" font="0">Stands for Cascading Style Sheets, and is a style sheet language used for </text>
<text top="532" left="216" width="590" height="18" font="0">describing the look and formatting of a document written in a markup language. </text>
<text top="575" left="108" width="44" height="18" font="0">DOM </text>
<text top="575" left="216" width="568" height="18" font="0">Stands for Document Object Model, and is an object model and programming </text>
<text top="603" left="216" width="565" height="18" font="0">interface for documents, such as HTML, in which case defines all elements as </text>
<text top="631" left="216" width="408" height="18" font="0">objects with associated properties, methods and events. </text>
<text top="674" left="108" width="53" height="18" font="0">HTML </text>
<text top="674" left="216" width="561" height="18" font="0">Stands for HyperText Markup Language, and is a markup language designed </text>
<text top="702" left="216" width="171" height="18" font="0">for creating web pages. </text>
<text top="746" left="108" width="48" height="18" font="0">HTTP </text>
<text top="746" left="216" width="537" height="18" font="0">Stands for Hypertext Transfer Protocol, and is an application protocol for </text>
<text top="773" left="216" width="440" height="18" font="0">distributed, collaborative, hypermedia information systems. </text>
<text top="817" left="108" width="57" height="18" font="0">HTTPS </text>
<text top="817" left="216" width="574" height="18" font="0">Stands for Hypertext Transfer Protocol Secure, and is the result of layering the </text>
<text top="845" left="216" width="521" height="18" font="0">HTTP protocol on top of the SSL/TLS protocol, in order to add security </text>
<text top="873" left="216" width="440" height="18" font="0">capabilities of SSL/TLS to standard HTTP communications. </text>
<text top="916" left="108" width="33" height="18" font="0">IDE </text>
<text top="916" left="216" width="577" height="18" font="0">Stands for Integrated Development Environment, and is a software application </text>
<text top="944" left="216" width="570" height="18" font="0">that provides support for software development; usually in the areas of source </text>
<text top="972" left="216" width="344" height="18" font="0">code edition, build automation and debugging. </text>
<text top="1016" left="108" width="64" height="18" font="0">Internet </text>
<text top="1016" left="216" width="542" height="18" font="0">Global system of interconnected computer networks that use the standard </text>
<text top="1043" left="216" width="185" height="18" font="0">TCP/IP to communicate. </text>
</page>
<page number="12" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">12	  </text>
<text top="110" left="108" width="47" height="18" font="0">JSON </text>
<text top="110" left="216" width="585" height="18" font="0">Stands for JavaScript Object Notation, and is an open standard format that uses </text>
<text top="137" left="216" width="590" height="18" font="0">human-readable text to transmit data objects consisting of attribute-value pairs. </text>
<text top="181" left="108" width="39" height="18" font="0">JVM </text>
<text top="181" left="216" width="578" height="18" font="0">Stands for Java Virtual Machine, and it a virtual machine that can execute Java </text>
<text top="209" left="216" width="73" height="18" font="0">bytecode. </text>
<text top="252" left="108" width="52" height="18" font="0">OAuth </text>
<text top="252" left="216" width="353" height="18" font="0">A protocol for authentication and authorization. </text>
<text top="295" left="108" width="40" height="18" font="0">PaaS </text>
<text top="295" left="216" width="578" height="18" font="0">Stands for Platform-as-a-Service, and is a category of cloud computing services </text>
<text top="323" left="216" width="565" height="18" font="0">that provides a computing platform as a service, so that the consumer creates </text>
<text top="351" left="216" width="406" height="18" font="0">software using tools and/or libraries from the provider. </text>
<text top="394" left="108" width="31" height="18" font="0">PCI </text>
<text top="394" left="216" width="99" height="18" font="8"><i>See</i> <i>PCI DSS</i>. </text>
<text top="438" left="108" width="66" height="18" font="0">PCI DSS </text>
<text top="438" left="216" width="582" height="18" font="0">Stands for Payment Card Industry Data Security Standard, and includes a set of </text>
<text top="466" left="216" width="552" height="18" font="0">twelve specific requirements to cover six different goals, in order to create a </text>
<text top="494" left="216" width="282" height="18" font="0">secure environment for payment data. </text>
<text top="537" left="108" width="37" height="18" font="0">PHP </text>
<text top="537" left="216" width="584" height="18" font="0">Stands for PHP: Hypertext Preprocessor, and is a server-side scripting language </text>
<text top="565" left="216" width="304" height="18" font="0">originally designed for web development. </text>
<text top="608" left="108" width="46" height="18" font="0">REST </text>
<text top="608" left="216" width="548" height="18" font="0">Stands for Representational State Transfer, and is an architectural style for </text>
<text top="636" left="216" width="528" height="18" font="0">designing networked systems, based on a set of principles, such as using </text>
<text top="664" left="216" width="398" height="18" font="0">stateless requests or a uniform interface for resources. </text>
<text top="708" left="108" width="65" height="18" font="0">RESTful </text>
<text top="708" left="216" width="557" height="18" font="0">A RESTful system follows REST architectural principles and uses HTTP as a </text>
<text top="735" left="216" width="168" height="18" font="0">transmission protocol. </text>
<text top="779" left="108" width="59" height="18" font="0">TCP/IP </text>
<text top="779" left="216" width="575" height="18" font="0">Stands for Transmission Control Protocol/Internet Protocol, and is considered </text>
<text top="807" left="216" width="534" height="18" font="0">the Internet protocol suite, as it is the combined use of the TCP transport </text>
<text top="835" left="216" width="332" height="18" font="0">protocol and the IP communication protocol. </text>
<text top="878" left="108" width="39" height="18" font="0">SaaS </text>
<text top="878" left="216" width="578" height="18" font="0">Stands for Software-as-a-Service, and is a category of cloud computing services </text>
<text top="906" left="216" width="486" height="18" font="0">that provides a complete software, along with its data, as a service. </text>
<text top="949" left="108" width="42" height="18" font="0">Scala </text>
<text top="949" left="216" width="582" height="18" font="0">A object-functional programming language that runs on JVM and is compatible </text>
<text top="977" left="216" width="130" height="18" font="0">with Java scripts. </text>
<text top="1021" left="108" width="37" height="18" font="0">SDK </text>
<text top="1021" left="216" width="581" height="18" font="0">Stands for Software Developer Kit, and is a set of software development tools to </text>
<text top="1048" left="216" width="367" height="18" font="0">create applications for a certain software package. </text>
</page>
<page number="13" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="30" height="20" font="0">  13	  </text>
<text top="110" left="108" width="36" height="18" font="0">SEO </text>
<text top="110" left="216" width="546" height="18" font="0">Stands for Search Engine Optimization, and means to improve the ranking </text>
<text top="137" left="216" width="351" height="18" font="0">position of a website in Internet search engines. </text>
<text top="181" left="108" width="49" height="18" font="0">SMTP </text>
<text top="181" left="216" width="505" height="18" font="0">Stands for Simple Mail Transfer Protocol, and is a standard for email </text>
<text top="209" left="216" width="321" height="18" font="0">transmission through the Internet network. </text>
<text top="252" left="108" width="70" height="18" font="0">SSL/TLS </text>
<text top="252" left="216" width="574" height="18" font="0">Stands for Transport Layer Security/Secure Sockets Layer, and are two related </text>
<text top="280" left="216" width="540" height="18" font="0">cryptographic protocols designed to provide communication security over </text>
<text top="308" left="216" width="68" height="18" font="0">Internet. </text>
<text top="352" left="108" width="38" height="18" font="0">URL </text>
<text top="352" left="216" width="551" height="18" font="0">Stands for Uniform Resource Locator, and is a specific character string that </text>
<text top="380" left="216" width="551" height="18" font="0">constitutes a reference to a resource, also known as web address when used </text>
<text top="407" left="216" width="89" height="18" font="0">with HTTP. </text>
<text top="451" left="108" width="52" height="18" font="0">WWW </text>
<text top="451" left="216" width="549" height="18" font="0">Stands for World Wide Web, also known as W3 or simply the Web, and is a </text>
<text top="479" left="216" width="581" height="18" font="0">system of interlinked hypertext documents accessed via the Internet with a web </text>
<text top="507" left="216" width="67" height="18" font="0">browser. </text>
<text top="550" left="108" width="41" height="18" font="0">XML </text>
<text top="550" left="216" width="580" height="18" font="0">Stands for Extensible Markup Language, and is a markup language that defines </text>
<text top="578" left="216" width="571" height="18" font="0">a set of rules for encoding documents in a format that is both human-readable </text>
<text top="606" left="216" width="171" height="18" font="0">and machine-readable. </text>
<text top="606" left="600" width="4" height="18" font="0"> </text>
</page>
<page number="14" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="10" size="8" family="Times" color="#000000"/>
	<fontspec id="11" size="12" family="Times" color="#000000"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">14	  </text>
<text top="109" left="108" width="39" height="33" font="6">1  I</text>
<text top="114" left="148" width="138" height="26" font="7">NTRODUCTION</text>
<text top="109" left="286" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="693" height="18" font="0">Traditional  companies  and  institutions  are  making  use  of  e-commerce  to  overcome  the </text>
<text top="191" left="108" width="693" height="18" font="0">boundaries  of  space  and  time:  it  allows  them  to  globalize  their  operations  and  offer  a  more </text>
<text top="219" left="108" width="693" height="18" font="0">personalized  service  to  the  customer.  Moreover,  many  entrepreneurs  took  advantage  of  the </text>
<text top="246" left="108" width="416" height="18" font="0">benefits of e-commerce and created new business models</text>
<text top="247" left="525" width="4" height="12" font="10">1</text>
<text top="246" left="529" width="8" height="18" font="0">. </text>
<text top="290" left="108" width="694" height="18" font="0">E-commerce has greatly evolved for forty years of existence and is still evolving continuously, </text>
<text top="318" left="108" width="693" height="18" font="0">as well as the software offered to support it. When searching for e-commerce solutions, almost </text>
<text top="346" left="108" width="693" height="18" font="0">all  offered  systems  are  focused  on  building  web-shops,  despite  of  the  fact  that  electronic </text>
<text top="374" left="108" width="394" height="18" font="0">commerce is not just about web shopping any longer.  </text>
<text top="417" left="108" width="4" height="18" font="0"> </text>
<text top="460" left="108" width="61" height="25" font="2">1.1  M</text>
<text top="465" left="170" width="76" height="20" font="0">OTIVATION</text>
<text top="460" left="245" width="5" height="25" font="2">	  </text>
<text top="504" left="108" width="693" height="18" font="0">As  it  will  be  demonstrated  in  the  section  Current  Alternatives  1.3.4,  it  is  safe  to  say  that </text>
<text top="533" left="108" width="693" height="18" font="0">customizable  software  solutions  are  too  rigid  to  give  an  efficient  and  profitable  answer  to  a </text>
<text top="561" left="108" width="689" height="18" font="0">future  e-commerce  context.  So  instead  of  offering  a  final  product  pre-built  on  top  of  an  e-</text>
<text top="589" left="108" width="693" height="18" font="0">commerce platform and customize it to fit the merchant’s needs, why not provide a robust and </text>
<text top="617" left="108" width="648" height="18" font="0">flexible e-commerce platform to let merchants build what they need from the beginning? </text>
<text top="660" left="108" width="693" height="18" font="0">It was that particular question that led the team of SPHERE.IO to design and develop this new </text>
<text top="688" left="108" width="693" height="18" font="0">commerce platform-as-a-service. Their main goal was creating an e-commerce platform with a </text>
<text top="717" left="108" width="693" height="18" font="0">set of tools to allow developers to easily access and process all commerce data from within any </text>
<text top="744" left="108" width="145" height="18" font="0">kind of application. </text>
<text top="787" left="108" width="693" height="18" font="0">The SPHERE.IO backend system, where all commerce data is stored, is directly accessible via </text>
<text top="816" left="108" width="693" height="18" font="0">a  RESTful  web  API,  allowing  any  external  system  to  use  the  data,  regardless  of  the </text>
<text top="844" left="108" width="693" height="18" font="0">programming  language  or  chosen  framework.  In  order  to  provide  a  more  comfortable </text>
<text top="872" left="108" width="693" height="18" font="0">development  experience,  they  built  the  first  of  many  open-source  client  libraries  to  come:  a </text>
<text top="900" left="108" width="693" height="18" font="0">Java  client  library.  On  top  of  it  they  created  the  SPHERE.IO  Play  SDK,  a  toolkit  especially </text>
<text top="928" left="108" width="650" height="18" font="0">aimed for building web applications with ease using the Play web framework (Figure 1.1). </text>
<text top="971" left="108" width="4" height="18" font="0"> </text>
<text top="993" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1031" left="108" width="4" height="12" font="10">1</text>
<text top="1032" left="113" width="655" height="17" font="11"> Deal-of-the-day (short time limited offers) or Discovery Commerce (periodical delivery of selected </text>
<text top="1049" left="108" width="669" height="17" font="11">goods) are only some of the new business models that became popular thanks to e-commerce [Pie12].</text>
<text top="1048" left="778" width="4" height="18" font="0"> </text>
</page>
<page number="15" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="12" size="11" family="Times" color="#000000"/>
	<fontspec id="13" size="11" family="Times" color="#000000"/>
<image top="109" left="311" width="285" height="482" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-15_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  15	  </text>
<text top="576" left="595" width="4" height="18" font="0"> </text>
<text top="615" left="234" width="437" height="15" font="12"><b>Figure 1.1</b>: Diagram of a typical Java web application using SPHERE.IO.</text>
<text top="613" left="672" width="4" height="18" font="0"> </text>
<text top="653" left="108" width="4" height="18" font="0"> </text>
<text top="697" left="108" width="693" height="18" font="0">Since  no  system  has  ever  been  developed  with  this  platform  before,  except  for  some  small </text>
<text top="725" left="108" width="693" height="18" font="0">testing sites, it is required to implement a realistic e-commerce application on top of it in order </text>
<text top="753" left="108" width="693" height="18" font="0">to test its benefits and correct its flaws. It is also necessary to have a bootstrap project from </text>
<text top="781" left="108" width="489" height="18" font="0">which other future internal or external projects may reuse its code. </text>
<text top="824" left="108" width="4" height="18" font="0"> </text>
<text top="867" left="108" width="57" height="25" font="2">1.2  O</text>
<text top="871" left="165" width="68" height="20" font="0">BJECTIVES</text>
<text top="867" left="234" width="5" height="25" font="2">	  </text>
<text top="911" left="108" width="693" height="18" font="0">The project has two main objectives that are strongly connected. One objective is to analyze, </text>
<text top="939" left="108" width="693" height="18" font="0">design  and  develop  the  first  web-shop  using  the  SPHERE.IO  platform.  This  implementation </text>
<text top="967" left="108" width="693" height="18" font="0">will provide a first open source template, which then can be reused by developers to build their </text>
<text top="996" left="108" width="693" height="18" font="0">own web-shops. Additionally the source code will serve as a live documentation about how to </text>
<text top="1023" left="108" width="128" height="18" font="0">use the platform. </text>
</page>
<page number="16" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="14" size="17" family="Times" color="#000000"/>
	<fontspec id="15" size="13" family="Times" color="#000000"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">16	  </text>
<text top="110" left="108" width="689" height="18" font="0">The  second  objective  is  to  evaluate  the  capability  of  SPHERE.IO  to  compete  with  current  e-</text>
<text top="138" left="108" width="693" height="18" font="0">commerce  solutions.  Better  alternatives  will  be  proposed  to  the  platform  development  team </text>
<text top="166" left="108" width="693" height="18" font="0">when  needed,  aiming  to  improve  its  initial  design.  This  evaluation  can  be  achieved  by  the </text>
<text top="194" left="108" width="693" height="18" font="0">development of the previously mentioned web-shop, which will assist as a practical example to </text>
<text top="222" left="108" width="564" height="18" font="0">test the suitability of the platform to build these kind of popular applications. </text>
<text top="265" left="108" width="4" height="18" font="0"> </text>
<text top="308" left="108" width="55" height="25" font="2">1.3  B</text>
<text top="312" left="163" width="88" height="20" font="0">ACKGROUND</text>
<text top="308" left="252" width="5" height="25" font="2">	  </text>
<text top="352" left="108" width="693" height="18" font="0">Before attempting to evaluate any e-commerce solution it is necessary to exactly define what is </text>
<text top="380" left="108" width="693" height="18" font="0">understood as electronic commerce (section What is e-commerce 1.3.1). It is also important to </text>
<text top="408" left="108" width="693" height="18" font="0">take a look at history in order to comprehend what elements made e-commerce become what </text>
<text top="436" left="108" width="693" height="18" font="0">it is today (section History of e-commerce 1.3.2). With that knowledge in hand, we will get a </text>
<text top="465" left="108" width="693" height="18" font="0">glimpse of the future and decide whether the current e-commerce solutions have a place in it </text>
<text top="493" left="108" width="276" height="18" font="0">(section Future of e-commerce 1.3.3). </text>
<text top="535" left="108" width="4" height="18" font="0"> </text>
<text top="578" left="108" width="71" height="24" font="14"><i>1.3.1  W</i></text>
<text top="582" left="180" width="55" height="19" font="15"><i>HAT	  IS	  E</i></text>
<text top="578" left="236" width="6" height="24" font="14"><i>-­‐</i></text>
<text top="582" left="242" width="80" height="19" font="15"><i>COMMERCE</i></text>
<text top="578" left="323" width="4" height="24" font="14"><i>	  </i></text>
<text top="621" left="108" width="693" height="18" font="0">As a general definition, commerce is the branch of business that includes all activities, which </text>
<text top="649" left="108" width="693" height="18" font="0">directly  or  indirectly  are  involved  in  exchanging  goods  or  services.  The  trade  can  be  held </text>
<text top="677" left="108" width="693" height="18" font="0">between  businesses  or  individuals,  eventually  achieving  the  goal  of  transferring  goods  from </text>
<text top="705" left="108" width="693" height="18" font="0">producers  to  consumers.  When  information  and  communication  technologies  are  applied  to </text>
<text top="733" left="108" width="689" height="18" font="0">support these activities, we are referring to electronic commerce, also commonly known as e-</text>
<text top="761" left="108" width="141" height="18" font="0">commerce [Akr11]. </text>
<text top="805" left="108" width="693" height="18" font="0">Currently there are four major types of e-commerce, classified based on the roles involved in </text>
<text top="833" left="108" width="693" height="18" font="0">the  trade:  business-to-business  (B2B),  business-to-consumer  (B2C),  consumer-to-business </text>
<text top="861" left="108" width="693" height="18" font="0">(C2B)  and  consumer-to-consumer  (C2C).  Other  lesser  types  may  involve  roles  such  as </text>
<text top="889" left="108" width="693" height="18" font="0">government,  employee  or  manager  in  order  to  define  more  specialized  e-commerce business </text>
<text top="917" left="108" width="693" height="18" font="0">models. Though any of those types can be considered to be subtypes of the four major models </text>
<text top="945" left="108" width="70" height="18" font="0">[Nem11]. </text>
<text top="988" left="108" width="693" height="18" font="0">Business-to-business comprehends those commerce transactions held between businesses. In </text>
<text top="1016" left="108" width="693" height="18" font="0">e-commerce the volume of B2B sales is around twice the size of B2C [Hoa12], mainly because a </text>
<text top="1045" left="108" width="693" height="18" font="0">typical  supply  chain  has  multiple  B2B  transactions  involving  suppliers,  manufacturers  and </text>
</page>
<page number="17" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="30" height="20" font="0">  17	  </text>
<text top="110" left="108" width="693" height="18" font="0">distributors; while there is only one B2C transaction with the end customer at the very end of </text>
<text top="138" left="108" width="693" height="18" font="0">the  chain.  Communication  and  collaboration  interactions  between  businesses  and  within </text>
<text top="166" left="108" width="693" height="18" font="0">companies are also included as part of B2B, in the form of email or a more specialized system </text>
<text top="193" left="108" width="487" height="18" font="0">to exchange business data, like Electronic Data Interchange (EDI). </text>
<text top="237" left="108" width="693" height="18" font="0">Business-to-consumer  describes  all  activities  involving  businesses  providing  products  or </text>
<text top="265" left="108" width="693" height="18" font="0">services to end consumers. B2C is the type of e-commerce with higher number of sales behind </text>
<text top="293" left="108" width="693" height="18" font="0">B2B,  but  it  is  by  far  the  most  familiar  amongst  the  population.  Companies  invest  a  lot  of </text>
<text top="321" left="108" width="693" height="18" font="0">resources  in  improving  the  customer  experience  when  interacting  with  their  e-commerce </text>
<text top="350" left="108" width="693" height="18" font="0">interfaces.  These  can  be  in  the  form  of  electronic  retailing  or  media  to  communicate  with </text>
<text top="378" left="108" width="693" height="18" font="0">customers such as email. Electronic retailing, also known as e-tailing, is the largest part of B2C </text>
<text top="406" left="108" width="693" height="18" font="0">e-commerce, consisting of an online catalog of a retail store or shopping mall, usually called </text>
<text top="434" left="108" width="320" height="18" font="0">web-shop when it is accessed from the web. </text>
<text top="477" left="108" width="693" height="18" font="0">In  consumer-to-business  the  B2C  process  is  reversed,  thus  the  end  customer  is  the  one  that </text>
<text top="505" left="108" width="693" height="18" font="0">offers  goods  or  services  to  the  company  to  complete  a  business  process  or  gain  competitive </text>
<text top="533" left="108" width="693" height="18" font="0">advantage.  It  is  common  in  specialized  blogs  and  forums,  where  companies  offer  money  to </text>
<text top="561" left="108" width="514" height="18" font="0">their owners in exchange of advertisement or review of their products. </text>
<text top="605" left="108" width="693" height="18" font="0">Consumer-to-consumer  is  a  way  of  e-commerce  where  a  third  party  facilitates  transactions </text>
<text top="633" left="108" width="693" height="18" font="0">between consumers electronically. The most popular example of C2C e-commerce is the online </text>
<text top="661" left="108" width="698" height="18" font="0">auction, in which customers bid to purchase an item that another consumer has posted for sale, </text>
<text top="688" left="108" width="446" height="18" font="0">while the third party charges a commission for the exchange. </text>
<text top="732" left="108" width="693" height="18" font="0">Besides these four major forms of e-commerce, there are other interesting concepts that have </text>
<text top="760" left="108" width="693" height="18" font="0">gained  popularity  these  last  years:  social  and  mobile  commerce.  Social  commerce  is  the </text>
<text top="788" left="108" width="693" height="18" font="0">adoption of social networking features in the context of e-commerce. When it comes to offline </text>
<text top="816" left="108" width="693" height="18" font="0">shopping, it is a natural practice to gather information from oneself’s personal social networks </text>
<text top="844" left="108" width="693" height="18" font="0">before  purchasing  a  product.  People  usually  consult  their  family  and  friends  for  advice,  and </text>
<text top="873" left="108" width="693" height="18" font="0">they  often  speak  to  the  shopkeeper  about  suitable  products.  Joining  social  networks  with </text>
<text top="901" left="108" width="693" height="18" font="0">online stores allows customers to have the same experience, with the advantage of reaching a </text>
<text top="929" left="108" width="366" height="18" font="0">largest range of people in a shorter time [GWL11]. </text>
<text top="972" left="108" width="689" height="18" font="0">On  the  other  hand  m-commerce,  an  abbreviation  for  mobile  commerce,  is  any  kind  of  e-</text>
<text top="1000" left="108" width="693" height="18" font="0">commerce  activity  that  relies  on  the  usage  of  wireless  devices,  such  as  cell  phones,  personal </text>
<text top="1028" left="108" width="693" height="18" font="0">digital assistants (PDA) and smartphones. The range of devices enabled for m-commerce also </text>
<text top="1056" left="108" width="693" height="18" font="0">includes general purpose wireless computers, like tablet and laptop computers [TNW01], but </text>
</page>
<page number="18" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">18	  </text>
<text top="110" left="108" width="693" height="18" font="0">are  not  usually  part  of  research  studies.  The  reason  behind  that  is  the  existence  of  hybrid </text>
<text top="138" left="108" width="693" height="18" font="0">devices  between  mobile  phones  and  computers,  such  as  smartphones,  that  are  more </text>
<text top="165" left="108" width="283" height="18" font="0">specifically designed for m-commerce. </text>
<text top="209" left="108" width="4" height="18" font="0"> </text>
<text top="251" left="108" width="66" height="24" font="14"><i>1.3.2  H</i></text>
<text top="255" left="175" width="81" height="19" font="15"><i>ISTORY	  OF	  E</i></text>
<text top="251" left="257" width="6" height="24" font="14"><i>-­‐</i></text>
<text top="255" left="263" width="80" height="19" font="15"><i>COMMERCE</i></text>
<text top="251" left="344" width="4" height="24" font="14"><i>	  </i></text>
<text top="294" left="108" width="693" height="18" font="0">E-commerce  has  been  gaining  more  and  more  relevance  in  the  business  context  since  the </text>
<text top="322" left="108" width="693" height="18" font="0">moment it was introduced back in the mid-sixties, when the standard that became known as </text>
<text top="350" left="108" width="693" height="18" font="0">EDI was developed and started replacing traditional mailing and faxing documents. Later in </text>
<text top="378" left="108" width="693" height="18" font="0">1979  the  British  inventor  Michael  Aldrich  invented  what  he  called  teleshopping,  an  early </text>
<text top="406" left="108" width="260" height="18" font="0">version of online shopping [Ald10]. </text>
<text top="449" left="108" width="693" height="18" font="0">The  system  consisted  of  a  domestic  television  connected  via  telephone  line  to  a  real-time </text>
<text top="478" left="108" width="693" height="18" font="0">transaction  processing  system,  with  a  shopping  transaction  program  installed.  It  used  a </text>
<text top="506" left="108" width="693" height="18" font="0">slightly  modified  television  with  capabilities  to  communicate  via  domestic  telephone  line </text>
<text top="534" left="108" width="480" height="18" font="0">thanks  to  a  modem  chip  originally  used  in  the  Prestel  system</text>
<text top="535" left="589" width="6" height="12" font="10">2</text>
<text top="534" left="594" width="207" height="18" font="0">.  Aldrich’s  system  was  not </text>
<text top="562" left="108" width="693" height="18" font="0">properly using the Prestel system, but the Prestel data transmission protocol to communicate </text>
<text top="590" left="108" width="693" height="18" font="0">with  computers  via  telephone  line,  and  therefore  to  convert  televisions  into  real-time </text>
<text top="618" left="108" width="134" height="18" font="0">terminals [Ald11]. </text>
<text top="661" left="108" width="4" height="18" font="0"> </text>
<text top="993" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1031" left="108" width="6" height="12" font="10">2</text>
<text top="1032" left="114" width="687" height="17" font="11"> System developed by the British public telephone system, whereby news and any text information were </text>
<text top="1049" left="108" width="326" height="17" font="11">received by a television through a telephone line. </text>
<text top="1048" left="434" width="4" height="18" font="0"> </text>
</page>
<page number="19" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="16" size="11" family="Times" color="#000000"/>
<image top="109" left="279" width="349" height="296" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-19_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  19	  </text>
<text top="390" left="627" width="4" height="18" font="0"> </text>
<text top="430" left="246" width="413" height="15" font="12"><b>Figure 1.2</b>: 1979 pre-production online shopping system by Redifon.</text>
<text top="427" left="660" width="4" height="18" font="0"> </text>
<text top="460" left="355" width="196" height="15" font="16"><i>Source: Michael Aldrich Archive</i></text>
<text top="457" left="551" width="4" height="18" font="0"> </text>
<text top="490" left="108" width="4" height="18" font="0"> </text>
<text top="534" left="108" width="142" height="18" font="0">Redifon Computers</text>
<text top="534" left="251" width="6" height="12" font="10">3</text>
<text top="534" left="257" width="545" height="18" font="0">, the company for which Michael Aldrich was working at that time, started </text>
<text top="562" left="108" width="693" height="18" font="0">selling this online shopping system (Figure 1.2) and installed the first operational application </text>
<text top="590" left="108" width="208" height="18" font="0">for  Thomson  Travel  Group</text>
<text top="590" left="316" width="6" height="12" font="10">4</text>
<text top="590" left="322" width="480" height="18" font="0"> in  1981.  Aldrich  initially  designed  his  system  for  B2C  online </text>
<text top="618" left="108" width="693" height="18" font="0">shopping:  it  worked  from  an  inexpensive  domestic  television,  with  simple  human  interface </text>
<text top="646" left="108" width="693" height="18" font="0">and using domestic telephone line; despite of that, initial demand was B2B online shopping for </text>
<text top="674" left="108" width="561" height="18" font="0">holiday travel, vehicle and spare parts, sales, loan finance and credit ratings.  </text>
<text top="717" left="108" width="693" height="18" font="0">It  was  in  1984  when  Aldrich’s  teleshopping  system  finally  reached  Jane  Snowball’s  home,  a </text>
<text top="745" left="108" width="693" height="18" font="0">seventy-two-year-old  woman  who  became  the  first  ever  online  home  shopper  when  she </text>
<text top="774" left="108" width="693" height="18" font="0">ordered some groceries from the supermarket chain Tesco (Figure 1.3). The system she used </text>
<text top="802" left="108" width="693" height="18" font="0">was  called  GSS  (Gateshead  Shopping  Service),  and  was  part  of  a  social  service  experiment </text>
<text top="830" left="108" width="693" height="18" font="0">project  in  the  English  city  of  Gateshead,  aimed  at  elderly  people  who  were  not  able  to  go </text>
<text top="858" left="108" width="698" height="18" font="0">shopping. Another larger project appeared two years later in another city of England, Bradford, </text>
<text top="886" left="108" width="693" height="18" font="0">for  disadvantaged  citizens.  In  both  projects  it  was  necessary  to  develop  an  early  version  of </text>
<text top="914" left="108" width="407" height="18" font="0">what we know today as a cart shopping system [Ald09]. </text>
<text top="976" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1015" left="108" width="6" height="12" font="10">3</text>
<text top="1015" left="114" width="381" height="17" font="11"> Company belonging to Rediffusion Group of Companies. </text>
<text top="1014" left="495" width="4" height="18" font="0"> </text>
<text top="1048" left="108" width="6" height="12" font="10">4</text>
<text top="1049" left="114" width="266" height="17" font="11"> Currently known as Thomson Holidays.</text>
<text top="1047" left="381" width="4" height="18" font="0"> </text>
</page>
<page number="20" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="17" size="12" family="Times" color="#000000"/>
<image top="109" left="312" width="281" height="215" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-20_1.jpg"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">20	  </text>
<text top="309" left="594" width="4" height="18" font="0"> </text>
<text top="349" left="244" width="417" height="15" font="12"><b>Figure 1.3</b>: Mrs. Snowball ordering groceries from her home in 1984.</text>
<text top="346" left="662" width="4" height="18" font="0"> </text>
<text top="379" left="355" width="196" height="15" font="16"><i>Source: Michael Aldrich Archive</i></text>
<text top="376" left="551" width="4" height="18" font="0"> </text>
<text top="409" left="108" width="4" height="18" font="0"> </text>
<text top="453" left="108" width="693" height="18" font="0">Elsewhere in Europe similar systems appeared which involved an interactive television using </text>
<text top="481" left="108" width="693" height="18" font="0">telephone line. Especially important was Minitel system invented in 1982 by France Télécom, </text>
<text top="509" left="108" width="693" height="18" font="0">that can be considered the most successful of all these early online services. But even in this </text>
<text top="537" left="108" width="694" height="18" font="0">case teleshopping was only successful in some B2B activities. B2C was not commercially viable </text>
<text top="565" left="108" width="693" height="18" font="0">due to the difficulty of common people to access the necessary technology. The only working </text>
<text top="593" left="108" width="693" height="18" font="0">systems were social experiments run by local governments in partnership with supermarkets </text>
<text top="621" left="108" width="427" height="18" font="0">to deliver groceries to senior and disabled citizens [BB05]. </text>
<text top="664" left="108" width="693" height="18" font="0">E-commerce  needed  a  way  to  reach  a  wider  variety  of  people  to  work,  especially  outside </text>
<text top="693" left="108" width="693" height="18" font="0">business-to-business context. Tim Berners-Lee offered that possibility in 1990 when he joined </text>
<text top="721" left="108" width="693" height="18" font="0">hypertext  technology  with  the  Internet  creating  the  World  Wide  Web  [Ber00].  Despite  of </text>
<text top="749" left="108" width="499" height="18" font="0">having the technology, commercial use of Internet was not allowed</text>
<text top="750" left="607" width="6" height="12" font="10">5</text>
<text top="749" left="613" width="189" height="18" font="0"> when the web appeared. </text>
<text top="777" left="108" width="693" height="18" font="0">In 1991 this restriction was lifted, but only under the condition of paying a fee according to the </text>
<text top="805" left="108" width="693" height="18" font="0">usage  of  the  network,  which  was  destined  to  fund  the  networking  infrastructure.  These </text>
<text top="833" left="108" width="693" height="18" font="0">limitations were also resolved in 1995 when commercial use of the Internet became completely </text>
<text top="861" left="108" width="94" height="18" font="0">free [Off93]. </text>
<text top="904" left="108" width="693" height="18" font="0">Before that, in 1994 Netscape launched the first commercial browser, with the cryptographic </text>
<text top="933" left="108" width="693" height="18" font="0">protocol SSL along with it. With the web being accessed by an increasingly amount of people </text>
<text top="976" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1015" left="108" width="6" height="12" font="10">5</text>
<text top="1015" left="114" width="667" height="17" font="11"> In 1990 most of Internet backbone networks belonged to the National Science Foundation Network. </text>
<text top="1033" left="108" width="687" height="17" font="11">This network was destined to research and educational purposes and had an <i>Acceptable Use Policy </i>that </text>
<text top="1049" left="108" width="333" height="17" font="11">prohibited purely commercial traffic from using it.</text>
<text top="1048" left="442" width="4" height="18" font="0"> </text>
</page>
<page number="21" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="30" height="20" font="0">  21	  </text>
<text top="110" left="108" width="693" height="18" font="0">and with a protocol to ensure secure online sales, companies finally had the chance to build a </text>
<text top="138" left="108" width="693" height="18" font="0">profitable  business  for  B2C  in  an  expanding  environment.  The  first  web-shops  started  to </text>
<text top="166" left="108" width="693" height="18" font="0">appear,  as  well  as  e-commerce  solutions  built  to  allow  merchants  sell  online.  Only  one  year </text>
<text top="194" left="108" width="693" height="18" font="0">later Amazon.com and eBay were born, both considered to be amongst the largest online store </text>
<text top="222" left="108" width="177" height="18" font="0">corporations nowadays. </text>
<text top="265" left="108" width="693" height="18" font="0">Of course all these changes were accompanied by a revolution in payment systems. A series of </text>
<text top="293" left="108" width="693" height="18" font="0">innovations have been introduced to our daily life during the last thirty years, being the most </text>
<text top="321" left="108" width="693" height="18" font="0">significant to e-commerce: debit and prepaid cards, online banking and mobile payments via </text>
<text top="350" left="108" width="693" height="18" font="0">cell  phone.  All  of  them  contributed  to  increase  the  number  of  payment  service  providers </text>
<text top="378" left="108" width="693" height="18" font="0">offered, thus facilitating online payments. Nowadays one of the most important e-commerce </text>
<text top="406" left="108" width="693" height="18" font="0">payment systems is PayPal, in charge of processing payments between the merchant and the </text>
<text top="434" left="108" width="693" height="18" font="0">acquirer  bank,  therefore  allowing  to  send  and  receive  payments  securely  over  the  Internet </text>
<text top="462" left="108" width="79" height="18" font="0">[KRSS12]. </text>
<text top="505" left="108" width="4" height="18" font="0"> </text>
<text top="548" left="108" width="63" height="24" font="14"><i>1.3.3  F</i></text>
<text top="551" left="172" width="80" height="19" font="15"><i>UTURE	  OF	  E</i></text>
<text top="548" left="252" width="6" height="24" font="14"><i>-­‐</i></text>
<text top="551" left="258" width="80" height="19" font="15"><i>COMMERCE</i></text>
<text top="548" left="339" width="4" height="24" font="14"><i>	  </i></text>
<text top="590" left="108" width="693" height="18" font="0">Despite  of  being  only  forty  years  old,  e-commerce  has  become  a  very  important  area  in  the </text>
<text top="618" left="108" width="689" height="18" font="0">business  environment.  Looking  back  we  see  the  way  every  technology  has  changed  the  e-</text>
<text top="646" left="108" width="698" height="18" font="0">commerce scenario and given more importance to it. From new protocols to innovative devices, </text>
<text top="674" left="108" width="693" height="18" font="0">including  payment  systems  and  social  trends;  all  has  been  quickly  adopted  by  companies  in </text>
<text top="703" left="108" width="693" height="18" font="0">order to gain competitive advantage. The introduction rate of new elements in the e-commerce </text>
<text top="731" left="108" width="693" height="18" font="0">context  seems  to  have  grown  exponentially  over  the  last  few years,  as  well  as  the  worldwide </text>
<text top="759" left="108" width="154" height="18" font="0">population involved. </text>
<text top="802" left="108" width="693" height="18" font="0">In North America the percentage of digital buyers is currently of 72% of each Internet user and </text>
<text top="830" left="108" width="693" height="18" font="0">is expected to grow up to 77.7% by 2017. A similar growth is expected in Western Europe, with </text>
<text top="858" left="108" width="693" height="18" font="0">a great difference between northern and southern countries: U.K. and Germany account 87% </text>
<text top="886" left="108" width="693" height="18" font="0">and 80% of e-commerce customers in 2013, respectively, and is expected to grow around 3%. </text>
<text top="915" left="108" width="693" height="18" font="0">On the other hand, in Spain the percentage is 54% and in Italy 44%, with a predicted growth of </text>
<text top="943" left="108" width="693" height="18" font="0">10%.  The  highest  penetration  rate  of  Internet  users  in  e-commerce  will  happen  in  China, </text>
<text top="970" left="108" width="515" height="18" font="0">where the amount of digital buyers is going to increase 20% [eMa613]. </text>
<text top="1014" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="22" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="270" width="366" height="377" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-22_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">22	  </text>
<text top="471" left="636" width="4" height="18" font="0"> </text>
<text top="511" left="274" width="358" height="15" font="12"><b>Figure 1.4</b>: U.S. retail e-commerce sales from 2011 to 2017.</text>
<text top="508" left="632" width="4" height="18" font="0"> </text>
<text top="541" left="361" width="183" height="15" font="16"><i>Source: eMarketer, April 2013</i></text>
<text top="538" left="545" width="4" height="18" font="0"> </text>
<text top="571" left="108" width="4" height="18" font="0"> </text>
<text top="615" left="108" width="693" height="18" font="0">In number of sales, all major studies foresee a continuous growth in U.S. e-tailing income in </text>
<text top="643" left="108" width="693" height="18" font="0">the next few years at a compound annual rate that goes from 10% to 14%, reaching between </text>
<text top="671" left="108" width="693" height="18" font="0">$370 and $434.2 billion from e-tailing sales in 2017 (Figure 1.4) [eMa413]. When it comes to </text>
<text top="699" left="108" width="693" height="18" font="0">Western Europe obtained results are similar with a growth rate of 11%, reaching even 18% in </text>
<text top="727" left="108" width="693" height="18" font="0">southern European countries where the e-commerce market is not yet as mature as in North </text>
<text top="755" left="108" width="693" height="18" font="0">America [OG13]. Same reason applies to Asia and Latin America with the highest growth rates </text>
<text top="784" left="108" width="693" height="18" font="0">in the world, around 25% growth per year. Particularly high are the growthing rates in China </text>
<text top="811" left="108" width="588" height="18" font="0">and Indonesia, where a 65% and 71% is expected in 2013, respectively [eMa613]. </text>
<text top="854" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="23" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="271" width="365" height="326" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-23_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  23	  </text>
<text top="420" left="635" width="4" height="18" font="0"> </text>
<text top="460" left="271" width="364" height="15" font="12"><b>Figure 1.5</b>: U.S. retail m-commerce sales from 2011 to 2016.</text>
<text top="457" left="635" width="4" height="18" font="0"> </text>
<text top="490" left="351" width="204" height="15" font="16"><i>Source: eMarketer, January 2013</i></text>
<text top="488" left="555" width="4" height="18" font="0"> </text>
<text top="521" left="108" width="4" height="18" font="0"> </text>
<text top="564" left="108" width="693" height="18" font="0">It  is  also  a  fact  that  mobile  devices  are  being  quickly  adopted  by  both  merchants  and </text>
<text top="592" left="108" width="693" height="18" font="0">customers, due to all possibilities that they offer in the expanding e-commerce scenario. Some </text>
<text top="620" left="108" width="693" height="18" font="0">studies show how retail sales made on smartphones will grow from $8 billion in 2012 to $31 </text>
<text top="649" left="108" width="693" height="18" font="0">billion by 2017, becoming a 9% of e-commerce total sales [MERJ13]. When tablet computers </text>
<text top="677" left="108" width="693" height="18" font="0">are also included in the research, m-commerce sales grow from $24.66 to $86.86 billions in </text>
<text top="704" left="108" width="478" height="18" font="0">2016, having 24% of retail e-commerce (see Figure 1.5) [eMa113]. </text>
<text top="748" left="108" width="693" height="18" font="0">A look at the future of e-commerce reveals a continuous growth in sales and customers, as well </text>
<text top="776" left="108" width="693" height="18" font="0">as the fast adoption of new technologies such as mobile devices. Therefore it can be expected </text>
<text top="804" left="108" width="693" height="18" font="0">that  new  devices  and  different  ways  of  commerce  activities  will  appear  in  the  near  future.  It </text>
<text top="832" left="108" width="693" height="18" font="0">will  be  therefore  necessary  for  merchants  to  integrate  all  their  existing  e-commerce </text>
<text top="860" left="108" width="615" height="18" font="0">infrastructure in every context in order to gain advantage from the expected growth. </text>
<text top="903" left="108" width="4" height="18" font="0"> </text>
<text top="946" left="108" width="64" height="24" font="14"><i>1.3.4  C</i></text>
<text top="950" left="173" width="157" height="19" font="15"><i>URRENT	  ALTERNATIVES</i></text>
<text top="946" left="331" width="4" height="24" font="14"><i>	  </i></text>
<text top="988" left="108" width="693" height="18" font="0">Are  the  current  e-commerce  solutions  ready  for  bringing  quick  and  affordable  integration  to </text>
<text top="1016" left="108" width="689" height="18" font="0">future scenarios? Almost all shopping cart solutions offered for online shopping are designer-</text>
<text top="1045" left="108" width="693" height="18" font="0">oriented  built  web-shops,  with  multiple  plug-in  components,  customizable  options  and </text>
</page>
<page number="24" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">24	  </text>
<text top="110" left="108" width="693" height="18" font="0">exchangeable  templates.  The  merchant  requires  the  e-commerce  solution  to  offer  a  certain </text>
<text top="138" left="108" width="693" height="18" font="0">feature set in order to use it, otherwise the cost of implementing it may not be worthwhile or </text>
<text top="165" left="108" width="140" height="18" font="0">simply impossible. </text>
<text top="209" left="108" width="693" height="18" font="0">With  the  raising  of  cloud  computing,  many  licensed  products  have  move  to  a  more  flexible </text>
<text top="237" left="108" width="693" height="18" font="0">software-as-a-service  (SaaS)  model,  allowing  merchants  to  easily  scale  their  web-shops  as </text>
<text top="265" left="108" width="693" height="18" font="0">their businesses grow. Despite of that, merchants are still very limited to what the software is </text>
<text top="293" left="108" width="693" height="18" font="0">offering,  and  depend  on  the  product  to  evolve  in  order  to  expand  their  e-commerce </text>
<text top="321" left="108" width="693" height="18" font="0">infrastructure to different environments. Of course, they can also use an independent product </text>
<text top="350" left="108" width="693" height="18" font="0">to  support  the  missing  scenario,  but  with  the  high  cost  of  having  to  maintain  two  or  more </text>
<text top="377" left="108" width="438" height="18" font="0">different backend data, having to connect them all together. </text>
<text top="421" left="108" width="693" height="18" font="0">A  very  interesting  example  of  these  models  is  Magento,  a  PHP  open-source  project  that  was </text>
<text top="449" left="108" width="693" height="18" font="0">initially  launched  in  2008  and  nowadays  enjoys  great  popularity.  The  first  version  offers  a </text>
<text top="477" left="108" width="693" height="18" font="0">typical  out-of-the-box  web-shop,  highly  customizable  and  with  a  wide  variety  of  plug-in  and </text>
<text top="505" left="108" width="693" height="18" font="0">templates.  The  experience  of  building  a  web-shop  with  it  was  very  comfortable,  since  all  the </text>
<text top="533" left="108" width="693" height="18" font="0">changes  were  done  directly  with  an  administration  interface,  not  requiring  any  technical </text>
<text top="561" left="108" width="87" height="18" font="0">knowledge. </text>
<text top="605" left="108" width="693" height="18" font="0">Everything was comfortable until the moment the template was not offering a functionality or </text>
<text top="633" left="108" width="693" height="18" font="0">simply not the way it was needed (e.g. displaying the breadcrumb in a different way or place). </text>
<text top="661" left="108" width="693" height="18" font="0">In that moment finding the files where the logic that needed to be changed was located became </text>
<text top="689" left="108" width="693" height="18" font="0">a  very  hard  task  and  changes  were  not  easy  to  make  either.  This  experience  reflects  exactly </text>
<text top="717" left="108" width="434" height="18" font="0">how developer-unfriendly these kind of models usually are. </text>
<text top="760" left="108" width="693" height="18" font="0">Magento also offers a SaaS version of this product, called Magento Go. The experience is even </text>
<text top="788" left="108" width="693" height="18" font="0">worse, since any kind of customization is limited to what they offer in the administration page, </text>
<text top="816" left="108" width="693" height="18" font="0">impossibiliting any modification on the code. In 2010 Magento announced the release of the </text>
<text top="844" left="108" width="693" height="18" font="0">second version, Magento 2.0. This version promised to be more developer friendly, but so far </text>
<text top="872" left="108" width="253" height="18" font="0">the product has not been released. </text>
<text top="915" left="108" width="4" height="18" font="0"> </text>
<text top="959" left="108" width="54" height="25" font="2">1.4  P</text>
<text top="963" left="162" width="63" height="20" font="0">LANNING</text>
<text top="959" left="225" width="5" height="25" font="2">	  </text>
<text top="1003" left="108" width="693" height="18" font="0">The planning of the project includes the choice of the methodology used and a description of </text>
<text top="1031" left="108" width="693" height="18" font="0">the development process. According to the chosen methodology and the analysis of the major </text>
<text top="1059" left="108" width="693" height="18" font="0">risks  of  the  project,  an  initial  timeline  is  proposed.  It  is  important  to  understand  that  the </text>
</page>
<page number="25" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="30" height="20" font="0">  25	  </text>
<text top="110" left="108" width="693" height="18" font="0">current  project  is  part  of  a  bigger  project  that  involves  the  development  of  a  template  that </text>
<text top="138" left="108" width="693" height="18" font="0">integrates  all  the  functionalities  offered  in  the  platform.  That  means  that  both  projects  are </text>
<text top="165" left="108" width="359" height="18" font="0">connected, hence the teams have to work closely. </text>
<text top="209" left="108" width="4" height="18" font="0"> </text>
<text top="251" left="108" width="71" height="24" font="14"><i>1.4.1  M</i></text>
<text top="255" left="179" width="170" height="19" font="15"><i>ETHODOLOGY	  SELECTION</i></text>
<text top="251" left="350" width="4" height="24" font="14"><i>	  </i></text>
<text top="294" left="108" width="693" height="18" font="0">Some  considerations  must  taken  into  account  to  decide  the  methodology  that  is  going  to  be </text>
<text top="322" left="108" width="693" height="18" font="0">used  in  this  project.  Scope,  timing,  risks  and  objectives,  as  well  as  the  methodology  already </text>
<text top="350" left="108" width="693" height="18" font="0">used by the SPHERE.IO team; turned out to be the most decisive criteria to determine what </text>
<text top="378" left="108" width="693" height="18" font="0">methodology  is  more  appropriate  in  this  particular  case.  An  explanation  of  each  criterion  is </text>
<text top="406" left="108" width="127" height="18" font="0">presented below. </text>
<text top="449" left="108" width="693" height="18" font="0">On the one hand, the scope of the project is just limited in the present thesis, but the scope of </text>
<text top="478" left="108" width="693" height="18" font="0">the whole project is attached to the scope of the platform project, which is undefined due to </text>
<text top="506" left="108" width="693" height="18" font="0">the nature of it. The few milestones defined by the company are meant to be more a guidance </text>
<text top="534" left="108" width="693" height="18" font="0">and a time deviation is expected. The same applies to the deadline of this thesis, which is not </text>
<text top="562" left="108" width="356" height="18" font="0">yet fixed and can be moved forward if necessary. </text>
<text top="605" left="108" width="693" height="18" font="0">When it comes to objectives it is required to generate rapid and continuous value, because the </text>
<text top="633" left="108" width="693" height="18" font="0">template is going to be used in company presentations and different events before the official </text>
<text top="661" left="108" width="693" height="18" font="0">release. Besides any developer interested in the platform should be able to use it as an example </text>
<text top="690" left="108" width="693" height="18" font="0">of the current capabilities of the system. Consequently regular small releases of the template </text>
<text top="717" left="108" width="379" height="18" font="0">with new added functionalities are highly desirable. </text>
<text top="761" left="108" width="693" height="18" font="0">According to these arguments, an agile method is preferred over a heavyweight methodology </text>
<text top="789" left="108" width="693" height="18" font="0">in this situation, because of the undefined scope, the flexible deadlines, the major use of new </text>
<text top="817" left="108" width="693" height="18" font="0">technologies  and  the  need  of  rapid  value  [Kha04].  Given  that  the  methodology  used  by  the </text>
<text top="845" left="108" width="693" height="18" font="0">SPHERE.IO team is based on Scrum, an iterative and incremental agile software development </text>
<text top="873" left="108" width="693" height="18" font="0">framework, it is only natural to follow the same methodology as they do. Therefore the design </text>
<text top="901" left="108" width="693" height="18" font="0">and  implementation  of  the  template  is  going  to  be  integrated  inside  the  SPHERE.IO </text>
<text top="929" left="108" width="162" height="18" font="0">development process. </text>
<text top="973" left="108" width="693" height="18" font="0">Although all the documentation necessary for the software development is considered part of </text>
<text top="1001" left="108" width="693" height="18" font="0">the  development  process  and  thus  it  is  included  in  the  SPHERE.IO  workflow,  it  has  been </text>
<text top="1029" left="108" width="693" height="18" font="0">decided to exclude the proper wording of the present documentation from this workflow. The </text>
<text top="1057" left="108" width="693" height="18" font="0">reason is that Scrum does not explicitly cover the drafting of such a large documentation with </text>
</page>
<page number="26" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="18" size="12" family="Times" color="#1155cc"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">26	  </text>
<text top="110" left="108" width="693" height="18" font="0">no direct influence on the software implementation. In this particular case a simple sequential </text>
<text top="137" left="108" width="481" height="18" font="0">development process allows a better planning for this set of tasks. </text>
<text top="181" left="108" width="4" height="18" font="0"> </text>
<text top="223" left="108" width="66" height="24" font="14"><i>1.4.2  D</i></text>
<text top="227" left="175" width="243" height="19" font="15"><i>ESCRIPTION	  OF	  THE	  METHODOLOGY</i></text>
<text top="223" left="418" width="4" height="24" font="14"><i>	  </i></text>
<text top="265" left="108" width="378" height="18" font="0">Scrum follows the principles of the Agile Manifesto</text>
<text top="266" left="486" width="6" height="12" font="10">6</text>
<text top="265" left="492" width="310" height="18" font="0">, characteristic of all agile methodologies. </text>
<text top="294" left="108" width="693" height="18" font="0">In  order  to  adapt  these  principles,  Scrum  defines  a  number  of  flexible  practices  that  can  be </text>
<text top="322" left="108" width="693" height="18" font="0">followed in software development projects to improve some processes [SS13]. Many tools can </text>
<text top="350" left="108" width="693" height="18" font="0">be  used  to  support  these  practices,  in  this  particular  case  a  simple  project  management </text>
<text top="378" left="108" width="693" height="18" font="0">software  called  AgileZen  is  used  to  manage  and  assign  tasks.  Next  it  is  described  the </text>
<text top="406" left="108" width="350" height="18" font="0">methodology as it is used in the current project. </text>
<text top="449" left="108" width="693" height="18" font="0">In Scrum, the development process is divided into small cycles called sprints. Every two weeks </text>
<text top="478" left="108" width="693" height="18" font="0">a “Sprint Review Meeting” and a “Sprint Retrospective” is held to conclude a sprint cycle. In </text>
<text top="506" left="108" width="693" height="18" font="0">the Sprint Review Meeting each member of the team shows a short demonstration of all the </text>
<text top="534" left="108" width="693" height="18" font="0">tasks  he  was  able  to  complete  during  the  sprint.  On  the  other  hand,  in  the  Retrospective </text>
<text top="562" left="108" width="693" height="18" font="0">Meeting all elements that went well and wrong in the past sprint are written down in order to </text>
<text top="590" left="108" width="317" height="18" font="0">improve them during the following sprints. </text>
<text top="633" left="108" width="693" height="18" font="0">The same day after an hour break, a “Sprint Planning Meeting” follows in order to prepare the </text>
<text top="661" left="108" width="693" height="18" font="0">next  sprint.  In  this  meeting  all  the  team  decides  the  next  sprint’s  tasks,  which  are  then </text>
<text top="690" left="108" width="693" height="18" font="0">assigned to the corresponding members of the development team. In Scrum, the group of tasks </text>
<text top="718" left="108" width="693" height="18" font="0">of  a  sprint  is  called  the  “Sprint  Backlog”  and  is  selected  from  the  project’s  requirement  list, </text>
<text top="746" left="108" width="693" height="18" font="0">also  known  as  “Product  Backlog”.  Both  lists  are  managed  collaboratively  with  AgileZen,  the </text>
<text top="773" left="108" width="300" height="18" font="0">project management tool referred above. </text>
<text top="817" left="108" width="693" height="18" font="0">Every day of the sprint starts with the so-called “Daily Stand Up Meeting” at 10:15, when each </text>
<text top="845" left="108" width="693" height="18" font="0">member  briefly  explains  the  tasks  he  did  the  day  before  and  the  ones  he  plans  for  today,  as </text>
<text top="873" left="108" width="693" height="18" font="0">well  as  mentioning  any  blocking  issue  found.  This  is  done  via  updating  the  task  board,  a </text>
<text top="901" left="108" width="693" height="18" font="0">physical whiteboard where each task is represented with a sticky note. Those notes are being </text>
<text top="929" left="108" width="662" height="18" font="0">moved through all the different status (i.e. “to do”, “in progress”, “done”) until completion. </text>
<text top="972" left="108" width="4" height="18" font="0"> </text>
<text top="1010" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1048" left="108" width="6" height="12" font="10">6</text>
<text top="1049" left="114" width="156" height="17" font="11"> See more information: </text>
<text top="1049" left="271" width="169" height="17" font="18">http://agilemanifesto.org</text>
<text top="1047" left="440" width="4" height="18" font="0"> </text>
</page>
<page number="27" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="30" height="20" font="0">  27	  </text>
<text top="109" left="108" width="65" height="24" font="14"><i>1.4.3  R</i></text>
<text top="113" left="173" width="126" height="19" font="15"><i>ISK	  MANAGEMENT</i></text>
<text top="109" left="300" width="4" height="24" font="14"><i>	  </i></text>
<text top="151" left="108" width="693" height="18" font="0">All projects have risks threatening their smooth development. Agile methodologies are already </text>
<text top="179" left="108" width="693" height="18" font="0">reducing  negative  effects  of  unexpected  outcome  thanks  to  the  fast  delivery  of  working </text>
<text top="208" left="108" width="693" height="18" font="0">software,  that  allows  to  quickly  detect  and  fix  any  problem  without  major  issues.  Despite  of </text>
<text top="236" left="108" width="693" height="18" font="0">that, risk management is advisable in order monitorize and evaluate all major risks every start </text>
<text top="264" left="108" width="693" height="18" font="0">of the sprint. For that reason risks should be identified along with a strategy to manage each </text>
<text top="292" left="108" width="123" height="18" font="0">risk beforehand. </text>
<text top="335" left="108" width="693" height="18" font="0">The  current  project  is  particularly  risky  due  to  the  extensive  use  of  a  technology  under </text>
<text top="363" left="108" width="693" height="18" font="0">development. The SPHERE.IO platform may not yet allow all functionalities planned for the </text>
<text top="391" left="108" width="694" height="18" font="0">template  or  it  may  be  delayed  some  weeks  or  even  months.  That  would  directly  affect  the </text>
<text top="420" left="108" width="693" height="18" font="0">current project’s timeline. This is a very likely risk to happen and with a high impact on the </text>
<text top="448" left="108" width="693" height="18" font="0">project, but the project itself would be meaningless without the use of this particular platform. </text>
<text top="476" left="108" width="693" height="18" font="0">Therefore the only way to deal with this risk is tolerate a large deviation in the project for high </text>
<text top="504" left="108" width="693" height="18" font="0">priority functionalities and dismiss those functionalities with lower priority when a long delay </text>
<text top="532" left="108" width="88" height="18" font="0">takes place. </text>
<text top="575" left="108" width="693" height="18" font="0">Some  other  technologies  in  development  or  with  no  previous  experience  working  with  them </text>
<text top="603" left="108" width="693" height="18" font="0">will  be  used  in  this  project.  In  each  case,  some  research  should  be  done  before  in  order  to </text>
<text top="632" left="108" width="693" height="18" font="0">guarantee that it fits the project. In spite of this, if the technology appears to be unsuitable for </text>
<text top="660" left="108" width="693" height="18" font="0">the  project  during  the  implementation  process,  it  should  be  replaced  with  an  alternative </text>
<text top="687" left="108" width="462" height="18" font="0">technology or the functionality it provides should be discarded. </text>
<text top="731" left="108" width="693" height="18" font="0">Many  other  risks  are  related  to  the  fact  of  developing  the  project  in  a  business  company, </text>
<text top="759" left="108" width="693" height="18" font="0">especially in a startup. These kind of companies are particularly prone to change, whether be it </text>
<text top="787" left="108" width="693" height="18" font="0">a change in the development team, in the company’s activities or simply the company ceases to </text>
<text top="815" left="108" width="693" height="18" font="0">exist. In any case, these risks cannot be avoided. If the project is on a very early stage the best </text>
<text top="843" left="108" width="693" height="18" font="0">decision would probably be to start a new project, otherwise the topic can always be adapted to </text>
<text top="871" left="108" width="134" height="18" font="0">the new situation. </text>
<text top="914" left="108" width="4" height="18" font="0"> </text>
<text top="957" left="108" width="59" height="24" font="14"><i>1.4.4  I</i></text>
<text top="961" left="168" width="111" height="19" font="15"><i>NITIAL	  TIMELINE</i></text>
<text top="957" left="280" width="4" height="24" font="14"><i>	  </i></text>
<text top="999" left="108" width="693" height="18" font="0">As  described  before,  in  Scrum  a  new  planning  is  elaborated  from  scratch  every  start  of  the </text>
<text top="1028" left="108" width="693" height="18" font="0">sprint. Additionally, requirements are likely to change over time. These characteristics make </text>
<text top="1056" left="108" width="693" height="18" font="0">an initial timeline not entirely befitting for a project following an agile methodology. Despite of </text>
</page>
<page number="28" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">28	  </text>
<text top="110" left="108" width="693" height="18" font="0">that it has been considered appropriate to prepare an initial planning of the whole project (see </text>
<text top="138" left="108" width="693" height="18" font="0">Figure  1.6)  in  order  to  make  a  rough  estimation  of  the  total  amount  of  work.  This  initial </text>
<text top="165" left="108" width="360" height="18" font="0">planning will be updated every end of the sprint.  </text>
<text top="209" left="108" width="693" height="18" font="0">The  project  officially  starts  February  1st  2013,  when  the  task  of  developing  the  first  public </text>
<text top="237" left="108" width="693" height="18" font="0">template of the platform was assigned as the main topic of this project. Before that, a testing </text>
<text top="265" left="108" width="689" height="18" font="0">period  of  SPHERE.IO  Play  SDK  took  place  with  the  implementation  of  a  basic  sample  web-</text>
<text top="293" left="108" width="693" height="18" font="0">shop. This period had the objective of adapting the SDK to Java developers, at the same time </text>
<text top="321" left="108" width="693" height="18" font="0">that the toolkit was being built. Although the tasks during that stage were no planned parts of </text>
<text top="350" left="108" width="693" height="18" font="0">this  project,  it  is  fair  to  include  it  as  a  training  period  due  to  the  level  of  importance of  that </text>
<text top="377" left="108" width="418" height="18" font="0">timeframe in order to become familiar with the platform. </text>
<text top="421" left="108" width="693" height="18" font="0">On  April  2nd  2013  the  SPHERE.IO  platform  was  going  to  be  publicly  announced  as  a  beta </text>
<text top="449" left="108" width="693" height="18" font="0">release,  along  with  the  first  template  providing  some  basic  functionalities  (i.e.  browsing  and </text>
<text top="477" left="108" width="693" height="18" font="0">purchasing  products).  The  implementation  of  the  template  was  expected  to  finish  on  April </text>
<text top="505" left="108" width="454" height="18" font="0">10th 2013, before the platform’s final release on July 1st 2013. </text>
<text top="548" left="108" width="693" height="18" font="0">After  the  development  cycles  are  finalized  all  remaining  time  is  being  used  on  writing  the </text>
<text top="577" left="108" width="693" height="18" font="0">documentation. Some usability and performance tests will be run after the platform is released </text>
<text top="605" left="108" width="693" height="18" font="0">and stable, planned on July 16th 2013. When the documentation stage finishes on August 18th </text>
<text top="633" left="108" width="693" height="18" font="0">2013, and after a week of revision of the whole project, the presentation is being prepared over </text>
<text top="661" left="108" width="693" height="18" font="0">five  days.  Therefore  on  August  26th  2013  the  project  was  expected  to  finish.  Given  that  the </text>
<text top="689" left="108" width="693" height="18" font="0">deadline of the project’s presentation is on January 24th 2014, it allowed a time deviation of </text>
<text top="717" left="108" width="136" height="18" font="0">up to five months. </text>
<text top="760" left="108" width="693" height="18" font="0">In order to count the total amount of hours of the timeline, it must be taken into account that </text>
<text top="788" left="108" width="693" height="18" font="0">every  stage  might  have  a  different  dedication  time.  It  is  considered  in  this  planning  that  the </text>
<text top="816" left="108" width="694" height="18" font="0">training period takes 1 hour per day, because as explained before the tasks in that time were </text>
<text top="844" left="108" width="693" height="18" font="0">not focused in this current project. The documentation stage takes around 4 hours per day in </text>
<text top="873" left="108" width="693" height="18" font="0">order to combine it with other projects’ tasks, while the remaining stages have 6 hours per day </text>
<text top="901" left="108" width="693" height="18" font="0">on average. With that, this planning results in a total of 725 hours of work, divided in 73 hours </text>
<text top="929" left="108" width="693" height="18" font="0">for  training,  60  hours  for  specification  and  design,  240  hours  of  implementation  and  352 </text>
<text top="957" left="108" width="251" height="18" font="0">hours in documenting the project. </text>
<text top="1000" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="29" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="691" height="694" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-29_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  29	  </text>
<text top="788" left="799" width="4" height="18" font="0"> </text>
<text top="828" left="265" width="380" height="15" font="12"><b>Figure 1.6</b>: Gantt diagram of the initial timeline of the project. </text>
<text top="856" left="453" width="4" height="18" font="0"> </text>
<text top="858" left="669" width="3" height="15" font="13"> </text>
</page>
<page number="30" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">30	  </text>
<text top="109" left="108" width="47" height="33" font="6">2  R</text>
<text top="114" left="156" width="217" height="26" font="7">EQUIREMENT	  ANALYSIS</text>
<text top="109" left="373" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="693" height="18" font="0">In order to start gathering requirements, first it is necessary to identify each group affected by </text>
<text top="191" left="108" width="693" height="18" font="0">this  project  and  understand  everyone’s  needs  (section  Stakeholders  Analysis  2.1).  With  that </text>
<text top="219" left="108" width="693" height="18" font="0">information in hand, an initial list of the desired functional and non-functional requirements </text>
<text top="247" left="108" width="693" height="18" font="0">(see sections Functional Requirements 2.2 and Non-Functional Requirements 2.3) can be put </text>
<text top="275" left="108" width="693" height="18" font="0">into  the  Product  Backlog  in  the  form  of  user  stories.  Every  sprint  these  requirements  may </text>
<text top="303" left="108" width="693" height="18" font="0">change, reason why in this section are described only the final requirements that are part of </text>
<text top="331" left="108" width="565" height="18" font="0">the current Product Backlog of the project (see Appendix B Product Backlog). </text>
<text top="374" left="108" width="4" height="18" font="0"> </text>
<text top="417" left="108" width="53" height="25" font="2">2.1  S</text>
<text top="422" left="161" width="165" height="20" font="0">TAKEHOLDERS	  ANALYSIS</text>
<text top="417" left="326" width="5" height="25" font="2">	  </text>
<text top="461" left="108" width="693" height="18" font="0">Potential clients of the project, simplified as “clients” from now on, are companies in need of </text>
<text top="489" left="108" width="693" height="18" font="0">an e-commerce solution, especially those looking for an interface from where to sell goods or </text>
<text top="518" left="108" width="693" height="18" font="0">services  to  individuals  or  other  companies.  They  need  a  system  that  satisfies  their  current </text>
<text top="546" left="108" width="693" height="18" font="0">requirements  and  allows  them  to  easily  implement  future  required  functionalities.  They  hire </text>
<text top="574" left="108" width="556" height="18" font="0">developers, usually working in agencies, to build these tailored applications. </text>
<text top="617" left="108" width="693" height="18" font="0">Potential users of the template are precisely developers, who need to implement a web-shop or </text>
<text top="645" left="108" width="693" height="18" font="0">a  similar  application.  They  might  have  to  decide  whether  to  develop  a  web-shop  based  on </text>
<text top="673" left="108" width="693" height="18" font="0">SPHERE.IO Play SDK. They may want to use the template as a live documentation of how to </text>
<text top="701" left="108" width="693" height="18" font="0">use the system or directly use it as a bootstrap project on which to build their own web-shop. </text>
<text top="730" left="108" width="693" height="18" font="0">They need to easily understand the sample code and quickly identify those lines of code with </text>
<text top="758" left="108" width="693" height="18" font="0">shop  logic  coming  from  SPHERE.IO.  Code  quality  and  correct  use  of  technologies  may  be </text>
<text top="785" left="108" width="149" height="18" font="0">important for them. </text>
<text top="829" left="108" width="174" height="18" font="0">End users or customers</text>
<text top="829" left="282" width="5" height="12" font="10">7</text>
<text top="829" left="287" width="514" height="18" font="0">, equally mentioned as “users” and “customers” in this document, are </text>
<text top="857" left="108" width="693" height="18" font="0">those actors of the system who would buy in the web-shop in case it went live. Even being an </text>
<text top="885" left="108" width="693" height="18" font="0">hypothetical  situation,  this  template  will  be  used  as  a  bootstrap  project  so  eventually  it  will </text>
<text top="913" left="108" width="693" height="18" font="0">become a real web-shop with end users. With no other specific information about these users, </text>
<text top="941" left="108" width="693" height="18" font="0">it can only be assumed that they need an intuitive layout that allows them to shop with ease in </text>
<text top="969" left="108" width="91" height="18" font="0">a few clicks. </text>
<text top="993" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1031" left="108" width="5" height="12" font="10">7</text>
<text top="1032" left="114" width="601" height="17" font="11"> For more information about the differences between the term “customer” and “client”, see </text>
<text top="1049" left="108" width="358" height="17" font="11">http://www.dailywritingtips.com/customer-vs-client/</text>
<text top="1048" left="466" width="4" height="18" font="0"> </text>
</page>
<page number="31" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="30" height="20" font="0">  31	  </text>
<text top="110" left="108" width="693" height="18" font="0">Inside the company there are two major stakeholders: the SPHERE.IO product owners and the </text>
<text top="138" left="108" width="693" height="18" font="0">developer team. The product owners need a final product where all the platform features are </text>
<text top="166" left="108" width="693" height="18" font="0">implemented in order to measure the actual progress of the project. This product also allows </text>
<text top="194" left="108" width="693" height="18" font="0">them to have a sample web-shop to show to potential clients in meetings and conferences even </text>
<text top="222" left="108" width="230" height="18" font="0">before the platform is released. </text>
<text top="265" left="108" width="693" height="18" font="0">On  the  other  hand,  the  development  team  is  in  charge  of  designing  and  implementing  the </text>
<text top="293" left="108" width="693" height="18" font="0">platform that the template is using. Their primary need towards the template is to verify that </text>
<text top="321" left="108" width="693" height="18" font="0">their  implementation  is  adjusting  to  both  developers  and  clients  needs.  They  might  create </text>
<text top="350" left="108" width="693" height="18" font="0">temporal  limitations  on  the  template  design,  but  at  the  same  time  any  suggestion  may  be </text>
<text top="377" left="108" width="500" height="18" font="0">quickly adopted with no need to change the web-shop requirements. </text>
<text top="420" left="108" width="4" height="18" font="0"> </text>
<text top="464" left="108" width="53" height="25" font="2">2.2  F</text>
<text top="468" left="161" width="192" height="20" font="0">UNCTIONAL	  REQUIREMENTS</text>
<text top="464" left="354" width="5" height="25" font="2">	  </text>
<text top="508" left="108" width="693" height="18" font="0">In order to prove the value of the platform and identify any possible lack of functionality, the </text>
<text top="536" left="108" width="693" height="18" font="0">application  should  have  all  the  common  features  of  a  regular  web-shop.  Accordingly,  it  has </text>
<text top="564" left="108" width="693" height="18" font="0">been considered that the initial appropriate set of functionalities for this project include those </text>
<text top="592" left="108" width="693" height="18" font="0">related to browsing and purchasing products, as well as management of a customer account. </text>
<text top="620" left="108" width="499" height="18" font="0">The detailed behavior expected for the web-shop is described below. </text>
<text top="664" left="108" width="693" height="18" font="0">In  the  home  page  all  products  are  displayed  sorted  by  popularity.  From  here  the  user  can </text>
<text top="692" left="108" width="693" height="18" font="0">select  a  category;  then  all  products  belonging  to  that  category  or  any  descendent  will  be </text>
<text top="720" left="108" width="693" height="18" font="0">displayed. Whenever a set of products is listed, those products on sale will be highlighted and </text>
<text top="748" left="108" width="693" height="18" font="0">the  user  will  be  given  the  option  to  sort  and  filter  amongst  all  products.  The  sorting  can  be </text>
<text top="776" left="108" width="693" height="18" font="0">performed  by  name  or  price,  and  the  filtering  by  price  and  color.  Each  product  thumbnail </text>
<text top="804" left="108" width="693" height="18" font="0">consists  of  a  picture  of  the  product,  its  name  and  price,  as  well  as  a  list  of  all  color  variants </text>
<text top="832" left="108" width="73" height="18" font="0">available. </text>
<text top="875" left="108" width="693" height="18" font="0">Clicking on a product thumbnail redirects the user to the product detail page, where besides </text>
<text top="903" left="108" width="693" height="18" font="0">name and price also a description is shown. Here the user is able to select any color and size to </text>
<text top="931" left="108" width="693" height="18" font="0">visualize the corresponding picture. In any moment the user can add the selected product to </text>
<text top="960" left="108" width="693" height="18" font="0">the  shopping  cart,  afterwards  the  updated  cart  contents  and  total  price  will  be  displayed. </text>
<text top="988" left="108" width="693" height="18" font="0">Accessing the cart details also grants the user the possibility to change the number of units of </text>
<text top="1016" left="108" width="455" height="18" font="0">an item or remove any particular item from the shopping cart. </text>
</page>
<page number="32" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">32	  </text>
<text top="110" left="108" width="693" height="18" font="0">From here the user can choose to start the checkout process, where he is asked to fill a form </text>
<text top="138" left="108" width="693" height="18" font="0">with  shipping  information  (i.e.  shipping  address  and  method)  and  billing  information  (i.e. </text>
<text top="166" left="108" width="693" height="18" font="0">billing address and payment data). During the checkout process the order summary (i.e. the </text>
<text top="194" left="108" width="693" height="18" font="0">list  of  purchased  items  and  pricing  details)  is  displayed  all  along  and  kept  up  to  date.  Right </text>
<text top="222" left="108" width="693" height="18" font="0">before  finishing  the  checkout  process,  the  user  is  informed  of  all  introduced  shipping  and </text>
<text top="250" left="108" width="693" height="18" font="0">billing  information  as  well  as  the  order  summary.  Once  the  checkout  process  is  finished, </text>
<text top="278" left="108" width="511" height="18" font="0">another summary is shown along with a successful purchase message. </text>
<text top="321" left="108" width="693" height="18" font="0">The user can decide to sign up in our systems, in which case he must provide his full name, </text>
<text top="350" left="108" width="693" height="18" font="0">email address and a password. After signing up he is redirected to his user profile, where he </text>
<text top="378" left="108" width="693" height="18" font="0">can  update  his  personal  data,  change  his  password,  manage  his  address  book  or  review  his </text>
<text top="406" left="108" width="693" height="18" font="0">previous orders in detail. The address book allows the user to store a set of postal addresses </text>
<text top="434" left="108" width="694" height="18" font="0">that  can  later  be  selected  as  shipping  or  billing  address  in  the  checkout  process.  The  user  is </text>
<text top="462" left="108" width="693" height="18" font="0">allowed  to  add  new  addresses  to  the  address  book,  as  well  as  update  or  remove  any  stored </text>
<text top="490" left="108" width="65" height="18" font="0">address. </text>
<text top="533" left="108" width="693" height="18" font="0">While logged in, the user can choose to log out in order to become an anonymous customer. In </text>
<text top="561" left="108" width="693" height="18" font="0">any moment, he can log in again providing his email address and password. In case the user </text>
<text top="589" left="108" width="693" height="18" font="0">forgot his password, he can request to recover it by entering his email address, in which case </text>
<text top="618" left="108" width="693" height="18" font="0">an  email  is  then  sent  to  the  address  provided  containing  a  web  link  can  then  be  accessed </text>
<text top="645" left="108" width="481" height="18" font="0">within the next hour, where the user can provide a new password. </text>
<text top="688" left="108" width="4" height="18" font="0"> </text>
<text top="732" left="108" width="57" height="25" font="2">2.3  N</text>
<text top="736" left="165" width="21" height="20" font="0">ON</text>
<text top="732" left="187" width="6" height="25" font="2">-­‐</text>
<text top="736" left="193" width="200" height="20" font="0">FUNCTIONAL	  REQUIREMENTS</text>
<text top="732" left="393" width="5" height="25" font="2">	  </text>
<text top="776" left="108" width="693" height="18" font="0">In its first stage, the web-shop template is required mainly to analyze the platform capabilities, </text>
<text top="804" left="108" width="689" height="18" font="0">show  code  examples  to  developers  and  attract  potential  customers.  For  this  reason  all  non-</text>
<text top="832" left="108" width="693" height="18" font="0">functional requirements are highly focused on those areas. Other areas of great importance as </text>
<text top="860" left="108" width="693" height="18" font="0">well, such as compatibility and performance, are left aside from the current project because of </text>
<text top="888" left="108" width="274" height="18" font="0">the excessive workload that it means. </text>
<text top="931" left="108" width="693" height="18" font="0">From a developer point of view the quality of the code takes a very important role, so it should </text>
<text top="960" left="108" width="693" height="18" font="0">be well organized, easy to understand and reusable. Therefore it would be considered a good </text>
<text top="988" left="108" width="693" height="18" font="0">practice  to  use  variables  and  functions  with  self-explanatory  names  and  keep  a  well </text>
<text top="1016" left="108" width="693" height="18" font="0">commented code. To the extent possible, the generic shop logic should be separated from the </text>
<text top="1044" left="108" width="667" height="18" font="0">most specific code in order to facilitate the use of it as a live documentation of the platform. </text>
</page>
<page number="33" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="19" size="14" family="Times" color="#222222"/>
	<fontspec id="20" size="8" family="Times" color="#222222"/>
<text top="1092" left="771" width="30" height="20" font="0">  33	  </text>
<text top="110" left="108" width="693" height="18" font="0">The platform should allow to test any web application built on top of it. In order to prove it is </text>
<text top="138" left="108" width="693" height="18" font="0">allowed,  the  template  should  be  completed  with  automated  functional  tests,  being  careful  of </text>
<text top="166" left="108" width="693" height="18" font="0">keeping these tests independent from the backend data in use. That way a change in the data, </text>
<text top="194" left="108" width="693" height="18" font="0">very  likely  to  happen  in  a  template  web-shop,  will  not  affect  the  results.  The  same  principle </text>
<text top="222" left="108" width="693" height="18" font="0">should be applied to the code in general, to keep the template from being non-functional when </text>
<text top="250" left="108" width="189" height="18" font="0">the data used is different. </text>
<text top="293" left="108" width="693" height="18" font="19">Although  major  part  of  the  required  security  is  located  on  the  e-commerce  and  payment </text>
<text top="321" left="108" width="693" height="18" font="19">platforms, there are some risks server side that must be top priority when it comes to online </text>
<text top="350" left="108" width="693" height="18" font="19">shopping.  For  example  some  data  needs  a  careful  treatment,  like  user  related  data  such  as </text>
<text top="378" left="108" width="693" height="18" font="19">addresses,  passwords  and  payment  information.  Particular  attention  must  be  paid  with  the </text>
<text top="406" left="108" width="297" height="18" font="19">checkout process in order to avoid fraud.</text>
<text top="406" left="405" width="4" height="18" font="0"> </text>
<text top="449" left="108" width="693" height="18" font="19">When online payment is involved in an application, payment data needs to be processed and </text>
<text top="477" left="108" width="601" height="18" font="19">stored somewhere. The system to process and store this data needs to be PCI DSS</text>
<text top="478" left="710" width="6" height="12" font="20">8</text>
<text top="477" left="716" width="86" height="18" font="19"> compliant. </text>
<text top="505" left="108" width="693" height="18" font="19">Being a sample web-shop it is most appropriate in this case to leave this role to the payment </text>
<text top="533" left="108" width="688" height="18" font="19">platform, thus sending any payment data to the template’s web server must be strictly avoided.</text>
<text top="533" left="797" width="4" height="18" font="0"> </text>
<text top="577" left="108" width="693" height="18" font="19">The template should be intuitive and use latest design tendencies, especially those allowing a </text>
<text top="605" left="108" width="693" height="18" font="19">faster navigation experience. The user should be able to use all functionalities of the web-shop </text>
<text top="633" left="108" width="693" height="18" font="19">in a smooth way, trying to minimize the number of times the page is fully reloaded. This will </text>
<text top="661" left="108" width="693" height="18" font="19">also  speed  up  the  communication  with  the  web  server,  thereby  favoring  a  more  efficient </text>
<text top="688" left="108" width="223" height="18" font="19">interaction with the web-shop.</text>
<text top="688" left="331" width="4" height="18" font="0"> </text>
<text top="732" left="108" width="693" height="18" font="19">The colour scheme should be neutral but pleasant in order to match any web-shop topic, with </text>
<text top="760" left="108" width="693" height="18" font="19">a  winter  sports  related  theme.  The  URL  structure  of  each  page  needs  to  be  user-friendly, </text>
<text top="788" left="108" width="693" height="18" font="19">meaning it has to be easily identifiable with the product or category linked when reading it. At </text>
<text top="816" left="108" width="693" height="18" font="19">the same time it has to follow some basic SEO rules in order to promote any website based on </text>
<text top="844" left="108" width="100" height="18" font="19">this template.</text>
<text top="844" left="208" width="4" height="18" font="0"> </text>
<text top="887" left="108" width="4" height="18" font="0"> </text>
<text top="887" left="324" width="4" height="18" font="0"> </text>
<text top="993" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1031" left="108" width="6" height="12" font="10">8</text>
<text top="1032" left="115" width="686" height="17" font="11"> PCI DSS stands for Payment Card Industry Data Security Standard and includes a set of twelve specific </text>
<text top="1049" left="108" width="655" height="17" font="11">requirements to cover six different goals, in order to create a secure environment for payment data.</text>
<text top="1048" left="764" width="4" height="18" font="0"> </text>
</page>
<page number="34" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">34	  </text>
<text top="109" left="108" width="45" height="33" font="6">3  S</text>
<text top="114" left="154" width="127" height="26" font="7">PECIFICATION</text>
<text top="109" left="281" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="693" height="18" font="0">Agile methodologies suggest to elaborate documentation only as needed, without having any </text>
<text top="191" left="108" width="693" height="18" font="0">required artifacts for each stage as traditional methodologies usually do. The reason why heavy </text>
<text top="219" left="108" width="693" height="18" font="0">documentation  is  not  recommended  is  because  requirements  are  expected  to  change </text>
<text top="247" left="108" width="693" height="18" font="0">constantly  during  the  development  process,  forcing  to  update  every  diagram  and  text  each </text>
<text top="275" left="108" width="693" height="18" font="0">time a change is applied, with the consequent loss of time that could have been otherwise used </text>
<text top="303" left="108" width="172" height="18" font="0">to develop the product. </text>
<text top="346" left="108" width="693" height="18" font="0">For this reason, only some simplified diagrams were drawn during the specification and design </text>
<text top="374" left="108" width="693" height="18" font="0">stages,  the  necessary  to  understand  the  system  and  share  ideas  with  the  SPHERE.IO  team. </text>
<text top="403" left="108" width="693" height="18" font="0">Therefore most of the artifacts presented in both this section and section Design 4, were made </text>
<text top="431" left="108" width="693" height="18" font="0">after the product was already built, intended to assist the reader in understanding better the </text>
<text top="458" left="108" width="59" height="18" font="0">system. </text>
<text top="502" left="108" width="693" height="18" font="0">The specification section here presented describes the necessary system to fulfill the functional </text>
<text top="530" left="108" width="693" height="18" font="0">requirements previously gathered. Here are first described the set of use cases that are initially </text>
<text top="558" left="108" width="693" height="18" font="0">planned for the project, which corresponds to the final Product Backlog (see list in Appendix B </text>
<text top="586" left="108" width="693" height="18" font="0">Product  Backlog).  The  conceptual  model  of  this  system  is  then  presented  and,  for  each  use </text>
<text top="614" left="108" width="497" height="18" font="0">case, is explained the expected behavior of the system with the user. </text>
<text top="657" left="108" width="4" height="18" font="0"> </text>
<text top="700" left="108" width="57" height="25" font="2">3.1  U</text>
<text top="705" left="165" width="107" height="20" font="0">SE	  CASE	  MODEL</text>
<text top="700" left="272" width="5" height="25" font="2">	  </text>
<text top="744" left="108" width="693" height="18" font="0">There are three actors that interact with the system: the customer, the payment platform and </text>
<text top="773" left="108" width="693" height="18" font="0">the SPHERE.IO e-commerce platform (Figure 3.1). The customer can either be an anonymous </text>
<text top="801" left="108" width="693" height="18" font="0">customer or an identified customer previously existing in the SPHERE.IO platform. Since the </text>
<text top="829" left="108" width="693" height="18" font="0">required  functionalities  of  the  present  project  were  mainly  designed  to  test  the  SPHERE.IO </text>
<text top="857" left="108" width="693" height="18" font="0">platform, it is no surprise that the platform is present in every single use case of the system </text>
<text top="885" left="108" width="693" height="18" font="0">whatsoever,  so  for  the  sake  of  readability  it  will  be  omitted  from  the  use  case  diagrams </text>
<text top="913" left="108" width="87" height="18" font="0">henceforth. </text>
<text top="956" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="35" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="215" width="477" height="280" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-35_1.png"/>
<image top="666" left="234" width="439" height="311" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-35_2.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  35	  </text>
<text top="374" left="692" width="4" height="18" font="0"> </text>
<text top="414" left="281" width="344" height="15" font="12"><b>Figure 3.1</b>: Diagram of the actors involved in the system.</text>
<text top="411" left="625" width="4" height="18" font="0"> </text>
<text top="452" left="108" width="4" height="18" font="0"> </text>
<text top="495" left="108" width="693" height="18" font="0">As mentioned earlier, the system has three functionalities where all use cases fall into: display </text>
<text top="523" left="108" width="693" height="18" font="0">products,  purchase  products  and  manage  customer  account  (Figure  3.2).  The  customer  is </text>
<text top="551" left="108" width="693" height="18" font="0">present  in  all  use  cases  of  the  system,  while  the  payment  platform  is  only  involved  in  the </text>
<text top="579" left="108" width="280" height="18" font="0">functionality for purchasing products. </text>
<text top="622" left="108" width="4" height="18" font="0"> </text>
<text top="961" left="672" width="4" height="18" font="0"> </text>
<text top="1000" left="272" width="361" height="15" font="12"><b>Figure 3.2</b>: Diagram of the use case packages of the system.</text>
<text top="998" left="634" width="4" height="18" font="0"> </text>
<text top="1038" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="36" position="absolute" top="0" left="0" height="1188" width="918">
<image top="280" left="192" width="522" height="393" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-36_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">36	  </text>
<text top="110" left="108" width="693" height="18" font="0">The use cases for displaying products are shown below in Figure 3.3. The customer can either </text>
<text top="138" left="108" width="693" height="18" font="0">list a set of products or display a particular product. Further additional functionalities can be </text>
<text top="166" left="108" width="693" height="18" font="0">applied to the product listing, individually or combined together, in order to alter the list itself </text>
<text top="193" left="108" width="558" height="18" font="0">(i.e. filtering) or the way the products are listed (i.e. sorting and pagination). </text>
<text top="237" left="108" width="4" height="18" font="0"> </text>
<text top="658" left="714" width="4" height="18" font="0"> </text>
<text top="697" left="223" width="459" height="15" font="12"><b>Figure 3.3</b>: Diagram showing the use cases of the <i>display products</i> package.</text>
<text top="694" left="683" width="4" height="18" font="0"> </text>
<text top="735" left="108" width="8" height="18" font="0">  </text>
<text top="778" left="108" width="693" height="18" font="0">Figure 3.4 shows the use cases related to purchasing products. They can be clearly divided into </text>
<text top="807" left="108" width="693" height="18" font="0">two different topics: on the one hand all those use cases for managing the shopping cart (i.e. </text>
<text top="835" left="108" width="693" height="18" font="0">adding, updating and removing items), on the other hand those related to placing and listing </text>
<text top="863" left="108" width="693" height="18" font="0">orders. When placing an order the customer may be requested to pay online, in which case the </text>
<text top="891" left="108" width="693" height="18" font="0">payment  platform  will  provide  the  necessary  means.  Anonymous  as  much  as  registered </text>
<text top="919" left="108" width="693" height="18" font="0">customers can place orders, but only customers that have been identified are able to list their </text>
<text top="947" left="108" width="471" height="18" font="0">own orders, otherwise they are requested to identify themselves. </text>
<text top="990" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="37" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="138" width="630" height="388" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-37_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  37	  </text>
<text top="482" left="768" width="4" height="18" font="0"> </text>
<text top="522" left="192" width="523" height="15" font="12"><b>Figure 3.4</b>: Use case diagram showing the use cases of the <i>purchase products </i>package.</text>
<text top="519" left="714" width="4" height="18" font="0"> </text>
<text top="560" left="108" width="4" height="18" font="0"> </text>
<text top="603" left="108" width="693" height="18" font="0">Finally, for the use cases related to account management (Figure 3.5), a registered customer </text>
<text top="631" left="108" width="693" height="18" font="0">can  manage  his  address  book  (i.e.  add,  update  or  remove  postal  addresses)  or  update  his </text>
<text top="659" left="108" width="693" height="18" font="0">account (i.e. change his personal data or password). He can as well decide to log out from the </text>
<text top="688" left="108" width="693" height="18" font="0">system  and  become  an  anonymous  customer.  As  an  anonymous  customer,  he  can  sign  up  a </text>
<text top="716" left="108" width="693" height="18" font="0">new account or log in with an existing one. In case he cannot remember his credentials, he will </text>
<text top="744" left="108" width="323" height="18" font="0">be given the option to recover his password. </text>
</page>
<page number="38" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="114" width="677" height="408" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-38_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">38	  </text>
<text top="503" left="792" width="4" height="18" font="0"> </text>
<text top="542" left="198" width="510" height="15" font="12"><b>Figure 3.5</b>: Use case diagram showing the use cases of the <i>manage account </i>package.</text>
<text top="539" left="708" width="4" height="18" font="0"> </text>
<text top="580" left="108" width="4" height="18" font="0"> </text>
<text top="623" left="108" width="693" height="18" font="0">The  previously  explained  use  cases  are  mostly  useful  to  define  the  scope  of  the  project  and </text>
<text top="652" left="108" width="693" height="18" font="0">understand  its  functionalities.  For  example,  these  use  cases  can  be  helpful  to  estimate  tasks </text>
<text top="680" left="108" width="693" height="18" font="0">and elaborate the development plan, as well as a guide to determine the necessary functional </text>
<text top="708" left="108" width="693" height="18" font="0">tests for the system. But these use cases are too granular for other purposes, such as defining </text>
<text top="736" left="108" width="693" height="18" font="0">acceptance tests or describing the sequence of user interactions with the system. These tasks </text>
<text top="764" left="108" width="693" height="18" font="0">require  a  more  abstract  level  of  use  cases,  focused  on  user  goals  instead  of  functionalities, </text>
<text top="792" left="108" width="272" height="18" font="0">sometimes called top-level use cases. </text>
<text top="835" left="108" width="693" height="18" font="0">A  top-level  use  case  describes  a  single  elementary  business  process  that  allows  a  particular </text>
<text top="863" left="108" width="693" height="18" font="0">user to fulfill a goal. In this system there are mainly three goals that a customer may want to </text>
<text top="892" left="108" width="693" height="18" font="0">achieve when he uses the web-shop, as shown in Figure 3.6. The first one consist of browsing </text>
<text top="920" left="108" width="693" height="18" font="0">the catalog and selecting those products of interest. At some moment, the user can decide to </text>
<text top="948" left="108" width="693" height="18" font="0">review the selected items and eventually buy them, which is the second goal. Finally, the third </text>
<text top="976" left="108" width="693" height="18" font="0">goal involves checking the payment or shipping status of the order, or any additional related </text>
<text top="1004" left="108" width="100" height="18" font="0">information.  </text>
</page>
<page number="39" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="140" width="627" height="240" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-39_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  39	  </text>
<text top="334" left="766" width="4" height="18" font="0"> </text>
<text top="373" left="234" width="438" height="15" font="12"><b>Figure 3.6</b>: Diagram showing the main top-level use cases of the system.</text>
<text top="371" left="672" width="4" height="18" font="0"> </text>
<text top="411" left="108" width="4" height="18" font="0"> </text>
<text top="455" left="108" width="693" height="18" font="0">All low-level use cases defined earlier are actually providing the functionalities to fulfill these </text>
<text top="483" left="108" width="693" height="18" font="0">three goals. Both low-level and top-level use cases are being used indistinctly throughout this </text>
<text top="511" left="108" width="693" height="18" font="0">document to elaborate other diagrams and descriptions, its use responding mostly to the level </text>
<text top="539" left="108" width="693" height="18" font="0">of abstraction that fits best the explanation. In any case, the term “top-level” is expressly used </text>
<text top="567" left="108" width="283" height="18" font="0">when referring to this type of use case. </text>
<text top="610" left="108" width="4" height="18" font="0"> </text>
<text top="653" left="108" width="53" height="25" font="2">3.2  S</text>
<text top="658" left="161" width="174" height="20" font="0">YSTEM	  BEHAVIOR	  MODEL</text>
<text top="653" left="335" width="5" height="25" font="2">	  </text>
<text top="697" left="108" width="693" height="18" font="0">Almost  all  the  low-level  use  cases  of  this  project  consist  of  only  one  interaction  between  the </text>
<text top="726" left="108" width="693" height="18" font="0">user  and  the  system.  This  may  be  useful  for  projects  that  require  very  detailed  information </text>
<text top="754" left="108" width="693" height="18" font="0">about  the  system  to  be  developed,  possibly  because  its  behavior  is  very  specific  and  unique. </text>
<text top="782" left="108" width="693" height="18" font="0">But this is not the case of this project whatsoever, the use cases defined here are precisely very </text>
<text top="810" left="108" width="689" height="18" font="0">common amongst web-shops, so any operation offered by this system is considered to be self-</text>
<text top="838" left="108" width="95" height="18" font="0">explanatory. </text>
<text top="881" left="108" width="693" height="18" font="0">As  mentioned  before,  the  top-level  use  cases  are  here  more  appropriate  to  describe  the  user </text>
<text top="909" left="108" width="693" height="18" font="0">communication with the system. This is because they provide information not only about the </text>
<text top="937" left="108" width="693" height="18" font="0">system  behavior,  but  also  about  the  sequence  of  interactions  that  the  customer  usually </text>
<text top="965" left="108" width="261" height="18" font="0">performs in order to achieve a goal. </text>
<text top="1009" left="108" width="693" height="18" font="0">Figure 3.7 displays the sequence diagram for the <i>browse catalog</i> top-level use case, one of the </text>
<text top="1037" left="108" width="693" height="18" font="0">many possible success scenarios. In this case the user will usually go to the home page, select a </text>
</page>
<page number="40" position="absolute" top="0" left="0" height="1188" width="918">
<image top="224" left="228" width="450" height="440" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-40_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">40	  </text>
<text top="110" left="108" width="693" height="18" font="0">category and then filter or sort the products until he eventually finds one of interest. Then he </text>
<text top="137" left="108" width="657" height="18" font="0">will probably ask for the details of the product and next he will add it to the shopping cart. </text>
<text top="181" left="108" width="4" height="18" font="0"> </text>
<text top="649" left="678" width="4" height="18" font="0"> </text>
<text top="688" left="186" width="534" height="15" font="12"><b>Figure 3.7</b>: Sequence diagram of the <i>browse catalog </i>top-level use case, success scenario.</text>
<text top="685" left="720" width="4" height="18" font="0"> </text>
<text top="726" left="453" width="4" height="18" font="0"> </text>
<text top="769" left="108" width="693" height="18" font="0">The <i>checkout</i> top-level use case is shown in Figure 3.8. Once the customer has some line items </text>
<text top="798" left="108" width="693" height="18" font="0">in his shopping cart, the next step is to navigate to the cart page. Here the user can remove or </text>
<text top="826" left="108" width="693" height="18" font="0">modify his line items until he is ready to start the checkout process. There, after entering all </text>
<text top="854" left="108" width="693" height="18" font="0">shipping and billing information, the customer will confirm the purchase and the system will </text>
<text top="882" left="108" width="693" height="18" font="0">request the payment platform to process the payment, displaying the order details in response </text>
<text top="910" left="108" width="122" height="18" font="0">to the customer. </text>
</page>
<page number="41" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="701" height="529" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-41_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  41	  </text>
<text top="623" left="809" width="4" height="18" font="0"> </text>
<text top="662" left="205" width="497" height="15" font="12"><b>Figure 3.8</b>: Sequence diagram of the <i>checkout </i>top-level use case, success scenario.</text>
<text top="660" left="701" width="4" height="18" font="0"> </text>
<text top="700" left="108" width="4" height="18" font="0"> </text>
<text top="744" left="108" width="693" height="18" font="0">The last sequence diagram displays the interactions that the customer has to perform in order </text>
<text top="772" left="108" width="693" height="18" font="0">to check the state of an order (Figure 3.9). This scenario requires the customer to previously </text>
<text top="800" left="108" width="693" height="18" font="0">sign up to the system and purchase some items as a registered customer. Then at any moment </text>
<text top="828" left="108" width="693" height="18" font="0">the user can go to the login page and enter the login information to access his customer profile. </text>
<text top="856" left="108" width="612" height="18" font="0">There he can select to list all his orders and select the one he wants to view in detail. </text>
</page>
<page number="42" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="228" width="450" height="374" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-42_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">42	  </text>
<text top="468" left="678" width="4" height="18" font="0"> </text>
<text top="507" left="196" width="517" height="15" font="12"><b>Figure 3.9</b>: Sequence diagram of the <i>check order </i>top-level use case, success scenario. </text>
<text top="545" left="453" width="4" height="18" font="0"> </text>
<text top="588" left="108" width="54" height="25" font="2">3.3  C</text>
<text top="593" left="163" width="136" height="20" font="0">ONCEPTUAL	  MODEL</text>
<text top="588" left="299" width="5" height="25" font="2">	  </text>
<text top="632" left="108" width="693" height="18" font="0">The conceptual model of this project revolves around the cart concept, while all other system </text>
<text top="661" left="108" width="693" height="18" font="0">elements are there to provide the required information to the cart, as seen in the class diagram </text>
<text top="689" left="108" width="693" height="18" font="0">below  (Figure  3.10).  Products  are  related  to  carts  as  a  list  of  product  variants,  forming  line </text>
<text top="717" left="108" width="693" height="18" font="0">items.  Variant  is  a  concept  to  define  the  part  of  the  product  that  contains  the  particular </text>
<text top="745" left="108" width="693" height="18" font="0">characteristics of it, such as color or size, even having sometimes a different price. Therefore </text>
<text top="773" left="108" width="591" height="18" font="0">every product has at least one variant, each one with different price or attributes. </text>
<text top="816" left="108" width="693" height="18" font="0">Similarly, a cart can be associated with one of the shipping methods available in the system, </text>
<text top="844" left="108" width="693" height="18" font="0">resulting in a shipping item, necessary to manage taxes. Both products and shipping methods </text>
<text top="872" left="108" width="693" height="18" font="0">have  a  particular  tax  category,  that  can  be  variable  for  products  and  fixed  in  the  case  of </text>
<text top="901" left="108" width="693" height="18" font="0">shipping. When one of these elements are added to the cart, a tax rate is assigned to the item </text>
<text top="928" left="108" width="486" height="18" font="0">according to this tax category and the shipping address of the cart. </text>
<text top="972" left="108" width="693" height="18" font="0">As mentioned above carts can have a shipping address, but can have as well a billing address. </text>
<text top="1000" left="108" width="693" height="18" font="0">A cart can belong to a registered customer, otherwise it is considered to have an anonymous </text>
<text top="1028" left="108" width="693" height="18" font="0">customer. Once the checkout is finished a cart becomes an order, with information about the </text>
<text top="1056" left="108" width="693" height="18" font="0">current  payment,  shipping  and  order  status.  If  the  customer  was  not  anonymous,  this  order </text>
</page>
<page number="43" position="absolute" top="0" left="0" height="1188" width="918">
<image top="224" left="117" width="673" height="700" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-43_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  43	  </text>
<text top="110" left="108" width="693" height="18" font="0">will be associated with that customer, along with any of his previous orders. Every customer </text>
<text top="137" left="108" width="451" height="18" font="0">can also have a list of addresses comprising the address book. </text>
<text top="181" left="108" width="4" height="18" font="0"> </text>
<text top="908" left="789" width="4" height="18" font="0"> </text>
<text top="948" left="326" width="255" height="15" font="12"><b>Figure 3.10</b>: Class diagram of the system.</text>
<text top="945" left="580" width="4" height="18" font="0"> </text>
<text top="986" left="108" width="4" height="18" font="0"> </text>
<text top="1029" left="108" width="693" height="18" font="0">Products, addresses and shipping methods can change or disappear over time, but the orders </text>
<text top="1057" left="108" width="693" height="18" font="0">associated with them must stay in the system for an indefinite period of time, having exactly </text>
</page>
<page number="44" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">44	  </text>
<text top="110" left="108" width="697" height="18" font="0">the original information. To solve this issue, cart is not related to the original instances, but to  </text>
<text top="138" left="108" width="693" height="18" font="0">instances that were created exclusively for this particular cart as a snapshot of those original </text>
<text top="166" left="108" width="693" height="18" font="0">instances. While the current cart may optionally have associated information, this information </text>
<text top="193" left="108" width="254" height="18" font="0">is mandatory in an order instance. </text>
<text top="237" left="108" width="693" height="18" font="0">For  simplicity,  the  conceptual  model  only  accepts  product  and  shipping  prices  that  do  not </text>
<text top="265" left="108" width="693" height="18" font="0">include  taxes.  Allowing  taxes  in  prices  can  be  achieved  by  simply  adding  a  boolean  attribute </text>
<text top="293" left="108" width="693" height="18" font="0">indicating whether the price in question has taxes included or not. So assuming that taxes are </text>
<text top="321" left="108" width="693" height="18" font="0">not included, the net total price in the cart must be the sum of all the line item prices (i.e. the </text>
<text top="350" left="108" width="693" height="18" font="0">quantity  in  each  line  item  multiplied  by  the  corresponding  variant  price)  associated  with  it, </text>
<text top="378" left="108" width="693" height="18" font="0">plus the price of the shipping method selected. In order to calculate the gross total price, taxes </text>
<text top="406" left="108" width="693" height="18" font="0">must be added up to this resulting net price. Taxes are calculated multiplying the price of each </text>
<text top="434" left="108" width="371" height="18" font="0">shipping or line item by its corresponding tax rate. </text>
<text top="477" left="108" width="693" height="18" font="0">Lastly when the shipping address is set in the cart, all tax rates from shipping and line items </text>
<text top="505" left="108" width="693" height="18" font="0">are calculated. Only those products that include a tax category corresponding to the zone (e.g. </text>
<text top="533" left="108" width="693" height="18" font="0">state, country) of the shipping address can be part of the cart. Missing the tax category means </text>
<text top="561" left="108" width="590" height="18" font="0">that the price cannot be calculated, thus the product is not available in that zone. </text>
<text top="604" left="108" width="4" height="18" font="0"> </text>
<text top="647" left="108" width="53" height="25" font="2">3.4  S</text>
<text top="652" left="161" width="112" height="20" font="0">TATE	  DIAGRAMS</text>
<text top="647" left="273" width="5" height="25" font="2">	  </text>
<text top="691" left="108" width="693" height="18" font="0">There are two interesting state diagrams of this system, both related to the cart element. The </text>
<text top="720" left="108" width="693" height="18" font="0">first diagram (Figure 3.11) describes how a cart instance changes until it becomes a complete </text>
<text top="748" left="108" width="693" height="18" font="0">order. As the diagram below shows, the current cart is the initial state, which allows to change </text>
<text top="776" left="108" width="693" height="18" font="0">its  contents  in  multiple  ways,  such  as  adding  or  removing  line  items  or  selecting  a  shipping </text>
<text top="804" left="108" width="693" height="18" font="0">address.  Once  the  checkout  is  finished  the  cart  becomes  an  order,  being  this  an  irreversible </text>
<text top="832" left="108" width="693" height="18" font="0">change. From now on the order can only change from an open to a complete state, and vice </text>
<text top="860" left="108" width="51" height="18" font="0">versa.  </text>
<text top="903" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="45" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="220" width="467" height="217" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-45_1.png"/>
<image top="603" left="118" width="669" height="297" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-45_2.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  45	  </text>
<text top="311" left="686" width="4" height="18" font="0"> </text>
<text top="351" left="321" width="264" height="15" font="12"><b>Figure 3.11</b>: State diagram of the cart class.</text>
<text top="348" left="585" width="4" height="18" font="0"> </text>
<text top="389" left="108" width="4" height="18" font="0"> </text>
<text top="432" left="108" width="693" height="18" font="19">The second diagram (Figure 3.12) describes the whole process of managing the shopping cart </text>
<text top="460" left="108" width="693" height="18" font="19">and eventually purchasing these products in the checkout process. This diagram will become </text>
<text top="488" left="108" width="693" height="18" font="19">especially useful when designing the checkout interface, as it clearly displays the requirements </text>
<text top="516" left="108" width="264" height="18" font="19">of each step of the checkout process.</text>
<text top="516" left="372" width="4" height="18" font="0"> </text>
<text top="559" left="453" width="4" height="18" font="0"> </text>
<text top="884" left="788" width="4" height="18" font="0"> </text>
<text top="924" left="250" width="406" height="15" font="12"><b>Figure 3.12</b>: State diagram of the use case for purchasing products.</text>
<text top="921" left="656" width="4" height="18" font="0"> </text>
<text top="962" left="108" width="4" height="18" font="0"> </text>
<text top="1005" left="108" width="693" height="18" font="19">At the beginning of the process a new cart is created. Once the cart contains an item it can be </text>
<text top="1033" left="108" width="693" height="18" font="19">further updated, then at any moment the user can start or exit the checkout process. Initially </text>
<text top="1061" left="108" width="693" height="18" font="19">the  checkout  process  requires  a  shipping  address  to  display  the  shipping  methods,  then  it </text>
</page>
<page number="46" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">46	  </text>
<text top="110" left="108" width="694" height="18" font="19">requires a shipping method to display billing options. Of course this sequence can be skipped </text>
<text top="137" left="108" width="305" height="18" font="19">if the cart has already these requirements.</text>
<text top="137" left="414" width="4" height="18" font="0"> </text>
<text top="181" left="108" width="693" height="18" font="19">When the user provides the billing information and finalizes the checkout, the system charges </text>
<text top="209" left="108" width="694" height="18" font="19">the customer. The order is then created after the payment platform confirms that the payment </text>
<text top="237" left="108" width="693" height="18" font="19">was successful. The moment the previous cart becomes an order, a new cart is created for the </text>
<text top="265" left="108" width="359" height="18" font="19">customer in order to start the process once again.</text>
<text top="265" left="467" width="4" height="18" font="0"> </text>
<text top="308" left="108" width="4" height="18" font="0"> </text>
<text top="308" left="324" width="4" height="18" font="0"> </text>
</page>
<page number="47" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="30" height="20" font="0">  47	  </text>
<text top="109" left="108" width="49" height="33" font="6">4  D</text>
<text top="114" left="158" width="55" height="26" font="7">ESIGN</text>
<text top="109" left="213" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="693" height="18" font="0">The software design describes the final details of a system before it is implemented. During the </text>
<text top="191" left="108" width="693" height="18" font="0">design process decisions are taken in order to meet the gathered requirements, decisions that </text>
<text top="219" left="108" width="693" height="18" font="0">are then applied to the system defined in the section Specification 3. Both physical and logical </text>
<text top="247" left="108" width="693" height="18" font="0">designs of the system are described in detail in the current chapter (sections System Physical </text>
<text top="275" left="108" width="693" height="18" font="0">Architecture 4.1 and System Logical Architecture 4.2), with an overview of how the resulting </text>
<text top="303" left="108" width="693" height="18" font="0">product needs to be implemented. Every technology used is carefully justified and the major </text>
<text top="331" left="108" width="571" height="18" font="0">characteristics are explained (section Description of Used Technologies 4.2.1). </text>
<text top="374" left="108" width="693" height="18" font="0">The  selection  of  a  technology  is  a  decisive  process  aimed  to  obtain  the  optimal  results  of  a </text>
<text top="403" left="108" width="693" height="18" font="0">project. An unwise decision can sometimes seriously affect the total resources needed or the </text>
<text top="431" left="108" width="693" height="18" font="0">successful  fulfillment  of  the  proposed  objectives.  It  is  also  important  to  design  correctly  the </text>
<text top="459" left="108" width="693" height="18" font="0">structure  of  the  system,  for  example  identifying  and  applying  the  software  patterns  that  can </text>
<text top="487" left="108" width="360" height="18" font="0">solve existing problems in this particular project. </text>
<text top="530" left="108" width="4" height="18" font="0"> </text>
<text top="573" left="108" width="53" height="25" font="2">4.1  S</text>
<text top="577" left="161" width="219" height="20" font="0">YSTEM	  PHYSICAL	  ARCHITECTURE</text>
<text top="573" left="381" width="5" height="25" font="2">	  </text>
<text top="617" left="108" width="693" height="18" font="0">The  designed  system  follows  a  client-server  architecture  with  three  tiers:  the  client,  the  web </text>
<text top="645" left="108" width="693" height="18" font="0">application  server  and  the  data  server  tier.  The  data  tier  corresponds  to  the  SPHERE.IO </text>
<text top="673" left="108" width="693" height="18" font="0">backend,  which  offers  a  scalable  cloud-based  platform  for  the  e-commerce  data,  having  the </text>
<text top="701" left="108" width="693" height="18" font="0">capability  of  scaling  up  as  the  demand  increases.  The  application  tier  needs  an  enterprise </text>
<text top="730" left="108" width="693" height="18" font="0">hosting solution, suitable for a company web-shop. In order to take advantage of the scalability </text>
<text top="758" left="108" width="693" height="18" font="0">of the data tier, a good matching web hosting solution would be a cloud service with easy and </text>
<text top="785" left="108" width="698" height="18" font="0">fast scalability, letting the shop grow as the number of customers grow, without any bottleneck. </text>
<text top="829" left="108" width="693" height="18" font="0">At the time the system was designed there were only two cloud platforms with built in support </text>
<text top="857" left="108" width="693" height="18" font="0">for  deploying  Play  applications:  Heroku  and  Cloudbees;  although  at  the  end  of  2013  the </text>
<text top="885" left="108" width="693" height="18" font="0">number  of  services  has  been  doubled  and  the  offer  will  probably  continue  to  increase  in  the </text>
<text top="913" left="108" width="693" height="18" font="0">future.  Both  services  enable  a  simple  automated  deployment  of  the  web  application  to  the </text>
<text top="941" left="108" width="665" height="18" font="0">platform, which will allow developers to have a working hosted application within minutes. </text>
<text top="984" left="108" width="693" height="18" font="0">The specific hosting solution used for this project is irrelevant in terms of requirements, given </text>
<text top="1012" left="108" width="693" height="18" font="0">that it is only intended to host the test web-shop for SPHERE.IO, and both platforms promise </text>
<text top="1041" left="108" width="693" height="18" font="0">the same level of quality. In spite of that, it is wise to choose the most likely option the future </text>
</page>
<page number="48" position="absolute" top="0" left="0" height="1188" width="918">
<image top="280" left="213" width="479" height="465" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-48_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">48	  </text>
<text top="110" left="108" width="693" height="18" font="0">developers will use, so that it is tested beforehand. While Cloudbees also offers integrated tools </text>
<text top="138" left="108" width="693" height="18" font="0">to support development of Java projects, Heroku is a much popular alternative with support </text>
<text top="166" left="108" width="693" height="18" font="0">for several programming languages and a wide range of plugins, thus becoming a preferable </text>
<text top="193" left="108" width="601" height="18" font="0">option for the project. Unlike SPHERE.IO, Heroku is scalable only under demand. </text>
<text top="237" left="453" width="4" height="18" font="0"> </text>
<text top="730" left="693" width="4" height="18" font="0"> </text>
<text top="769" left="264" width="378" height="15" font="12"><b>Figure 4.1</b>: Diagram of the physical architecture of the system.</text>
<text top="766" left="642" width="4" height="18" font="0"> </text>
<text top="807" left="108" width="4" height="18" font="0"> </text>
<text top="850" left="108" width="693" height="18" font="0">Figure  4.1  illustrates  the  physical  architecture  of  the  system.  As  appears  in  the  diagram,  any </text>
<text top="879" left="108" width="693" height="18" font="0">request to a Heroku deployed web application is first processed by one of the many platform’s </text>
<text top="907" left="108" width="693" height="18" font="0">reverse proxies. The reverse proxy forwards the request to a HTTP cache layer, which returns </text>
<text top="935" left="108" width="693" height="18" font="0">the page if it is cached, otherwise forwards the request to the corresponding web application </text>
<text top="962" left="108" width="69" height="18" font="0">[Rob11].  </text>
<text top="1006" left="108" width="693" height="18" font="0">The communication between the web application and the SPHERE.IO backend is always held </text>
<text top="1034" left="108" width="693" height="18" font="0">with  HTTPS  as  a  requirement  of  the  e-commerce  platform.  Instead,  the  protocol  of  the </text>
<text top="1062" left="108" width="693" height="18" font="0">requests between the client and the web server are decision of the developer. For this project </text>
</page>
<page number="49" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="30" height="20" font="0">  49	  </text>
<text top="110" left="108" width="693" height="18" font="0">the  most  reasonable  option  would  be  to  use  HTTPS  whenever  customer  data  is  being </text>
<text top="138" left="108" width="693" height="18" font="0">transferred. This is typically the case of the checkout process, as well as any time the customer </text>
<text top="165" left="108" width="91" height="18" font="0">is logged in. </text>
<text top="209" left="108" width="4" height="18" font="0"> </text>
<text top="252" left="108" width="53" height="25" font="2">4.2  S</text>
<text top="256" left="161" width="213" height="20" font="0">YSTEM	  LOGICAL	  ARCHITECTURE</text>
<text top="252" left="374" width="5" height="25" font="2">	  </text>
<text top="296" left="108" width="693" height="18" font="0">The  logical  architecture  of  the  system  is  designed  after  the  MVC  (Model-View-Controller) </text>
<text top="324" left="108" width="693" height="18" font="0">architectural pattern, which is widely used in web applications design. Its use in this project is </text>
<text top="352" left="108" width="693" height="18" font="0">required,  since  MVC  is  the  architecture  pattern  followed  by  Play  Framework,  the  web </text>
<text top="380" left="108" width="470" height="18" font="0">framework on which SPHERE.IO Play SDK has been developed. </text>
<text top="424" left="108" width="693" height="18" font="0">As  the  name  suggests,  the  system  logic  is  divided  into  three  components:  Model,  View  and </text>
<text top="452" left="108" width="693" height="18" font="0">Controller.  As  a  rough  definition,  the  Model  manages  business  logic  and  domain  data,  the </text>
<text top="480" left="108" width="693" height="18" font="0">View is responsible of displaying the information, and the Controller is in charge of changing </text>
<text top="507" left="108" width="339" height="18" font="0">Model and View accordingly to the user input. </text>
<text top="551" left="108" width="693" height="18" font="0">The  specific  MVC  design  of  the  current  system  is  shown  in  Figure  4.2  below.  One  of  the </text>
<text top="579" left="108" width="693" height="18" font="0">particularities of this design is that SPHERE.IO Play SDK is the main component of the Model, </text>
<text top="607" left="108" width="693" height="18" font="0">since it controls all the domain data of the application, as well as most of the business logic. </text>
<text top="635" left="108" width="693" height="18" font="0">Only some business rules are added to the Model in order to validate form input coming from </text>
<text top="664" left="108" width="693" height="18" font="0">the  user,  before  sending  this  data  to  SPHERE.IO  Play  SDK,  as  well  as  some  external </text>
<text top="691" left="108" width="425" height="18" font="0">functionalities such as email sending and online payment. </text>
<text top="734" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="50" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="136" width="635" height="349" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-50_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">50	  </text>
<text top="443" left="770" width="4" height="18" font="0"> </text>
<text top="482" left="215" width="476" height="15" font="12"><b>Figure 4.2</b>: Diagram of the logical architecture of the system between contexts.</text>
<text top="480" left="691" width="4" height="18" font="0"> </text>
<text top="520" left="108" width="4" height="18" font="0"> </text>
<text top="564" left="108" width="693" height="18" font="0">When  the  request  reaches  the  web  application  server,  a  routing  system  analyzes  the  HTTP </text>
<text top="592" left="108" width="693" height="18" font="0">request  and  invokes  a  particular  action  of  the  corresponding  controller.  Then  the  controller </text>
<text top="620" left="108" width="693" height="18" font="0">interprets  all  required  input  parameters  coming  from  the  user  and  requests  the  appropriate </text>
<text top="648" left="108" width="693" height="18" font="0">changes to the model. In the model, SPHERE.IO Play SDK executes the request, which usually </text>
<text top="676" left="108" width="693" height="18" font="0">involves  communication  with  the  SPHERE.IO  backend  in  order  to  create,  read,  update  or </text>
<text top="704" left="108" width="289" height="18" font="0">delete (CRUD) some of the stored data. </text>
<text top="748" left="108" width="693" height="18" font="0">Once the model finishes processing the request, the controller selects the appropriate template </text>
<text top="776" left="108" width="693" height="18" font="0">and sends all information related to the current request to the view. With this information and </text>
<text top="804" left="108" width="693" height="18" font="0">some  other  obtained  directly  from  the  model,  the  view  generates  a  HTML  document  that  is </text>
<text top="832" left="108" width="322" height="18" font="0">sent back to the client via a HTTP response. </text>
<text top="875" left="108" width="693" height="18" font="0">With this design, a new whole web page must be loaded from the server every time the user </text>
<text top="903" left="108" width="693" height="18" font="0">wants to interact with the system. This is known as a “thin client” design, because all the logic </text>
<text top="931" left="108" width="693" height="18" font="0">is  located  in  the  server,  leaving  the  client  with  the  only  task  of  rendering  the  web  page.  In </text>
<text top="960" left="108" width="693" height="18" font="0">comparison  with  that,  a  “fat  client”  hosts  all  the  logic  of  the  system;  hence  Controller,  View </text>
<text top="988" left="108" width="693" height="18" font="0">and  Model  are  located  on  the  client  side,  leaving  in  the  server  just  those  parts  of  the  Model </text>
<text top="1015" left="108" width="441" height="18" font="0">responsible for the security and management of persistence. </text>
</page>
<page number="51" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="30" height="20" font="0">  51	  </text>
<text top="110" left="108" width="693" height="18" font="0">A fat client allows the user to interact with the system while never reloading the web page, only </text>
<text top="138" left="108" width="693" height="18" font="0">updating  those  specific  components  of  the  page  that  changed  during  the  interaction.  This </text>
<text top="166" left="108" width="693" height="18" font="0">behavior  enhances  the  user  experience,  because  the  user  can  continue  interacting  with  the </text>
<text top="194" left="108" width="693" height="18" font="0">system while operations are taking place. Information can also be presented in an incremental </text>
<text top="222" left="108" width="693" height="18" font="0">way,  so  that  the  user  can  start  interacting  with  some  elements  of  the  page  while  further </text>
<text top="250" left="108" width="693" height="18" font="0">information is being retrieved. Another important fact is that traffic between the client and the </text>
<text top="278" left="108" width="693" height="18" font="0">system  is  reduced  to  simple  data  with  no  presentation  information,  which  speeds  up  the </text>
<text top="306" left="108" width="439" height="18" font="0">communication with the system and decreases network use. </text>
<text top="350" left="108" width="693" height="18" font="0">While a fat client solves some external design issues, it also creates several technical problems. </text>
<text top="378" left="108" width="693" height="18" font="0">Since the web page is never reloading, the browser can no longer control the routing, caching </text>
<text top="406" left="108" width="693" height="18" font="0">or  history  management  of  it.  Therefore  it  is  the  responsibility  of  the  system  to  replace  those </text>
<text top="434" left="108" width="388" height="18" font="0">functionalities that the browser is unable to perform. </text>
<text top="477" left="108" width="693" height="18" font="0">These technical problems can be considered a too expensive price to pay in order to improve </text>
<text top="505" left="108" width="693" height="18" font="0">the  user  experience.  The  amount  of  resources  needed  to  implement  a  reliable  system  with  a </text>
<text top="533" left="108" width="693" height="18" font="0">pure  fat  client  is  several  times  higher  than  the  equivalent  with  a  thin  client.  Moreover  the </text>
<text top="561" left="108" width="693" height="18" font="0">complexity  of  the  code  is  also  very  significant,  which  makes  this  design  not  suitable  for  a </text>
<text top="589" left="108" width="413" height="18" font="0">template that must be understandable and easy to learn. </text>
<text top="633" left="108" width="693" height="18" font="0">A  mixed  approach  between  a  fat  and  a  thin  client  can  be  the  solution  to  improve  the  user </text>
<text top="661" left="108" width="693" height="18" font="0">experience without giving up on the browser logic. The website can be divided into different </text>
<text top="689" left="108" width="694" height="18" font="0">contexts  that  offer  the  user  some  common  functionalities.  Between  contexts  the  web  page  is </text>
<text top="717" left="108" width="693" height="18" font="0">fully  reloaded,  while  operations  within  the  contexts  only  update  some  parts  of  the  page </text>
<text top="745" left="108" width="693" height="18" font="0">[Con13].  By  way  of  example,  each  product  detail  page  is  a  different  context,  but  adding  a </text>
<text top="773" left="108" width="693" height="18" font="0">product to the shopping cart only updates the mini-cart displayed, while the user never leaves </text>
<text top="801" left="108" width="70" height="18" font="0">the page. </text>
<text top="844" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="52" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="164" width="578" height="467" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-52_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">52	  </text>
<text top="561" left="742" width="4" height="18" font="0"> </text>
<text top="601" left="219" width="469" height="15" font="12"><b>Figure 4.3</b>: Diagram of the logical architecture of the system within a context.</text>
<text top="598" left="688" width="4" height="18" font="0"> </text>
<text top="638" left="108" width="4" height="18" font="0"> </text>
<text top="682" left="108" width="693" height="18" font="0">In  order  to  facilitate  understanding  of  the  logical  architecture  of  the  system,  its  design  has </text>
<text top="710" left="108" width="693" height="18" font="0">been  divided  into  two  different  diagrams:  the  one  corresponding  to  the  scenario  between </text>
<text top="738" left="108" width="693" height="18" font="0">contexts  and  the  one  displaying  the  scenario  within  a  context.  The  former  has  already  been </text>
<text top="766" left="108" width="693" height="18" font="0">explained before, so the following explanation will focus on the differences and characteristics </text>
<text top="794" left="108" width="179" height="18" font="0">between both scenarios. </text>
<text top="838" left="108" width="693" height="18" font="0">Every  time  a  new  context  is  loaded  or  the  user  interacts  with  the  web  page  in  some  way,  an </text>
<text top="866" left="108" width="222" height="18" font="0">event  is  fired  by  HTML  DOM</text>
<text top="866" left="330" width="6" height="12" font="10">9</text>
<text top="866" left="336" width="465" height="18" font="0">.  The  controller  on  the  client  side  can  handle  these  events,  in </text>
<text top="894" left="108" width="693" height="18" font="0">which case it gathers the required information and requests the client-side model to validate </text>
<text top="922" left="108" width="693" height="18" font="0">this  information  in  order  to  avoid  unnecessary  calls  to  the  server.  If  the  validation  was </text>
<text top="993" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1031" left="108" width="6" height="12" font="10">9</text>
<text top="1032" left="114" width="649" height="17" font="11"> Stands for HTML Document Object Model and is an object model and programming interface for </text>
<text top="1049" left="108" width="650" height="17" font="11">HTML, that defines all HTML elements as objects with associated properties, methods and events.</text>
<text top="1048" left="758" width="4" height="18" font="0"> </text>
</page>
<page number="53" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="30" height="20" font="0">  53	  </text>
<text top="110" left="108" width="693" height="18" font="0">successful,  the  controller  sends  the  corresponding  HTTP  request  to  the  server,  which  is </text>
<text top="137" left="108" width="686" height="18" font="0">analyzed by the routing system and handed over to a controller action the same way as before. </text>
<text top="181" left="108" width="693" height="18" font="0">As well as before the controller requests the appropriate changes to the model, but this time </text>
<text top="209" left="108" width="693" height="18" font="0">when the model finishes, the controller generates JSON data using the information related to </text>
<text top="237" left="108" width="693" height="18" font="0">the  current  request  coming  from  the  model.  This  JSON  data  is  sent  back  to  the  controller </text>
<text top="265" left="108" width="693" height="18" font="0">located  on  the  client,  which  in  turn  selects  a  template  and  sends  this  data  to  the  view.  With </text>
<text top="293" left="108" width="693" height="18" font="0">that, the view generates a HTML fragment that uses to replace the corresponding component </text>
<text top="321" left="108" width="126" height="18" font="0">on the web page. </text>
<text top="364" left="108" width="4" height="18" font="0"> </text>
<text top="407" left="108" width="66" height="24" font="14"><i>4.2.1  D</i></text>
<text top="411" left="175" width="249" height="19" font="15"><i>ESCRIPTION	  OF	  USED	  TECHNOLOGIES</i></text>
<text top="407" left="424" width="4" height="24" font="14"><i>	  </i></text>
<text top="449" left="108" width="693" height="18" font="0">The current project has several technologies that are fixed by the requirements, starting with </text>
<text top="478" left="108" width="693" height="18" font="0">SPHERE.IO Play SDK. This SDK is designed to be used with Play Framework, and specifically </text>
<text top="506" left="108" width="693" height="18" font="0">with the Java language version. Besides the framework has a significant influence on several </text>
<text top="534" left="108" width="693" height="18" font="0">other  server-side  technologies  as  well,  depending  on  the  support  it  provides.  On  the  other </text>
<text top="562" left="108" width="693" height="18" font="0">hand,  the  payment  platform  needs  to  be  carefully  chosen,  because  it  has  inevitably  a  great </text>
<text top="590" left="108" width="492" height="18" font="0">impact on the template reusability and the analysis of the platform. </text>
<text top="633" left="108" width="693" height="18" font="0">All  client-side  technologies  need  to  be  selected,  specially  the  templating  solution  in  the  view </text>
<text top="661" left="108" width="693" height="18" font="0">component.  Furthermore,  given  that  maximizing  developer  experience  (i.e.  user  experience </text>
<text top="690" left="108" width="693" height="18" font="0">applied  to  developers)  is  one  of  the  main  requirements  of  the  project,  this  system  needs </text>
<text top="718" left="108" width="693" height="18" font="0">technologies to help organizing and simplifying the code, particularly complex because of the </text>
<text top="745" left="108" width="203" height="18" font="0">logical architecture design.  </text>
<text top="789" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="54" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="125" width="656" height="421" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-54_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">54	  </text>
<text top="515" left="781" width="4" height="18" font="0"> </text>
<text top="554" left="234" width="439" height="15" font="12"><b>Figure 4.4</b>: Diagram of the technologies used in each logical component.</text>
<text top="552" left="672" width="4" height="18" font="0"> </text>
<text top="592" left="108" width="4" height="18" font="0"> </text>
<text top="636" left="108" width="693" height="18" font="0">Figure 4.4 above illustrates the use of technologies in each component. As it shows, Play is the </text>
<text top="664" left="108" width="693" height="18" font="0">web application framework, that uses the programming language Scala in the templates, and </text>
<text top="692" left="108" width="693" height="18" font="0">Java  in  both  model  and  controllers.  In  the  model  SPHERE.IO  provides  the  main  commerce </text>
<text top="720" left="108" width="693" height="18" font="0">business  logic  of  the  system,  while  Optile  supports  the  payment  functionality.  Additionally, </text>
<text top="748" left="108" width="682" height="18" font="0">LESS and CoffeeScript are used server-side to generate CSS and JavaScript files, respectively. </text>
<text top="791" left="108" width="693" height="18" font="0">The server is using HTML5 and JSON files to send information to the client. The logic of the </text>
<text top="820" left="108" width="693" height="18" font="0">client side is supported by jQuery and the templating system is implemented with Handlebars. </text>
<text top="848" left="108" width="689" height="18" font="0">A description of each chosen technology and the characteristics that influenced the decision-</text>
<text top="875" left="108" width="199" height="18" font="0">making are detailed below. </text>
<text top="919" left="108" width="4" height="18" font="0"> </text>
<text top="962" left="108" width="4" height="18" font="0"> </text>
<text top="1005" left="108" width="4" height="18" font="0"> </text>
<text top="1048" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="55" position="absolute" top="0" left="0" height="1188" width="918">
<image top="192" left="320" width="267" height="58" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-55_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  55	  </text>
<text top="109" left="108" width="151" height="22" font="5"><b>4.2.1.1  SPHERE.IO	  </b></text>
<text top="149" left="108" width="4" height="18" font="0"> </text>
<text top="235" left="586" width="4" height="18" font="0"> </text>
<text top="275" left="340" width="227" height="15" font="12"><b>Figure 4.5</b>: SPHERE.IO official logo.</text>
<text top="272" left="566" width="4" height="18" font="0"> </text>
<text top="313" left="108" width="4" height="18" font="0"> </text>
<text top="356" left="108" width="693" height="18" font="0">SPHERE.IO is a cloud-based commerce platform, aimed to unify e-commerce data in a single </text>
<text top="384" left="108" width="693" height="18" font="0">place where any kind of external system can access this information. These external systems </text>
<text top="412" left="108" width="689" height="18" font="0">are typically web-shops but can actually be any type of application, even those not related to e-</text>
<text top="440" left="108" width="694" height="18" font="0">commerce.  SPHERE.IO  provides  a  platform  to  store  and  process  all  this  data  according  to </text>
<text top="468" left="108" width="585" height="18" font="0">commerce business rules, while at the same time offers several ways to access it. </text>
<text top="512" left="108" width="693" height="18" font="0">The primary entry point to the backend is provided by a RESTful API, that offers an interface </text>
<text top="540" left="108" width="693" height="18" font="0">for programmatic access to the data and associated functionality. The API services are using </text>
<text top="568" left="108" width="674" height="18" font="0">JSON  to  communicate,  always  over  HTTPS,  with  previous  authorization  using  OAuth2</text>
<text top="568" left="782" width="11" height="12" font="10">10</text>
<text top="568" left="793" width="8" height="18" font="0">. </text>
<text top="596" left="108" width="693" height="18" font="0">Although  it  is  actually  the  core  of  the  platform,  its  direct  use  might  be  tedious  for  slightly </text>
<text top="624" left="108" width="694" height="18" font="0">complex  applications.  That  is  the  reason  why  it  is  recommended  to  use  client  libraries  and </text>
<text top="652" left="108" width="609" height="18" font="0">SDKs to communicate with the API, and so improving the development experience. </text>
<text top="696" left="108" width="693" height="18" font="0">The  SPHERE.IO  team  chose  Java  as  the  first  programming  language  to  have  a  client  library </text>
<text top="724" left="108" width="693" height="18" font="0">due to its versatility. This library is open source, as it is intended to be improved or used as a </text>
<text top="752" left="108" width="693" height="18" font="0">reference  to  build  other  libraries  by  the  developer  community.  In  order  to  provide  a  better </text>
<text top="780" left="108" width="693" height="18" font="0">environment  to  build  websites,  a  SDK  was  built  on  top  of  the  client  library:  the  SPHERE.IO </text>
<text top="808" left="108" width="693" height="18" font="0">Play SDK. It allowed to adapt the Java client library to the processes and structure of the Play </text>
<text top="836" left="108" width="92" height="18" font="0">Framework. </text>
<text top="879" left="108" width="693" height="18" font="0">A command-line interface (CLI) is also available, especially aimed for managing SPHERE.IO </text>
<text top="907" left="108" width="693" height="18" font="0">user accounts and projects from a command-line shell. It is also necessary to use the CLI in </text>
<text top="935" left="108" width="693" height="18" font="0">order  to  manipulate  and  query  data  in  batches  or  for  automated  jobs,  such  as  importing </text>
<text top="1010" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1048" left="108" width="11" height="12" font="10">10</text>
<text top="1049" left="119" width="406" height="17" font="11"> OAuth 2.0 is a protocol for authentication and authorization.</text>
<text top="1047" left="525" width="4" height="18" font="0"> </text>
</page>
<page number="56" position="absolute" top="0" left="0" height="1188" width="918">
<image top="434" left="362" width="181" height="53" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-56_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">56	  </text>
<text top="110" left="108" width="693" height="18" font="0">products  into  SPHERE.IO.  As  opposed  to  the  API,  the  CLI  is  not  using  OAuth2  since  all </text>
<text top="137" left="108" width="309" height="18" font="0">operations are done under a user account. </text>
<text top="181" left="108" width="693" height="18" font="0">So far all the tools for accessing and managing the backend data were focused on developers, </text>
<text top="209" left="108" width="693" height="18" font="0">but  merchants  have  also  the  possibility  to  view  and  update  the  data  using  a  web  application </text>
<text top="237" left="108" width="693" height="18" font="0">called  Merchant  Center.  Besides  that,  merchants  can  also  export  and  import  data  between </text>
<text top="265" left="108" width="400" height="18" font="0">SPHERE.IO and other external systems using elastic.io</text>
<text top="265" left="509" width="9" height="12" font="10">11</text>
<text top="265" left="518" width="202" height="18" font="0"> as an integration platform. </text>
<text top="308" left="108" width="4" height="18" font="0"> </text>
<text top="351" left="108" width="117" height="22" font="5"><b>4.2.1.2  Optile	  </b></text>
<text top="391" left="453" width="4" height="18" font="0"> </text>
<text top="471" left="544" width="4" height="18" font="0"> </text>
<text top="511" left="357" width="191" height="15" font="12"><b>Figure 4.6</b>: Optile official logo.</text>
<text top="508" left="549" width="4" height="18" font="0"> </text>
<text top="549" left="108" width="4" height="18" font="0"> </text>
<text top="592" left="108" width="693" height="18" font="0">Optile  is  a  payment  platform  that  allows  to  access  a  set  of  heterogeneous  payment  methods </text>
<text top="620" left="108" width="693" height="18" font="0">and  providers  (e.g.  credit  cards,  direct  debit,  PayPal)  under  a  common  interface.  Once  the </text>
<text top="649" left="108" width="693" height="18" font="0">web-shop has the platform integrated, the set of payment options can be extended or reduced </text>
<text top="677" left="108" width="693" height="18" font="0">without  any  extra  implementation  effort.  Optile  has  five  different  main  levels  of  integration: </text>
<text top="705" left="108" width="693" height="18" font="0">redirected, hosted, half-native and native with and without PCI. These are implemented one </text>
<text top="733" left="108" width="693" height="18" font="0">on top of the other without losing the previous implementation, that way one can go back to </text>
<text top="761" left="108" width="174" height="18" font="0">lower levels very easily. </text>
<text top="804" left="108" width="693" height="18" font="0">The  first  level  is  the  universal  redirect,  where  the  customer  is  completely  redirected  to  the </text>
<text top="832" left="108" width="693" height="18" font="0">payment  platform  and  there  he  enters  his  payment  data.  In  the  second  level  that  form  is </text>
<text top="861" left="108" width="693" height="18" font="0">hosted  in  the  system  via  a  HTML  frame  or  JavaScript.  With  the  third  level  the  system  is  in </text>
<text top="889" left="108" width="693" height="18" font="0">charge  of  querying  the  platform  about  the  payment  options  and  display  them,  but  once  the </text>
<text top="917" left="108" width="693" height="18" font="0">user selects one he is redirected to the platform to provide the payment data. The fourth level </text>
<text top="945" left="108" width="693" height="18" font="0">displays both payment options and forms, taking care of submitting the forms to the platform. </text>
<text top="1010" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1048" left="108" width="9" height="12" font="10">11</text>
<text top="1049" left="117" width="673" height="17" font="11"> A cloud-to-cloud integration platform that allows to connect data between popular services and tools.</text>
<text top="1047" left="790" width="4" height="18" font="0"> </text>
</page>
<page number="57" position="absolute" top="0" left="0" height="1188" width="918">
<image top="702" left="375" width="156" height="54" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-57_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  57	  </text>
<text top="110" left="108" width="693" height="18" font="0">The  last  level  requires  the  system  to  be  PCI  compliant,  because  it  gathers  the  payment  data </text>
<text top="137" left="108" width="527" height="18" font="0">and queries the platform to charge the customer with the provided data. </text>
<text top="181" left="108" width="693" height="18" font="0">In  opposite  to  traditional  payment  platforms,  the  successful  integration  of  Optile  will  attest </text>
<text top="209" left="108" width="693" height="18" font="0">that  this  web-shop  supports  a  wide  range  of  payment  methods  and  providers,  as  well  as </text>
<text top="237" left="108" width="693" height="18" font="0">multiple different ways of integration. It is also a good choice for developers, who will have a </text>
<text top="265" left="108" width="693" height="18" font="0">system with several online payment methods already implemented. Optile first integration can </text>
<text top="293" left="108" width="561" height="18" font="0">become a little bit tedious, but its flexibility will be profitable for this project. </text>
<text top="336" left="108" width="693" height="18" font="0">A valid alternative is Paymill, a popular payment solution which characteristics are completely </text>
<text top="364" left="108" width="693" height="18" font="0">opposed to Optile: the integration is very fast and easy, but the payment providers offered are </text>
<text top="393" left="108" width="693" height="18" font="0">limited to credit card and direct debit. Also the customer is never redirected to the payment </text>
<text top="421" left="108" width="693" height="18" font="0">server, yet there is no need to be PCI compliant. The reason is that the payment form is never </text>
<text top="449" left="108" width="693" height="18" font="0">submitted, but its data is sent to the payment server via a JavaScript library, returning a token </text>
<text top="477" left="108" width="693" height="18" font="0">in exchange that the system can use to charge the customer from the server side. Nevertheless </text>
<text top="505" left="108" width="693" height="18" font="0">the selected solution is Optile, because its implementation will benefit more the project than </text>
<text top="533" left="108" width="64" height="18" font="0">Paymill. </text>
<text top="576" left="108" width="4" height="18" font="0"> </text>
<text top="619" left="108" width="195" height="22" font="5"><b>4.2.1.3  Play	  Framework	  </b></text>
<text top="659" left="108" width="4" height="18" font="0"> </text>
<text top="741" left="531" width="4" height="18" font="0"> </text>
<text top="780" left="328" width="251" height="15" font="12"><b>Figure 4.7</b>: Play Framework official logo.</text>
<text top="778" left="579" width="4" height="18" font="0"> </text>
<text top="818" left="108" width="4" height="18" font="0"> </text>
<text top="862" left="108" width="693" height="18" font="0">The use of Play Framework comes as a requirement to test the suitability of SPHERE.IO Play </text>
<text top="890" left="108" width="693" height="18" font="0">SDK,  which  was  build  to  create  web-shops  using  this  specific  framework.  Play  is  an  open </text>
<text top="918" left="108" width="693" height="18" font="0">source web application framework that was first released in 2007 and written in Java. In 2012 </text>
</page>
<page number="58" position="absolute" top="0" left="0" height="1188" width="918">
<image top="603" left="312" width="281" height="75" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-58_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">58	  </text>
<text top="110" left="108" width="551" height="18" font="0">a second release was announced, with a core completely rewritten in Scala</text>
<text top="110" left="659" width="10" height="12" font="10">12</text>
<text top="110" left="670" width="132" height="18" font="0">. This is precisely </text>
<text top="137" left="108" width="372" height="18" font="0">the version that SPHERE.IO Play SDK works with. </text>
<text top="181" left="108" width="693" height="18" font="0">This second version of Play uses Scala in its web template system. Projects in Play are built and </text>
<text top="209" left="108" width="693" height="18" font="0">deployed  with  SBT,  a  build  tool  for  Scala  and  Java  projects,  allowing  developers  to  choose </text>
<text top="237" left="108" width="693" height="18" font="0">between  these  two  programming  languages  in  order  to  implement  the  logic  of  their  web </text>
<text top="265" left="108" width="680" height="18" font="0">applications. Despite this, currently SPHERE.IO Play SDK is supported only in Java projects. </text>
<text top="308" left="108" width="693" height="18" font="0">Play  follows  the  MVC  logical  architectural  pattern  and  is  completely  RESTful,  which  means </text>
<text top="336" left="108" width="693" height="18" font="0">amongst other things that is stateless, unlike other Java frameworks. It was also designed to </text>
<text top="364" left="108" width="693" height="18" font="0">support full asynchronous HTTP programming, to serve long-lived requests without tying up </text>
<text top="393" left="108" width="693" height="18" font="0">other  threads.  Play  also  includes  the  Jackson  library  to  manipulate  JSON  data  and  native </text>
<text top="421" left="108" width="693" height="18" font="0">support  for  the  software  testing  frameworks  JUnit  and  Selenium.  Moreover  it  also  has  a </text>
<text top="449" left="108" width="693" height="18" font="0">compiler for CoffeeScript and LESS, two programming languages that compile into JavaScript </text>
<text top="477" left="108" width="159" height="18" font="0">and CSS respectively. </text>
<text top="520" left="108" width="4" height="18" font="0"> </text>
<text top="563" left="108" width="165" height="22" font="5"><b>4.2.1.4  CoffeeScript	  </b></text>
<text top="663" left="594" width="4" height="18" font="0"> </text>
<text top="703" left="339" width="228" height="15" font="12"><b>Figure 4.8</b>: CoffeeScript official logo.</text>
<text top="700" left="567" width="4" height="18" font="0"> </text>
<text top="741" left="108" width="4" height="18" font="0"> </text>
<text top="784" left="108" width="693" height="18" font="0">CoffeeScript  is  a  programming  language  that  compiles  into  JavaScript,  adding  syntactic </text>
<text top="812" left="108" width="40" height="18" font="0">sugar</text>
<text top="813" left="150" width="10" height="12" font="10">13</text>
<text top="812" left="162" width="640" height="18" font="0"> to  greatly  improve  the  developer  experience.  The  new  syntax  provides  a  better </text>
<text top="840" left="108" width="693" height="18" font="0">readability of the code and helps developers to write complex scripts much more easily. The </text>
<text top="868" left="108" width="693" height="18" font="0">increased readability of the code goes along with a decreased number of lines compared to the </text>
<text top="897" left="108" width="693" height="18" font="0">same  code  in  JavaScript,  around  one  third  fewer  lines.  Another  interesting  feature  is  an </text>
<text top="925" left="108" width="693" height="18" font="0">additional  syntax  to  use  JavaScript’s  native  prototyping  as  a  class-based  system,  making </text>
<text top="959" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="998" left="108" width="10" height="12" font="10">12</text>
<text top="998" left="119" width="650" height="17" font="11"> Scala is a object-functional programming language that runs on JVM and is compatible with Java </text>
<text top="1016" left="108" width="48" height="17" font="11">scripts.</text>
<text top="1014" left="156" width="4" height="18" font="0"> </text>
<text top="1048" left="108" width="10" height="12" font="10">13</text>
<text top="1049" left="119" width="674" height="17" font="11"> Syntactic sugar refers to those syntactic elements introduced to make things easier to read or express.</text>
<text top="1047" left="792" width="4" height="18" font="0"> </text>
</page>
<page number="59" position="absolute" top="0" left="0" height="1188" width="918">
<image top="419" left="388" width="129" height="53" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-59_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  59	  </text>
<text top="110" left="108" width="693" height="18" font="0">object-oriented  programming  with  JavaScript  less  complex,  particularly  when  it  comes  to </text>
<text top="137" left="108" width="95" height="18" font="0">inheritance.  </text>
<text top="181" left="108" width="693" height="18" font="0">Improving developer experience is a priority in this project, so CoffeeScript will contribute to </text>
<text top="209" left="108" width="693" height="18" font="0">make  client-side  code  easier  to  understand  and  modify.  It  will  also  be  considerably  helpful </text>
<text top="237" left="108" width="693" height="18" font="0">with the development of the JavaScript code, which is pretty complex due to the logical design </text>
<text top="265" left="108" width="693" height="18" font="0">of  the  system.  Therefore  its  use  is  very  appropriate,  especially  since  a  CoffeeScript  compiler </text>
<text top="293" left="108" width="263" height="18" font="0">comes included in Play Framework. </text>
<text top="336" left="108" width="4" height="18" font="0"> </text>
<text top="379" left="108" width="136" height="22" font="5"><b>4.2.1.5  LESS	  CSS	  </b></text>
<text top="457" left="518" width="4" height="18" font="0"> </text>
<text top="496" left="346" width="214" height="15" font="12"><b>Figure 4.9</b>: LESS CSS official logo.</text>
<text top="493" left="560" width="4" height="18" font="0"> </text>
<text top="534" left="108" width="4" height="18" font="0"> </text>
<text top="577" left="108" width="693" height="18" font="0">Similarly to CoffeeScript, LESS is a language that compiles into CSS. But unlike CoffeeScript, </text>
<text top="606" left="108" width="693" height="18" font="0">LESS does not modify the syntax of CSS, but only extends it with dynamic behavior, such as </text>
<text top="634" left="108" width="693" height="18" font="0">variables, operations and functions. This makes LESS very easy to learn and converts a simple </text>
<text top="661" left="108" width="369" height="18" font="0">CSS-based file into a powerful dynamic stylesheet. </text>
<text top="705" left="108" width="693" height="18" font="0">LESS  will  allow  to  better  organize  the  stylesheet  of  the  web-shop,  thus  facilitating  a  swift </text>
<text top="733" left="108" width="693" height="18" font="0">development,  fast  edition  and  easy  understanding  of  its  code.  Although  there  are  other  CSS </text>
<text top="761" left="108" width="693" height="18" font="0">preprocessors  like  the  popular  Sass,  the  provided  functionalities  are  quite  similar  and  Play </text>
<text top="789" left="108" width="516" height="18" font="0">Framework already comes with a native support of the LESS compiler. </text>
<text top="832" left="108" width="4" height="18" font="0"> </text>
<text top="875" left="108" width="4" height="18" font="0"> </text>
<text top="918" left="108" width="4" height="18" font="0"> </text>
<text top="961" left="108" width="4" height="18" font="0"> </text>
<text top="1005" left="108" width="4" height="18" font="0"> </text>
<text top="1048" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="60" position="absolute" top="0" left="0" height="1188" width="918">
<image top="192" left="350" width="207" height="51" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-60_1.png"/>
<image top="659" left="358" width="190" height="117" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-60_2.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">60	  </text>
<text top="109" left="108" width="122" height="22" font="5"><b>4.2.1.6  jQuery	  </b></text>
<text top="149" left="108" width="4" height="18" font="0"> </text>
<text top="228" left="557" width="4" height="18" font="0"> </text>
<text top="268" left="352" width="202" height="15" font="12"><b>Figure 4.10</b>: jQuery official logo.</text>
<text top="265" left="554" width="4" height="18" font="0"> </text>
<text top="306" left="108" width="4" height="18" font="0"> </text>
<text top="349" left="108" width="698" height="18" font="0">jQuery is a very powerful and fast JavaScript library that allows to easily do DOM scripting (i.e. </text>
<text top="377" left="108" width="693" height="18" font="0">HTML elements manipulation and event handling), perform animations and simplify the use </text>
<text top="406" left="108" width="61" height="18" font="0">of AJAX</text>
<text top="406" left="170" width="10" height="12" font="10">14</text>
<text top="406" left="180" width="622" height="18" font="0"> programming; altogether very necessary in this project. The main alternatives, such </text>
<text top="434" left="108" width="693" height="18" font="0">as MooTools or YUI Library, are also very satisfactory solutions in the mentioned areas, with </text>
<text top="462" left="108" width="693" height="18" font="0">no significant differences. The final choice of jQuery has been mainly determined by the fact </text>
<text top="490" left="108" width="401" height="18" font="0">that it has the largest community amongst the options. </text>
<text top="533" left="108" width="4" height="18" font="0"> </text>
<text top="576" left="108" width="175" height="22" font="5"><b>4.2.1.7  Handlebars.js	  </b></text>
<text top="616" left="453" width="4" height="18" font="0"> </text>
<text top="760" left="548" width="4" height="18" font="0"> </text>
<text top="800" left="356" width="198" height="15" font="12"><b>Figure 4.11</b>: handlebars.js logo. </text>
<text top="838" left="453" width="4" height="18" font="0"> </text>
<text top="881" left="108" width="693" height="18" font="0">Handlebars is the web template system used in this project to manage client-side templates. It </text>
<text top="910" left="108" width="693" height="18" font="0">is a JavaScript implementation of the platform-independent Mustache project, that allows to </text>
<text top="938" left="108" width="693" height="18" font="0">render input data in a template using a very clean syntax. Mustache has a so-called logic-less </text>
<text top="993" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1031" left="108" width="10" height="12" font="10">14</text>
<text top="1032" left="119" width="669" height="17" font="11"> AJAX is a technique used on the client side of a system to perform asynchronous operations, such as </text>
<text top="1049" left="108" width="404" height="17" font="11">communicating with a server, without keeping the client idle.</text>
<text top="1048" left="512" width="4" height="18" font="0"> </text>
</page>
<page number="61" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="30" height="20" font="0">  61	  </text>
<text top="110" left="108" width="693" height="18" font="0">template syntax because there are no explicit control flow statements, all needed logic comes </text>
<text top="137" left="108" width="493" height="18" font="0">exclusively from the data in the form of booleans, arrays or lambdas</text>
<text top="138" left="602" width="10" height="12" font="10">15</text>
<text top="137" left="612" width="8" height="18" font="0">. </text>
<text top="181" left="108" width="693" height="18" font="0">On the contrary Handlebars templates are compiled, allowing to define helpers to reuse code </text>
<text top="209" left="108" width="693" height="18" font="0">for presentation. It also comes with built-in helpers to control the default flow of the template, </text>
<text top="237" left="108" width="693" height="18" font="0">such as loops or conditional statements. Handlebars comes also with better support for paths </text>
<text top="265" left="108" width="694" height="18" font="0">to access the data. In short, this solution makes easier to implement templates than Mustache </text>
<text top="293" left="108" width="389" height="18" font="0">while still keeping logic separated from presentation. </text>
<text top="336" left="108" width="693" height="18" font="0">There is another project, Dust.js, with the same strong points as Handlebars and with useful </text>
<text top="364" left="108" width="693" height="18" font="0">additional features like template composition. Apparently is a better choice but the project has </text>
<text top="393" left="108" width="693" height="18" font="0">been abandoned for two years, maybe the reason why Handlebars has the largest community. </text>
<text top="421" left="108" width="693" height="18" font="0">During the last year LinkedIn has been contributing actively to a separated Dust.js project that </text>
<text top="449" left="108" width="693" height="18" font="0">the  company  is  using  for  its  website  [Bas12].  Regardless  it  has  been  considered  that </text>
<text top="477" left="108" width="698" height="18" font="0">Handlebars is a safer option, since the additional features are not indispensable for this project. </text>
<text top="520" left="108" width="4" height="18" font="0"> </text>
<text top="562" left="108" width="63" height="24" font="14"><i>4.2.2  E</i></text>
<text top="566" left="172" width="115" height="19" font="15"><i>XTERNAL	  DESIGN</i></text>
<text top="562" left="288" width="4" height="24" font="14"><i>	  </i></text>
<text top="605" left="108" width="693" height="18" font="0">The  external  design  of  a  system  requires  the  developer  team  to  work  closely  with  a  designer </text>
<text top="633" left="108" width="693" height="18" font="0">team.  While  the  designers  are  in  charge  of  creating  the  interface  and  aesthetic  design,  the </text>
<text top="661" left="108" width="693" height="18" font="0">other external design areas of the system need a more technical approach. These areas consist </text>
<text top="690" left="108" width="693" height="18" font="0">of the navigation and architecture design, as well as some parts of the content design. All these </text>
<text top="718" left="108" width="693" height="18" font="0">aspects  are  covered  by  the  User  Experience  (UX)  Model  explained  here.  It  describes,  in </text>
<text top="746" left="108" width="693" height="18" font="0">particular, how the dynamic content will be structured and organized in different screens, and </text>
<text top="773" left="108" width="551" height="18" font="0">how the user will navigate amongst those screens to reach a particular goal. </text>
<text top="817" left="108" width="693" height="18" font="0">For this project, the designer team together with the developer team decided to implement a </text>
<text top="845" left="108" width="693" height="18" font="0">layout structure and behavior inspired on different web-shops with innovative design, always </text>
<text top="873" left="108" width="693" height="18" font="0">focusing on offering the user a smooth interaction with the system. Each screen is going to be </text>
<text top="901" left="108" width="693" height="18" font="0">presented  and  described  with  wireframe  prototypes,  and  then  the  storyboard  sequence  and </text>
<text top="929" left="108" width="527" height="18" font="0">navigational paths will illustrate the connections between those screens. </text>
<text top="972" left="108" width="4" height="18" font="0"> </text>
<text top="1010" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1048" left="108" width="10" height="12" font="10">15</text>
<text top="1049" left="118" width="591" height="17" font="11"> Lambda is an anonymous function, meaning that it is not bound to any kind of identifier.</text>
<text top="1047" left="710" width="4" height="18" font="0"> </text>
</page>
<page number="62" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">62	  </text>
<text top="109" left="108" width="199" height="22" font="5"><b>4.2.2.1  Display	  products	  </b></text>
<text top="149" left="108" width="693" height="18" font="0">Product  listing  is  the  first  functionality  that  a  customer  uses  when  arriving  at  the  web-shop </text>
<text top="178" left="108" width="693" height="18" font="0">and the one he will be using for longer periods of time, so it needs to have a comfortable way to </text>
<text top="206" left="108" width="693" height="18" font="0">display and paginate the products. At best, traditional web-shops usually have very rigid ways </text>
<text top="234" left="108" width="693" height="18" font="0">of  listing  products:  pagination  consists  of  an  interface  that  allows  to  select  the  page  and  the </text>
<text top="262" left="108" width="693" height="18" font="0">amount of products per page, while display options let the user select between a list or a grid </text>
<text top="290" left="108" width="95" height="18" font="0">type of view. </text>
<text top="333" left="108" width="693" height="18" font="0">So  instead  of  showing  a  traditional  shop  catalog,  it  was  considered  a  better  option  to  let  the </text>
<text top="361" left="108" width="693" height="18" font="0">products flow freely through the web page, using all the width and height possible to show at </text>
<text top="389" left="108" width="693" height="18" font="0">once  the  maximum  amount  of  products  to  the  user  (Figure  4.12).  On  the  other  hand,  the </text>
<text top="417" left="108" width="693" height="18" font="0">pagination  needs  to  be  natural  without  losing  already  viewed  products,  so  when  the  user </text>
<text top="445" left="108" width="693" height="18" font="0">reaches the bottom of the page new products should appear automatically under the previous </text>
<text top="474" left="108" width="42" height="18" font="0">ones. </text>
<text top="517" left="108" width="693" height="18" font="0">The product thumbnails, besides price and name, will be showing a picture of the product and </text>
<text top="545" left="108" width="693" height="18" font="0">the  different  color  variants.  The  selected  variant  will  be  highlighted,  and  when  hovering  a </text>
<text top="573" left="108" width="693" height="18" font="0">different  color  the  thumbnail  will  be  updated  with  that  variant  information,  such  as  picture </text>
<text top="601" left="108" width="693" height="18" font="0">and  price,  if  different.  The  thumbnail  will  also  include  a  button  to  add  the  selected  product </text>
<text top="629" left="108" width="693" height="18" font="0">variant to the shopping cart. In case the product has different sizes available, when hovering </text>
<text top="658" left="108" width="693" height="18" font="0">the button a list of the different sizes will be shown, so that the user can select the desired size </text>
<text top="685" left="108" width="201" height="18" font="0">he wants to add to the cart. </text>
<text top="728" left="108" width="4" height="18" font="0"> </text>
<text top="772" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="63" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="223" width="460" height="535" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-63_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  63	  </text>
<text top="629" left="683" width="4" height="18" font="0"> </text>
<text top="669" left="198" width="509" height="15" font="12"><b>Figure 4.12</b>: Wireframe prototype of the product listing screen, filtering by category.</text>
<text top="666" left="708" width="4" height="18" font="0"> </text>
<text top="707" left="108" width="4" height="18" font="0"> </text>
<text top="750" left="108" width="693" height="18" font="0">When clicking on a product thumbnail the user will be redirected to the product detail of the </text>
<text top="778" left="108" width="693" height="18" font="0">variant  he  had  selected  (Figure  4.13),  if  any.  There  he  can  select  any  other  color  variant,  in </text>
<text top="807" left="108" width="693" height="18" font="0">which  case  a  new  page  will  be  loaded  in  order  to  update  the  URL,  to  let  the  user  share  the </text>
<text top="835" left="108" width="693" height="18" font="0">product URL that points to this particular color. He can also select a different size, but in this </text>
<text top="863" left="108" width="693" height="18" font="0">case the page is not reloading, as it was considered that the user does not have a need to share </text>
<text top="891" left="108" width="693" height="18" font="0">the exact size. Below one can add the selected product variant to the cart, optionally indicating </text>
<text top="919" left="108" width="139" height="18" font="0">the exact quantity. </text>
<text top="962" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="64" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="226" width="453" height="541" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-64_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">64	  </text>
<text top="635" left="680" width="4" height="18" font="0"> </text>
<text top="675" left="263" width="380" height="15" font="12"><b>Figure 4.13</b>: Wireframe prototype of the product detail screen.</text>
<text top="672" left="643" width="4" height="18" font="0"> </text>
<text top="712" left="108" width="4" height="18" font="0"> </text>
<text top="756" left="108" width="693" height="18" font="0">The  header  contains  a  mini-cart and the login panel throughout the website. In any product </text>
<text top="784" left="108" width="693" height="18" font="0">list  or  product  detail  page,  the  header  also  contains  the  categories  and  subcategories  of  the </text>
<text top="812" left="108" width="693" height="18" font="0">shop to let the user filter products by category. The rest of the pages should contain a button to </text>
<text top="840" left="108" width="693" height="18" font="0">allow the user go back to the last category or product he visited. When scrolling, the header is </text>
<text top="868" left="108" width="693" height="18" font="0">always  kept  at  the  top  of  the  page.  Below  the  header,  a  breadcrumb  is  showing  the  current </text>
<text top="896" left="108" width="107" height="18" font="0">category path. </text>
<text top="940" left="108" width="693" height="18" font="0">Whenever a product is added to the cart, the mini-cart located on the header appears for a few </text>
<text top="968" left="108" width="693" height="18" font="0">seconds,  to  let  the  customer  know  that  the  product  was  added  successfully.  At  any  time  the </text>
<text top="996" left="108" width="693" height="18" font="0">user  can  see  again  the  contents  of  his  shopping  cart  when  hovering  the  cart  button  on  the </text>
<text top="1024" left="108" width="660" height="18" font="0">header, that will be closed automatically when moving the cursor away from the mini-cart. </text>
</page>
<page number="65" position="absolute" top="0" left="0" height="1188" width="918">
<image top="308" left="175" width="556" height="460" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-65_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  65	  </text>
<text top="110" left="108" width="693" height="18" font="0">Below,  Figure  4.14  and  Figure  4.15  presents  the  storyboard  sequence  and  the  navigational </text>
<text top="138" left="108" width="693" height="18" font="0">paths, respectively, of the screens just described. In the storyboard sequence it is shown how </text>
<text top="166" left="108" width="693" height="18" font="0">the  same  interactions  defined  in  the  sequence  diagrams  of  the  specification  are  performed </text>
<text top="194" left="108" width="693" height="18" font="0">through the different screens. This connections are also captured in the following navigational </text>
<text top="222" left="108" width="113" height="18" font="0">paths diagram. </text>
<text top="265" left="108" width="4" height="18" font="0"> </text>
<text top="753" left="731" width="4" height="18" font="0"> </text>
<text top="793" left="226" width="454" height="15" font="12"><b>Figure 4.14</b>: Storyboard sequence of the <i>browse catalog </i>top-level use case.</text>
<text top="790" left="680" width="4" height="18" font="0"> </text>
<text top="830" left="108" width="4" height="18" font="0"> </text>
<text top="874" left="108" width="698" height="18" font="0">The resulting screens and navigational path diagram, besides the connections between screens, </text>
<text top="902" left="108" width="693" height="18" font="0">shows the detailed content of each screen. The screen for listing products displays the selected </text>
<text top="930" left="108" width="693" height="18" font="0">filtering options and contains a single form to change them. It also has the name of the current </text>
<text top="958" left="108" width="693" height="18" font="0">category and the list of matching products, with their different variants for color and size. This </text>
<text top="987" left="108" width="693" height="18" font="0">screen has an option to add a product to the cart, while the product detail page has a form to </text>
<text top="1015" left="108" width="693" height="18" font="0">let the user specify the quantity of items he wants to add. Both screens renders the category </text>
<text top="1042" left="108" width="642" height="18" font="0">tree so that the customer can list all products from a particular category at any moment. </text>
</page>
<page number="66" position="absolute" top="0" left="0" height="1188" width="918">
<image top="152" left="182" width="542" height="628" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-66_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">66	  </text>
<text top="109" left="108" width="4" height="18" font="0"> </text>
<text top="765" left="724" width="4" height="18" font="0"> </text>
<text top="805" left="196" width="513" height="15" font="12"><b>Figure 4.15</b>: Screens and navigational paths of the <i>browse catalog </i>top-level use case.</text>
<text top="802" left="710" width="4" height="18" font="0"> </text>
<text top="843" left="108" width="4" height="18" font="0"> </text>
<text top="886" left="108" width="213" height="22" font="5"><b>4.2.2.2  Purchase	  products	  </b></text>
<text top="926" left="108" width="693" height="18" font="0">In order to start the checkout process, the user will first access the cart detail page by clicking </text>
<text top="954" left="108" width="693" height="18" font="0">on the cart button. This page shows the items and their details, along with the possibility to </text>
<text top="982" left="108" width="693" height="18" font="0">remove  them  or  change  the  number  of  units  of  each  item  (Figure  4.16).  Both  actions  are </text>
<text top="1010" left="108" width="693" height="18" font="0">performed without reloading the page, just updating the contents of the shopping cart and the </text>
<text top="1038" left="108" width="200" height="18" font="0">pricing details accordingly. </text>
</page>
<page number="67" position="absolute" top="0" left="0" height="1188" width="918">
<image top="152" left="227" width="452" height="432" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-67_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  67	  </text>
<text top="109" left="108" width="4" height="18" font="0"> </text>
<text top="569" left="679" width="4" height="18" font="0"> </text>
<text top="608" left="246" width="415" height="15" font="12"><b>Figure 4.16</b>: Wireframe prototype of the shopping cart detail screen.</text>
<text top="606" left="660" width="4" height="18" font="0"> </text>
<text top="646" left="108" width="4" height="18" font="0"> </text>
<text top="690" left="108" width="693" height="18" font="0">The  checkout  page  can  be  accessed  from  both  mini-cart  and  cart  detail  page.  The  checkout </text>
<text top="718" left="108" width="693" height="18" font="0">page is probably one of the least frequented pages of a web-shop, but it is for sure the most </text>
<text top="746" left="108" width="693" height="18" font="0">important when it comes to user experience. The customer needs to feel he has control of the </text>
<text top="774" left="108" width="693" height="18" font="0">flow  and  that  he  is  able  to  quit  at  any  time.  The  checkout  needs  to  be  a  secure  and  robust </text>
<text top="802" left="108" width="184" height="18" font="0">environment to the user. </text>
<text top="845" left="108" width="693" height="18" font="0">Traditional web-shops usually reload when moving from one checkout step to the other,  and it </text>
<text top="874" left="108" width="693" height="18" font="0">can be sometimes difficult to change the data of a step that is not immediately before the active </text>
<text top="902" left="108" width="693" height="18" font="0">one. In some cases it is also hard to know what changes are modifying the price or to review </text>
<text top="930" left="108" width="693" height="18" font="0">what  was  entered  on  previous  steps.  All  these  issues  are  affecting  negatively  the  feeling  of </text>
<text top="958" left="108" width="152" height="18" font="0">control the user has. </text>
<text top="1001" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="68" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="223" width="460" height="551" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-68_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">68	  </text>
<text top="645" left="683" width="4" height="18" font="0"> </text>
<text top="685" left="226" width="453" height="15" font="12"><b>Figure 4.17</b>: Wireframe prototype of the checkout screen, shipping section.</text>
<text top="682" left="680" width="4" height="18" font="0"> </text>
<text top="722" left="108" width="4" height="18" font="0"> </text>
<text top="766" left="108" width="693" height="18" font="0">For this design it was considered a good idea to display all the steps throughout the page as </text>
<text top="794" left="108" width="693" height="18" font="0">sections that can be expanded, so that the user modifies them (see Figure 4.17). Once edited, </text>
<text top="822" left="108" width="693" height="18" font="0">the  section  closes  again  and  displays  a  summary  with  the  selected  options.  Every  change </text>
<text top="850" left="108" width="693" height="18" font="0">automatically updates the pricing details that are always shown at the bottom of the page. As a </text>
<text top="879" left="108" width="693" height="18" font="0">way  of  guiding  the  customer  through  the  checkout  process,  the  user  can  only  open  new </text>
<text top="907" left="108" width="693" height="18" font="0">sections sequentially. Also when a form is still not available due to missing requirements (e.g. </text>
<text top="935" left="108" width="693" height="18" font="0">shipping method cannot be displayed until shipping address is set) a message will be shown </text>
<text top="962" left="108" width="289" height="18" font="0">instead until the requirements are met. </text>
<text top="1006" left="108" width="693" height="18" font="0">The checkout is divided into three steps: first a cart summary, to verify the items are correct; </text>
<text top="1034" left="108" width="693" height="18" font="0">second the shipping information, to determine where and how the goods are being delivered; </text>
<text top="1062" left="108" width="693" height="18" font="0">and third the billing information, to select the way the products are being paid. Both shipping </text>
</page>
<page number="69" position="absolute" top="0" left="0" height="1188" width="918">
<image top="280" left="142" width="622" height="579" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-69_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  69	  </text>
<text top="110" left="108" width="693" height="18" font="0">and billing sections have on the left side a form to set the postal address and on the right side </text>
<text top="138" left="108" width="693" height="18" font="0">the shipping and payment options, respectively. When the customer is logged in, his address </text>
<text top="166" left="108" width="693" height="18" font="0">book will appear on the right side, allowing him to select one of his addresses, which data will </text>
<text top="193" left="108" width="370" height="18" font="0">then be copied to the corresponding address form. </text>
<text top="237" left="108" width="4" height="18" font="0"> </text>
<text top="844" left="764" width="4" height="18" font="0"> </text>
<text top="884" left="246" width="415" height="15" font="12"><b>Figure 4.18</b>: Storyboard sequence of the <i>checkout </i>top-level use case.</text>
<text top="881" left="660" width="4" height="18" font="0"> </text>
<text top="922" left="108" width="4" height="18" font="0"> </text>
<text top="965" left="108" width="693" height="18" font="0">The storyboard sequence from Figure 4.18 is showing how this checkout process is distributed </text>
<text top="993" left="108" width="693" height="18" font="0">with the presented screens. Below in Figure 4.19, the screens and navigational paths diagram </text>
<text top="1021" left="108" width="693" height="18" font="0">expose that all screens have almost the same data, such as a set of line items and some pricing </text>
<text top="1050" left="108" width="693" height="18" font="0">details,  while  the  checkout  page  and  the  order  summary  have  also  a  billing  and  shipping </text>
</page>
<page number="70" position="absolute" top="0" left="0" height="1188" width="918">
<image top="252" left="153" width="601" height="595" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-70_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">70	  </text>
<text top="110" left="108" width="693" height="18" font="0">address, all them with different multiplicities. The cart has forms to update line items, as many </text>
<text top="138" left="108" width="693" height="18" font="0">as  line  items  are  in  the  cart.  The  checkout  is  also  composed  of  different  forms,  one  for  each </text>
<text top="165" left="108" width="571" height="18" font="0">element that the customer must fill, to allow saving each element individually. </text>
<text top="209" left="108" width="4" height="18" font="0"> </text>
<text top="832" left="753" width="4" height="18" font="0"> </text>
<text top="871" left="216" width="474" height="15" font="12"><b>Figure 4.19</b>: Screens and navigational paths of the <i>checkout </i>top-level use case.</text>
<text top="869" left="690" width="4" height="18" font="0"> </text>
<text top="909" left="453" width="4" height="18" font="0"> </text>
<text top="952" left="108" width="212" height="22" font="5"><b>4.2.2.3  User	  management	  </b></text>
<text top="992" left="108" width="693" height="18" font="0">Before attempting to access his profile page, the user needs to identify himself to the system. </text>
<text top="1021" left="108" width="693" height="18" font="0">This  is  done  in  the  login  screen,  a  page  that  also  contains  a  form  to  register  into  the  system </text>
<text top="1049" left="108" width="693" height="18" font="0">(see Figure 4.20). In case the user forgot his password, the login form contains an option to </text>
</page>
<page number="71" position="absolute" top="0" left="0" height="1188" width="918">
<image top="224" left="248" width="411" height="233" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-71_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  71	  </text>
<text top="110" left="108" width="693" height="18" font="0">recover  it,  which  renders  a  modal  window  where  an  email  address  is  requested  when  the </text>
<text top="137" left="108" width="127" height="18" font="0">option is clicked. </text>
<text top="181" left="108" width="4" height="18" font="0"> </text>
<text top="441" left="658" width="4" height="18" font="0"> </text>
<text top="481" left="289" width="329" height="15" font="12"><b>Figure 4.20</b>: Wireframe prototype of the login screen.</text>
<text top="478" left="618" width="4" height="18" font="0"> </text>
<text top="519" left="108" width="4" height="18" font="0"> </text>
<text top="562" left="108" width="693" height="18" font="0">Submitting this form will send an email to the user with a new URL, that redirects to the same </text>
<text top="590" left="108" width="693" height="18" font="0">login page but with a different modal window to enter a new password. Once the password is </text>
<text top="618" left="108" width="693" height="18" font="0">submitted the modal window closes, thus showing the login form again to allow the user enter </text>
<text top="646" left="108" width="148" height="18" font="0">his new credentials. </text>
<text top="689" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="72" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="231" width="444" height="514" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-72_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">72	  </text>
<text top="608" left="675" width="4" height="18" font="0"> </text>
<text top="648" left="218" width="471" height="15" font="12"><b>Figure 4.21</b>: Wireframe prototype of the user profile screen, order list section.</text>
<text top="645" left="689" width="4" height="18" font="0"> </text>
<text top="685" left="453" width="4" height="18" font="0"> </text>
<text top="729" left="108" width="693" height="18" font="0">The  user  profile  is  a  single  page  with  sections  to  change  user  data,  password,  manage  the </text>
<text top="757" left="108" width="693" height="18" font="0">address book and view the list of orders (see Figure 4.21). The latter consists of some stockable </text>
<text top="785" left="108" width="693" height="18" font="0">sections,  each  one  containing  all  information  about  a  particular  order,  such  as  the  products </text>
<text top="813" left="108" width="693" height="18" font="0">purchased, the price details and all shipping and billing related information. When clicking on </text>
<text top="841" left="108" width="637" height="18" font="0">a section, this one expands showing its contents, while all other sections remain closed. </text>
</page>
<page number="73" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="228" width="450" height="289" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-73_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  73	  </text>
<text top="383" left="678" width="4" height="18" font="0"> </text>
<text top="423" left="204" width="497" height="15" font="12"><b>Figure 4.22</b>: Wireframe prototype of the user profile screen, address book section.</text>
<text top="420" left="702" width="4" height="18" font="0"> </text>
<text top="460" left="108" width="4" height="18" font="0"> </text>
<text top="504" left="108" width="693" height="18" font="0">The address book is the only section with a slightly complex design. This component has a list </text>
<text top="532" left="108" width="693" height="18" font="0">of existing addresses on the left and an empty form on the right to add a new address (Figure </text>
<text top="560" left="108" width="693" height="18" font="0">4.22). When the user selects an address the form changes into edition mode, highlighting the </text>
<text top="588" left="108" width="693" height="18" font="0">address and copying its data to the empty form. A button at the top allows the user to return </text>
<text top="616" left="108" width="694" height="18" font="0">the form to its initial mode. Whenever the user adds, updates or removes an address, the list of </text>
<text top="644" left="108" width="248" height="18" font="0">addresses is updated accordingly. </text>
<text top="687" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="74" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="222" width="461" height="379" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-74_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">74	  </text>
<text top="473" left="684" width="4" height="18" font="0"> </text>
<text top="513" left="237" width="433" height="15" font="12"><b>Figure 4.23</b>: Storyboard sequence of the <i>check order </i>top-level use case.</text>
<text top="510" left="670" width="4" height="18" font="0"> </text>
<text top="551" left="108" width="4" height="18" font="0"> </text>
<text top="594" left="108" width="693" height="18" font="0">Again,  the  specification  sequence  diagram  is  adapted  to  the  given  design,  illustrating  the </text>
<text top="622" left="108" width="693" height="18" font="0">different screens that participate in every interaction in the <i>check order </i>top-level use case (see </text>
<text top="650" left="108" width="693" height="18" font="0">Figure 4.23). Figure 4.24 below shows the screens and navigational paths diagram, displaying </text>
<text top="679" left="108" width="693" height="18" font="0">every screen component that belong to the customer profile screen, each with its own data and </text>
<text top="706" left="108" width="51" height="18" font="0">forms. </text>
<text top="749" left="453" width="4" height="18" font="0"> </text>
</page>
<page number="75" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="134" width="639" height="701" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-75_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  75	  </text>
<text top="795" left="773" width="4" height="18" font="0"> </text>
<text top="835" left="206" width="494" height="15" font="12"><b>Figure 4.24</b>: Screens and navigational paths of the <i>check order </i>top-level use case.</text>
<text top="832" left="700" width="4" height="18" font="0"> </text>
<text top="872" left="108" width="4" height="18" font="0"> </text>
<text top="915" left="108" width="59" height="24" font="14"><i>4.2.3  I</i></text>
<text top="919" left="168" width="117" height="19" font="15"><i>NTERNAL	  DESIGN</i></text>
<text top="915" left="285" width="4" height="24" font="14"><i>	  </i></text>
<text top="958" left="108" width="693" height="18" font="0">After representing the external design of the system, every diagram of the UX Model needs to </text>
<text top="986" left="108" width="693" height="18" font="0">be adapted to the chosen technologies. An internal class and sequence diagram are resulting </text>
<text top="1014" left="108" width="693" height="18" font="0">from this process, showing the communication between each component. These diagrams are </text>
</page>
<page number="76" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">76	  </text>
<text top="110" left="108" width="362" height="18" font="0">done  with  the  Web  Application  Extension  (WAE</text>
<text top="110" left="471" width="10" height="12" font="10">16</text>
<text top="110" left="481" width="321" height="18" font="0">)  to  UML,  which  allows  to  represent  every </text>
<text top="137" left="108" width="609" height="18" font="0">significant element of the web presentation layer with the UML modeling language. </text>
<text top="181" left="108" width="693" height="18" font="0">In  this  project,  the  new  class  stereotypes  of  WAE  enabled  to  represent  server-side  pages, </text>
<text top="209" left="108" width="693" height="18" font="0">client-side pages, forms and script libraries; every class with its own attributes and methods. </text>
<text top="237" left="108" width="693" height="18" font="0">There are also new association stereotypes to represent the different ways of communication </text>
<text top="265" left="108" width="693" height="18" font="0">between  elements.  These  can  be,  amongst  others,  a  common  link  with  parameters  (link),  a </text>
<text top="293" left="108" width="693" height="18" font="0">form  data  submission  (submit),  a  forwarding  of  the  request  to  another  element  (forward),  a </text>
<text top="321" left="108" width="556" height="18" font="0">generation of HTML output (build) or an import of a JavaScript file (script). </text>
<text top="364" left="108" width="693" height="18" font="0">Internal  design  diagrams  can  become  quite  complex  when  trying  to  represent  all  files  that </text>
<text top="393" left="108" width="693" height="18" font="0">participate in a use case, particularly when applying some design patterns. For this reason, in </text>
<text top="421" left="108" width="693" height="18" font="0">this  section  only  those  diagrams  that  illustrate  some  special  behavior  or  structure  are </text>
<text top="449" left="108" width="693" height="18" font="0">displayed, simplifying any characteristic that is later described in the following sections, such </text>
<text top="477" left="108" width="328" height="18" font="0">as design patterns that apply to all use cases. </text>
<text top="520" left="108" width="693" height="18" font="0">The internal class diagram in Figure 4.25 represents the whole <i>browse catalog </i>top-level use </text>
<text top="548" left="108" width="693" height="18" font="0">case.  It  is  worth  noticing  that  usually  a  client  page  links  first  to  a  server  page,  which  then </text>
<text top="577" left="108" width="693" height="18" font="0">forwards to a server page with a “scala” extension. The first server page symbolizes a file in the </text>
<text top="605" left="108" width="693" height="18" font="0">Controller component, while the second corresponds to a Scala template from the View, which </text>
<text top="632" left="108" width="163" height="18" font="0">builds the client page. </text>
<text top="676" left="108" width="693" height="18" font="0">An exception to this rule appears within contexts, when the client page asynchronously makes </text>
<text top="704" left="108" width="693" height="18" font="0">a request to the server. The response is simple data, so no HTML output is built, and it is the </text>
<text top="732" left="108" width="693" height="18" font="0">client page itself which updates its content with the information sent via forward parameters. </text>
<text top="760" left="108" width="693" height="18" font="0">The  methods  that  allow  to  update  the  information  from  the  client  page  are  always  coming </text>
<text top="788" left="108" width="693" height="18" font="0">from the JavaScript files, but generally are represented as methods from the client page. Only </text>
<text top="816" left="108" width="693" height="18" font="0">exception appears when the same method is shared between two pages, in which case it is left </text>
<text top="844" left="108" width="252" height="18" font="0">in the script for simplicity [Oli10]. </text>
<text top="1010" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1048" left="108" width="10" height="12" font="10">16</text>
<text top="1049" left="119" width="228" height="17" font="11"> See more information in [Con03].</text>
<text top="1047" left="347" width="4" height="18" font="0"> </text>
</page>
<page number="77" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="692" height="739" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-77_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  77	  </text>
<text top="833" left="800" width="4" height="18" font="0"> </text>
<text top="873" left="200" width="506" height="15" font="12"><b>Figure 4.25</b>: Internal design class diagram of the <i>browse catalog </i>top-level use case.</text>
<text top="870" left="706" width="4" height="18" font="0"> </text>
<text top="911" left="453" width="4" height="18" font="0"> </text>
<text top="954" left="108" width="693" height="18" font="0">So an example of this particular behavior can be observed when adding a product to the cart </text>
<text top="982" left="108" width="693" height="18" font="0">from a product page or a product list page. The server page that updates the cart sends to the </text>
<text top="1010" left="108" width="693" height="18" font="0">mini cart component all the information related to the shopping cart contents. With this data, </text>
</page>
<page number="78" position="absolute" top="0" left="0" height="1188" width="918">
<image top="224" left="163" width="579" height="617" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-78_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">78	  </text>
<text top="110" left="108" width="693" height="18" font="0">the  JavaScript  in  charge  of  the  cart  updates  only  the  mini  cart  component  with  the  new </text>
<text top="137" left="108" width="96" height="18" font="0">information. </text>
<text top="181" left="108" width="4" height="18" font="0"> </text>
<text top="825" left="743" width="4" height="18" font="0"> </text>
<text top="865" left="227" width="451" height="15" font="12"><b>Figure 4.26</b>: Internal design sequence diagram of the <i>pagination </i>use case.</text>
<text top="862" left="679" width="4" height="18" font="0"> </text>
<text top="902" left="108" width="4" height="18" font="0"> </text>
<text top="946" left="108" width="693" height="18" font="0">Another example is the functionality to load more products when scrolling to the bottom of the </text>
<text top="974" left="108" width="693" height="18" font="0">page.  In  this  case  also  the  corresponding  sequence  diagram  is  presented  (Figure  4.26)  to </text>
<text top="1002" left="108" width="693" height="18" font="0">observe  in  detail  how  the  components  are  behaving.  First,  the  customer  navigates  to  the </text>
<text top="1030" left="108" width="693" height="18" font="8"><i>SelectCategory</i> server page, which requests to SPHERE.IO the list of products for a particular </text>
</page>
<page number="79" position="absolute" top="0" left="0" height="1188" width="918">
<image top="535" left="162" width="583" height="432" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-79_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  79	  </text>
<text top="110" left="108" width="693" height="18" font="0">category.  This  server  page  forwards  all  necessary  information  to  the  corresponding  view, </text>
<text top="137" left="108" width="511" height="18" font="0">which creates the entire client page and sends it back to the customer. </text>
<text top="181" left="108" width="693" height="18" font="0">Then when the customer scrolls to the bottom of the page, the<i> load more products </i>method is </text>
<text top="209" left="108" width="693" height="18" font="0">called  from  the  client  page,  which  starts  an  asynchronous  request  to  the  server  while  the </text>
<text top="237" left="108" width="693" height="18" font="0">control is given back to the customer. In this request the script itself communicates with the </text>
<text top="265" left="108" width="693" height="18" font="0">server page <i>ListProducts</i>, which again makes a request to the model, this time asking for the </text>
<text top="293" left="108" width="693" height="18" font="0">next  page.  The  resulting  data  is  sent  to  the  client  page,  that  renders  and  appends  a  new </text>
<text top="321" left="108" width="382" height="18" font="8"><i>Product List </i>component with the received products. </text>
<text top="364" left="108" width="693" height="18" font="0">Figure  4.27  below  is  the  internal  design  class  diagram  for  updating  and  removing  line  items </text>
<text top="393" left="108" width="693" height="18" font="0">from the cart. The update functionality requires a form where the customer specifies the new </text>
<text top="421" left="108" width="693" height="18" font="0">quantity,  while  removing  is  just  a  direct  link.  Both  actions  end  up  in  the  server  page  for </text>
<text top="449" left="108" width="555" height="18" font="0">updating the cart, which forwards the new cart information to the cart page. </text>
<text top="492" left="108" width="4" height="18" font="0"> </text>
<text top="952" left="744" width="4" height="18" font="0"> </text>
<text top="991" left="146" width="614" height="15" font="12"><b>Figure 4.27</b>: Internal design class diagram of the <i>checkout</i> top-level use case, detail of the cart update.</text>
<text top="989" left="760" width="4" height="18" font="0"> </text>
<text top="1029" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="80" position="absolute" top="0" left="0" height="1188" width="918">
<image top="280" left="114" width="677" height="592" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-80_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">80	  </text>
<text top="110" left="108" width="693" height="18" font="0">Figure 4.28 below presents the internal sequence diagram corresponding to the <i>update item in </i></text>
<text top="138" left="108" width="693" height="18" font="8"><i>cart </i>use case, although the diagram corresponding to the deletion is very similar. The initial </text>
<text top="166" left="108" width="693" height="18" font="0">process to access the client page is the same as any other use case: the customer navigates to </text>
<text top="193" left="108" width="683" height="18" font="0">the server page, which forwards the information to the template, which builds the client page. </text>
<text top="237" left="108" width="4" height="18" font="0"> </text>
<text top="857" left="792" width="4" height="18" font="0"> </text>
<text top="896" left="203" width="500" height="15" font="12"><b>Figure 4.28</b>: Internal design sequence diagram of the <i>update item in cart </i>use case.</text>
<text top="893" left="703" width="4" height="18" font="0"> </text>
<text top="934" left="108" width="4" height="18" font="0"> </text>
<text top="978" left="108" width="698" height="18" font="0">Unlike the use case for removing line items, when updating them the customer is filling a form. </text>
<text top="1006" left="108" width="693" height="18" font="0">But  the  form  does  not  have  a  submit  button,  instead  it  is  automatically  submitted  when  the </text>
<text top="1034" left="108" width="693" height="18" font="0">user changes the quantity value. That is the reason why after filling the form the page is calling </text>
</page>
<page number="81" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="30" height="20" font="0">  81	  </text>
<text top="110" left="108" width="693" height="18" font="0">the  <i>update  line  item  </i>method,  which  asynchronously  submits  the  form  to  the  server  page </text>
<text top="137" left="108" width="96" height="18" font="8"><i>UpdateCart</i>. </text>
<text top="181" left="108" width="693" height="18" font="0">As  in  any  other  background  form  submission  in  this  project,  the  server  page  requests  to  the </text>
<text top="209" left="108" width="693" height="18" font="0">model the corresponding change and the related information is forwarded to the initial client </text>
<text top="237" left="108" width="693" height="18" font="0">page.  From  this  page  is  called  the  <i>update  price  details  </i>method,  which  in  fact  builds  several </text>
<text top="265" left="108" width="673" height="18" font="0">page components and replaces with them the corresponding elements displayed in the page. </text>
<text top="308" left="108" width="693" height="18" font="0">The next two diagrams illustrate together the <i>place order </i>use case, being Figure 4.29 focused </text>
<text top="336" left="108" width="693" height="18" font="0">on the checkout page, and Figure 4.30 on the order creation and display of a summary. The </text>
<text top="364" left="108" width="693" height="18" font="0">first diagram has several forms, one for each element to be modified individually: the shipping </text>
<text top="392" left="108" width="582" height="18" font="0">address, the shipping method, the billing address and finally the payment form. </text>
<text top="436" left="108" width="693" height="18" font="0">The  payment  form  does  not  appear  in  the  diagram  because  its  submission  is  not  directed  to </text>
<text top="464" left="108" width="693" height="18" font="0">this system, but to the payment platform, as it will be described in the corresponding sequence </text>
<text top="492" left="108" width="693" height="18" font="0">diagram. In any case, it would only consist of a submit button and a dynamic payment form </text>
<text top="520" left="108" width="693" height="18" font="0">loaded with the data coming from Optile. As the actual content is unknown, it was considered </text>
<text top="548" left="108" width="272" height="18" font="0">best to leave it out from the diagram. </text>
<text top="591" left="108" width="693" height="18" font="0">All other forms from the diagram are submitting in the background as the previous example. </text>
<text top="620" left="108" width="693" height="18" font="0">In  every  asynchronous  call,  the  updated  information  regarding  the  current  checkout  state  is </text>
<text top="648" left="108" width="693" height="18" font="0">forwarded  to  the  checkout  page.  On  the  other  hand,  some  of  the  data  needs  to  be  requested </text>
<text top="676" left="108" width="693" height="18" font="0">explicitly to the server, such as the list of shipping methods or the address book of a registered </text>
<text top="704" left="108" width="631" height="18" font="0">customer, to avoid performing repeated unnecessary calls to the SPHERE.IO backend. </text>
<text top="747" left="108" width="693" height="18" font="0">The second diagram follows a simple design: the moment the customer is redirected from the </text>
<text top="775" left="108" width="693" height="18" font="0">payment  platform  back  to  the  system  with  a  successful  payment,  the  server  page  creates  the </text>
<text top="803" left="108" width="693" height="18" font="0">order  and  forwards  all  its  information  to  the  template,  which  in  turn  creates  a  page  with  a </text>
<text top="831" left="108" width="398" height="18" font="0">summary of the order to be displayed to the customer. </text>
<text top="874" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="82" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="121" width="665" height="497" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-82_1.png"/>
<image top="680" left="164" width="578" height="314" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-82_2.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">82	  </text>
<text top="591" left="785" width="4" height="18" font="0"> </text>
<text top="631" left="128" width="653" height="15" font="12"><b>Figure 4.29</b>: Internal design class diagram of the <i>checkout</i> top-level use case, detail of the checkout process. </text>
<text top="646" left="453" width="4" height="18" font="0"> </text>
<text top="979" left="742" width="4" height="18" font="0"> </text>
<text top="1018" left="137" width="633" height="15" font="12"><b>Figure 4.30</b>: Internal design class diagram of the <i>checkout</i> top-level use case, detail of the order creation.</text>
<text top="1016" left="770" width="4" height="18" font="0"> </text>
</page>
<page number="83" position="absolute" top="0" left="0" height="1188" width="918">
<image top="308" left="110" width="686" height="599" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-83_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  83	  </text>
<text top="110" left="108" width="693" height="18" font="0">In contrast, the internal sequence diagram of the order creation is much more complex than </text>
<text top="138" left="108" width="693" height="18" font="0">the class diagram (see Figure 4.31). Once the checkout form is filled and the customer decides </text>
<text top="166" left="108" width="693" height="18" font="0">to  submit  it,  the  data  is  sent  directly  to  the  payment  platform  in  order  to  avoid  being  PCI </text>
<text top="194" left="108" width="693" height="18" font="0">compliant. The platform proceeds charging the customer and then redirects him to the system. </text>
<text top="222" left="108" width="460" height="18" font="0">There the order is created and the order summary is displayed. </text>
<text top="265" left="108" width="4" height="18" font="0"> </text>
<text top="892" left="796" width="4" height="18" font="0"> </text>
<text top="931" left="183" width="540" height="15" font="12"><b>Figure 4.31</b>: Internal design sequence diagram of the <i>place order </i>and<i> payment </i>use cases.</text>
<text top="928" left="723" width="4" height="18" font="0"> </text>
<text top="969" left="108" width="4" height="18" font="0"> </text>
<text top="1012" left="108" width="693" height="18" font="0">The payment platform redirects the customer to a different server page based on whether the </text>
<text top="1041" left="108" width="693" height="18" font="0">charging  operation  was  successful.  The  order  is  therefore  only  created  when  the  customer  is </text>
</page>
<page number="84" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="21" size="14" family="Times" color="#ff0000"/>
<image top="252" left="316" width="275" height="170" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-84_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">84	  </text>
<text top="110" left="108" width="693" height="18" font="0">redirected to the successful server page. But this system would easily lead to fraud, because the </text>
<text top="138" left="108" width="693" height="18" font="0">user could try to access the page directly without being charged. To solve this issue, the order </text>
<text top="165" left="108" width="387" height="18" font="0">is created but always with a pending payment status. </text>
<text top="209" left="108" width="4" height="18" font="0"> </text>
<text top="407" left="590" width="4" height="18" font="0"> </text>
<text top="446" left="161" width="584" height="15" font="12"><b>Figure 4.32</b>: Internal design sequence diagram of the notification event in the <i>payment </i>use case.</text>
<text top="443" left="745" width="4" height="18" font="0"> </text>
<text top="484" left="108" width="4" height="18" font="0"> </text>
<text top="528" left="108" width="693" height="18" font="0">The  only  possible  way  to  update  the  payment  status  from  the  web-shop  is  to  access  the </text>
<text top="556" left="108" width="693" height="18" font="8"><i>NotifyPayment</i> server page, which access will be limited to the payment platform (see Figure </text>
<text top="584" left="108" width="693" height="18" font="0">4.32). Optile requires this notification request to update the payment status of a certain order, </text>
<text top="612" left="108" width="693" height="18" font="0">something  necessary  when  there  is  a  change  in  the  payment.  This  can  easily  happen  when </text>
<text top="640" left="108" width="693" height="18" font="0">using  PayPal,  because  the  payment  needs  to  be  approved  first,  therefore  changing  multiple </text>
<text top="668" left="108" width="374" height="18" font="0">times of status during an undefined period of time. </text>
<text top="711" left="108" width="4" height="18" font="0"> </text>
<text top="754" left="108" width="66" height="24" font="14"><i>4.2.4  D</i></text>
<text top="757" left="175" width="97" height="19" font="15"><i>ESIGN	  OF	  THE	  </i></text>
<text top="754" left="272" width="17" height="24" font="14"><i>M</i></text>
<text top="757" left="289" width="129" height="19" font="15"><i>ODEL	  COMPONENT</i></text>
<text top="754" left="418" width="4" height="24" font="14"><i>	  </i></text>
<text top="796" left="108" width="693" height="18" font="0">As described at the beginning of the section System Logical Architectural 4.2, the logic of the </text>
<text top="824" left="108" width="693" height="18" font="0">model  component  is  largely  located  in  the  SPHERE.IO  Play  SDK,  which  contains  all  the </text>
<text top="852" left="108" width="693" height="18" font="0">commerce logic and allows to access all data stored in the e-commerce backend. The <i>Sphere</i> </text>
<text top="880" left="108" width="666" height="18" font="0">class shown in the diagram below (Figure 4.33) is precisely the entry point for SPHERE.IO. </text>
<text top="924" left="108" width="693" height="18" font="0">There  is  also  a  <i>Payment</i>  class,  a  small  library  that  will  help  to  communicate  with  the  Optile </text>
<text top="952" left="108" width="631" height="18" font="0">API, that requires the messages to be sent using XML. As explained before (see section</text>
<text top="952" left="739" width="4" height="18" font="21"> </text>
<text top="952" left="743" width="63" height="18" font="0">4.2.1.2), </text>
<text top="980" left="108" width="693" height="18" font="0">Optile needs to be implemented in an incremental way, reason why the library can effortless </text>
<text top="1008" left="108" width="693" height="18" font="0">cover all five levels of integration, thus allowing developers to easily switch to the level it fits </text>
<text top="1036" left="108" width="105" height="18" font="0">best for them. </text>
</page>
<page number="85" position="absolute" top="0" left="0" height="1188" width="918">
<image top="308" left="264" width="378" height="429" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-85_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  85	  </text>
<text top="110" left="108" width="693" height="18" font="0">The system also requires a class to send emails through any email system of preference. The </text>
<text top="138" left="108" width="447" height="18" font="8"><i>Mail</i> class will cover this functionality, as long as the SMTP</text>
<text top="138" left="556" width="10" height="12" font="10">17</text>
<text top="138" left="566" width="236" height="18" font="0"> details of the email system are </text>
<text top="166" left="108" width="693" height="18" font="0">provided. Given that Heroku does not provide an internal SMTP server, the deployed version </text>
<text top="194" left="108" width="693" height="18" font="0">of this project will need to use an external server like Mailjet, a cloud emailing platform that </text>
<text top="222" left="108" width="481" height="18" font="0">offers several features that may be of interest for potential clients. </text>
<text top="265" left="108" width="4" height="18" font="0"> </text>
<text top="722" left="642" width="4" height="18" font="0"> </text>
<text top="761" left="271" width="364" height="15" font="12"><b>Figure 4.33</b>: Overview of the server-side Model component.</text>
<text top="758" left="635" width="4" height="18" font="0"> </text>
<text top="799" left="108" width="4" height="18" font="0"> </text>
<text top="843" left="108" width="693" height="18" font="0">The Model component is also containing different helpers, where some particular logic of this </text>
<text top="871" left="108" width="693" height="18" font="0">web-shop  is  located.  The  <i>ControllerHelper</i>  is  composed  of  methods  that  allows  to  abstract </text>
<text top="899" left="108" width="693" height="18" font="0">some common logic that is used in the Controller component (i.e. logic to handle and display </text>
<text top="927" left="108" width="693" height="18" font="0">messages and errors) or data coming from SPHERE.IO requiring some previous manipulation </text>
<text top="993" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1031" left="108" width="10" height="12" font="10">17</text>
<text top="1032" left="118" width="672" height="17" font="11"> SMTP stands for Simple Mail Transfer Protocol and is a standard for email transmission through the </text>
<text top="1049" left="108" width="117" height="17" font="11">Internet network.</text>
<text top="1048" left="225" width="4" height="18" font="0"> </text>
</page>
<page number="86" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">86	  </text>
<text top="110" left="108" width="693" height="18" font="0">before  it  is  used  (i.e.  get  default  category  of  a  product  or  get  address  book  of  the  current </text>
<text top="137" left="108" width="83" height="18" font="0">customer). </text>
<text top="181" left="108" width="693" height="18" font="0">On the other hand, the View Helper is a common design pattern that allows to separate logic </text>
<text top="209" left="108" width="693" height="18" font="0">that  otherwise  needs  to  be  integrated  in  the  template,  in  this  project  applied  with  the </text>
<text top="237" left="108" width="693" height="18" font="8"><i>ViewHelper</i>  class.  Although  templates  in  Play  Framework  enables  to  use  all  the  potential  of </text>
<text top="265" left="108" width="693" height="18" font="0">the  programming  language  Scala,  it  is  a  good  practice  to  keep  complex  logic  out  of  the </text>
<text top="293" left="108" width="694" height="18" font="0">templates.  All  this  logic  is  then  placed  in  these  helper  classes  and  called  from  the  views  as </text>
<text top="321" left="108" width="79" height="18" font="0">necessary. </text>
<text top="364" left="108" width="693" height="18" font="0">Lastly,  there  are  a  group  of  classes  related  to  the  web  forms  and  the  payment  information </text>
<text top="393" left="108" width="693" height="18" font="0">received by the system (see Figure 4.34). They handle all the server-side validation for every </text>
<text top="421" left="108" width="693" height="18" font="0">parameter and may also provide helpful getters and setters to easily convert model data into </text>
<text top="449" left="108" width="693" height="18" font="0">form  data,  and  vice  versa  (e.g.  an  Address  class  instance  would  be  converted  into  the </text>
<text top="477" left="108" width="357" height="18" font="0">appropriate form fields street, city, country, etc.) </text>
<text top="520" left="108" width="693" height="18" font="0">These  form  classes  also  host  the  methods  generating  the  different  content  that  must  be  sent </text>
<text top="548" left="108" width="693" height="18" font="0">back to the client in relation to the result of the form submission. For example, when updating </text>
<text top="577" left="108" width="693" height="18" font="0">a  line  item  from  the  cart,  a  success  response  contains  a  message  for  the  user  and  all  the </text>
<text top="605" left="108" width="693" height="18" font="0">shopping  cart  related  information.  This  related  information  is  generated  with  some  other </text>
<text top="632" left="108" width="651" height="18" font="0">methods located in the forms as well, that convert a model class instance into JSON data. </text>
<text top="676" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="87" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="139" width="629" height="488" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-87_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  87	  </text>
<text top="582" left="767" width="4" height="18" font="0"> </text>
<text top="613" left="209" width="489" height="15" font="12"><b>Figure 4.34</b>: Overview of the Form package of the server-side Model component.</text>
<text top="610" left="698" width="4" height="18" font="0"> </text>
<text top="650" left="108" width="4" height="18" font="0"> </text>
<text top="694" left="108" width="693" height="18" font="0">Due  to  the  design  of  the  system,  the  client  side  has  also  some  important  elements  from  the </text>
<text top="722" left="108" width="693" height="18" font="0">Model  component.  Although  the  separation  between  Model  and  Controller  is  not  properly </text>
<text top="750" left="108" width="693" height="18" font="0">defined in the client side, mainly because of the simplicity of the business logic located there, </text>
<text top="778" left="108" width="693" height="18" font="0">there are also some client-side classes that are dedicated mainly to processing and validation </text>
<text top="806" left="108" width="201" height="18" font="0">purposes (see Figure 4.35). </text>
<text top="849" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="88" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="234" width="438" height="384" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-88_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">88	  </text>
<text top="478" left="672" width="4" height="18" font="0"> </text>
<text top="517" left="273" width="363" height="15" font="12"><b>Figure 4.35</b>: Overview of the client-side Model component. </text>
<text top="555" left="453" width="4" height="18" font="0"> </text>
<text top="599" left="108" width="693" height="18" font="0">On  the  one  hand  there  are  some  classes  in  charge  of  different  elements  that  are  affected  by </text>
<text top="627" left="108" width="693" height="18" font="0">multiple operations throughout the web-shop, such as the mini cart and the pricing detail of a </text>
<text top="655" left="108" width="693" height="18" font="0">cart. Aside from the methods to control the behavior of the elements, there are methods that </text>
<text top="683" left="108" width="693" height="18" font="0">allow to replace the page component data with some JSON data fetched from the server. On </text>
<text top="711" left="108" width="698" height="18" font="0">the other hand there is a <i>Form</i> class that gives support to all forms of the system, by validating, </text>
<text top="739" left="108" width="641" height="18" font="0">displaying messages, marking invalid fields and managing AJAX calls when submitting. </text>
<text top="782" left="108" width="4" height="18" font="0"> </text>
<text top="825" left="108" width="66" height="24" font="14"><i>4.2.5  D</i></text>
<text top="829" left="175" width="97" height="19" font="15"><i>ESIGN	  OF	  THE	  </i></text>
<text top="825" left="272" width="11" height="24" font="14"><i>V</i></text>
<text top="829" left="283" width="120" height="19" font="15"><i>IEW	  COMPONENT</i></text>
<text top="825" left="404" width="4" height="24" font="14"><i>	  </i></text>
<text top="867" left="108" width="693" height="18" font="0">The View component is formed of several templates that are directly called by the Controller </text>
<text top="895" left="108" width="693" height="18" font="0">component,  as  seen  in  the  internal  design  diagrams  of  the  system.  All  these  templates  are </text>
<text top="924" left="108" width="693" height="18" font="0">making use of a main template file that provides a common HTML structure to all the pages, </text>
<text top="952" left="108" width="693" height="18" font="0">such  as  the  basic  contents  and  imports  of  scripts  and  stylesheets.  They  achieve  this  by </text>
<text top="980" left="108" width="693" height="18" font="0">importing  the  main  template,  following  the  design  pattern  called  View  Composition  (Figure </text>
<text top="1008" left="108" width="47" height="18" font="0">4.36). </text>
<text top="1051" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="89" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="157" width="592" height="471" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-89_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  89	  </text>
<text top="566" left="749" width="4" height="18" font="0"> </text>
<text top="605" left="148" width="609" height="15" font="12"><b>Figure 4.36</b>: Overview of the composite views and main template of the server-side View component.</text>
<text top="602" left="758" width="4" height="18" font="0"> </text>
<text top="643" left="372" width="4" height="18" font="0"> </text>
<text top="643" left="426" width="8" height="18" font="0">  </text>
<text top="643" left="480" width="8" height="18" font="0">  </text>
<text top="643" left="534" width="4" height="18" font="0"> </text>
<text top="686" left="108" width="693" height="18" font="0">Just as in the previous example, the composite views are importing the contents of many other </text>
<text top="715" left="108" width="693" height="18" font="0">simple views, like the helpers and forms displayed in Figure 4.37. Both types of templates are </text>
<text top="743" left="108" width="693" height="18" font="0">usually offering components that are repeated throughout all client pages, although sometimes </text>
<text top="771" left="108" width="693" height="18" font="0">the separation is only intended to extract large pieces of meaningful HTML content from the </text>
<text top="799" left="108" width="694" height="18" font="0">composite views, as it is usually the case of the form templates. Unlike forms and helpers, mail </text>
<text top="827" left="108" width="693" height="18" font="0">templates  are  not  meant  for  view  composition,  but  are  directly  used  to  generate  the  HTML </text>
<text top="855" left="108" width="279" height="18" font="0">body of the emails sent by the system. </text>
<text top="898" left="453" width="4" height="18" font="0"> </text>
</page>
<page number="90" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="117" width="672" height="388" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-90_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">90	  </text>
<text top="482" left="789" width="4" height="18" font="0"> </text>
<text top="522" left="217" width="471" height="15" font="12"><b>Figure 4.37</b>: Overview of the simple views of the server-side View component.</text>
<text top="519" left="689" width="4" height="18" font="0"> </text>
<text top="560" left="372" width="4" height="18" font="0"> </text>
<text top="560" left="426" width="8" height="18" font="0">  </text>
<text top="560" left="480" width="8" height="18" font="0">  </text>
<text top="560" left="534" width="4" height="18" font="0"> </text>
<text top="603" left="108" width="693" height="18" font="0">As  explained  earlier  (see  section  4.2.1.7),  the  system  is  using  Handlebars  templates  on  the </text>
<text top="631" left="108" width="693" height="18" font="0">client side in order to generate updated content. Below all necessary templates for the system </text>
<text top="659" left="108" width="693" height="18" font="0">are  displayed  (see  Figure  4.38),  which  belong  on  the  one  hand  to  the  mini  cart  and  pricing </text>
<text top="688" left="108" width="693" height="18" font="0">details components, and on the other hand to the use cases for product pagination, checkout </text>
<text top="715" left="108" width="195" height="18" font="0">and address management. </text>
<text top="758" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="91" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="266" width="375" height="316" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-91_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  91	  </text>
<text top="410" left="640" width="4" height="18" font="0"> </text>
<text top="450" left="227" width="452" height="15" font="12"><b>Figure 4.38</b>: Overview of the templates of the client-side View component.</text>
<text top="447" left="679" width="4" height="18" font="0"> </text>
<text top="488" left="453" width="4" height="18" font="0"> </text>
<text top="530" left="108" width="66" height="24" font="14"><i>4.2.6  D</i></text>
<text top="534" left="175" width="97" height="19" font="15"><i>ESIGN	  OF	  THE	  </i></text>
<text top="530" left="272" width="10" height="24" font="14"><i>C</i></text>
<text top="534" left="282" width="177" height="19" font="15"><i>ONTROLLER	  COMPONENT	  </i></text>
<text top="530" left="460" width="4" height="24" font="14"><i>	  </i></text>
<text top="534" left="486" width="3" height="19" font="15"><i>	  </i></text>
<text top="530" left="490" width="4" height="24" font="14"><i>	  </i></text>
<text top="530" left="540" width="4" height="24" font="14"><i>	  </i></text>
<text top="573" left="108" width="693" height="18" font="0">Play Framework is applying the Front Controller and Application Controller design patterns to </text>
<text top="601" left="108" width="693" height="18" font="0">split the Controller logic between the common logic, located in the Front Controller, and the </text>
<text top="629" left="108" width="693" height="18" font="0">one  specific  for  each  request,  called  Application  Controller.  The  Front  Controller  is  mainly </text>
<text top="658" left="108" width="693" height="18" font="0">formed by the <i>RoutingSystem</i>, which is in charge of receiving, analyzing and dispatching every </text>
<text top="685" left="108" width="360" height="18" font="0">request to the appropriate application controller. </text>
<text top="729" left="108" width="693" height="18" font="0">All application controllers of the system are shown in Figure 4.39, along with some classes that </text>
<text top="757" left="108" width="693" height="18" font="0">are  used  as  filters.  These  filters  intercept  the  application  controller  invocation  and  allows  to </text>
<text top="785" left="108" width="693" height="18" font="0">execute code before and after the action is invoked. Filters are applied as a chain of filters to </text>
<text top="813" left="108" width="693" height="18" font="0">any  desired  controller  action,  although  for  simplicity  the  diagram  is  not  specifying  which </text>
<text top="841" left="108" width="693" height="18" font="0">particular actions are using the filter. A typical filter example is the <i>Authorization</i> class, that </text>
<text top="869" left="108" width="693" height="18" font="0">verifies  the  customer  is  correctly  identified  to  the  system  before  accessing  a  restricted </text>
<text top="897" left="108" width="463" height="18" font="0">functionality, otherwise it redirects the user to the login screen. </text>
<text top="940" left="108" width="693" height="18" font="0">The <i>CartNotEmpty</i> filter checks the shopping cart has at least one line item, a requirement to </text>
<text top="969" left="108" width="693" height="18" font="0">access certain areas such as the cart detail page or the checkout, otherwise it redirects to the </text>
<text top="997" left="108" width="693" height="18" font="0">last visited browsing page. This last visited page is actually saved using the <i>SaveContext</i> filter, </text>
<text top="1025" left="108" width="693" height="18" font="0">so that only actions intercepted by this filter are saved as a return page. It was considered a </text>
</page>
<page number="92" position="absolute" top="0" left="0" height="1188" width="918">
<image top="224" left="182" width="541" height="613" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-92_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">92	  </text>
<text top="110" left="108" width="693" height="18" font="0">good  navigation  behavior  to  save  only  pages  related  to  products  (i.e.  product  list  and  detail </text>
<text top="137" left="108" width="494" height="18" font="0">screens), leaving out checkout and customer management pages.    </text>
<text top="137" left="648" width="8" height="18" font="0">  </text>
<text top="137" left="702" width="4" height="18" font="0"> </text>
<text top="181" left="108" width="4" height="18" font="0"> </text>
<text top="822" left="724" width="4" height="18" font="0"> </text>
<text top="861" left="175" width="556" height="15" font="12"><b>Figure 4.39</b>: Overview of the controllers and filters of the server-side Controller component.</text>
<text top="859" left="731" width="4" height="18" font="0"> </text>
<text top="899" left="108" width="4" height="18" font="0"> </text>
<text top="943" left="108" width="693" height="18" font="0">Finally, the <i>Form</i> filter class enables the transparent handling of a form submission response, </text>
<text top="971" left="108" width="693" height="18" font="0">independently  of  the  technology  used.  This  allows  to  switch  from  AJAX  to  a  regular  HTML </text>
<text top="999" left="108" width="693" height="18" font="0">form  without  any  changes,  only  disabling  the  form  submission  handling  in  JavaScript.  The </text>
<text top="1027" left="108" width="693" height="18" font="0">filter helps developers to build both thin- and fat-client systems on top of the same Controller </text>
<text top="1055" left="108" width="169" height="18" font="0">and View components. </text>
</page>
<page number="93" position="absolute" top="0" left="0" height="1188" width="918">
<image top="308" left="192" width="522" height="377" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-93_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  93	  </text>
<text top="110" left="108" width="693" height="18" font="0">Figure  4.40  shows  the  files  of  the  Controller  component  on  the  client  side.  These  files  are </text>
<text top="138" left="108" width="693" height="18" font="0">dedicated  to  handle  some  of  the  events  triggered  by  the  user  (e.g.  form  submission  or  page </text>
<text top="166" left="108" width="693" height="18" font="0">scrolling) in a specific page or component. The same files host other presentation logic used by </text>
<text top="194" left="108" width="693" height="18" font="0">the  handlers,  as  well as  methods  to  load  new  components  from  JSON  data  fetched  from  the </text>
<text top="222" left="108" width="53" height="18" font="0">server. </text>
<text top="265" left="108" width="4" height="18" font="0"> </text>
<text top="670" left="714" width="4" height="18" font="0"> </text>
<text top="709" left="208" width="490" height="15" font="12"><b>Figure 4.40</b>: Overview of the controllers of the client-side Controller component.</text>
<text top="707" left="698" width="4" height="18" font="0"> </text>
<text top="747" left="108" width="4" height="18" font="0"> </text>
<text top="747" left="324" width="4" height="18" font="0"> </text>
</page>
<page number="94" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">94	  </text>
<text top="109" left="108" width="39" height="33" font="6">5  I</text>
<text top="114" left="148" width="165" height="26" font="7">MPLEMENTATION</text>
<text top="109" left="313" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="693" height="18" font="0">The implementation section is describing the actual process followed to develop the web-shop </text>
<text top="191" left="108" width="693" height="18" font="0">presented in the previous chapters. On the one hand is explained the set environment (section </text>
<text top="219" left="108" width="693" height="18" font="0">Development  Environment  5.1),  such  as  the  software  to  assist  the  implementation  or  the </text>
<text top="247" left="108" width="693" height="18" font="0">stages of the development pipeline. On the other hand, some examples are detailed, along with </text>
<text top="275" left="108" width="693" height="18" font="0">the corresponding pieces of code, where it is shown how every technology is applied in order to </text>
<text top="303" left="108" width="587" height="18" font="0">solve some particular requirement (section Examples of Used Technologies 5.2). </text>
<text top="346" left="108" width="4" height="18" font="0"> </text>
<text top="389" left="108" width="56" height="25" font="2">5.1  D</text>
<text top="393" left="164" width="200" height="20" font="0">EVELOPMENT	  ENVIRONMENT</text>
<text top="389" left="365" width="5" height="25" font="2">	  </text>
<text top="433" left="108" width="693" height="18" font="0">The development pipeline consists of three stages: development, staging and production. The </text>
<text top="461" left="108" width="693" height="18" font="0">development  environment  is  a  portable  machine  with  OS  X  as  operative  system.  The  source </text>
<text top="489" left="108" width="693" height="18" font="0">code is developed with the support of the Java IDE Intellij IDEA Community Edition, mainly </text>
<text top="518" left="108" width="693" height="18" font="0">used for its debugging and code edition features. Google Chrome is the preferred web browser, </text>
<text top="546" left="108" width="693" height="18" font="0">which  has  a  built  in  developer  tool,  Chrome  DevTools,  highly  useful  to  inspect  HTML  DOM </text>
<text top="574" left="108" width="344" height="18" font="0">and CSS, as well as debugging JavaScript code. </text>
<text top="617" left="108" width="693" height="18" font="0">Git is used as a revision control system. The most notable characteristic of Git is its distributed </text>
<text top="645" left="108" width="693" height="18" font="0">system,  in  which  each  user  has  his  own  local  repository  where  changes  are  committed.  Only </text>
<text top="673" left="108" width="693" height="18" font="0">when  the  developer  deems  it  convenient,  the  local  changes  are  then  synchronized  with  the </text>
<text top="701" left="108" width="693" height="18" font="0">remote repository, thus making them accessible to the whole team. The remote repository is </text>
<text top="730" left="108" width="693" height="18" font="0">hosted  by  GitHub,  with  a  very  interesting  social  networking  functionality  useful  for  future </text>
<text top="757" left="108" width="331" height="18" font="0">collaboration with the developer community. </text>
<text top="801" left="108" width="693" height="18" font="0">In  everyday’s  development,  Continuous  Deployment  technique  is  followed  (see  Figure  5.1). </text>
<text top="829" left="108" width="693" height="18" font="0">Jenkins  is  used  in  the  staging  environment  as  a  continuous  deployment  tool,  triggering  a </text>
<text top="857" left="108" width="693" height="18" font="0">process  to  deploy  the  system  every  time  changes  are  pushed  to  the  remote  repository.  This </text>
<text top="885" left="108" width="693" height="18" font="0">process  consists  of  building  and  testing  the  system,  running  automated  acceptance  test  and </text>
<text top="913" left="108" width="693" height="18" font="0">deploying the project to production once staging is stable and ready. Whenever these steps fail </text>
<text top="941" left="108" width="684" height="18" font="0">at some point, the process is stopped and feedback is registered in order to solve the problem. </text>
<text top="984" left="108" width="693" height="18" font="0">For this to work, every new feature developed for the system should always go along with tests </text>
<text top="1012" left="108" width="693" height="18" font="0">validating that feature. Automating these tests on a staging system allows to flawlessly merge </text>
<text top="1041" left="108" width="693" height="18" font="0">small  pieces  of  code  with  the  mainline  of  the  project  at  a  rapid  pace.  The  code  merging  also </text>
</page>
<page number="95" position="absolute" top="0" left="0" height="1188" width="918">
<image top="252" left="128" width="649" height="381" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-95_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  95	  </text>
<text top="110" left="108" width="693" height="18" font="0">triggers  a  review  process  with  all  developers  involved,  which  results  in  higher  code  quality. </text>
<text top="138" left="108" width="693" height="18" font="0">Besides, acceptance tests that verify the business logic can be run each time to ensure that the </text>
<text top="165" left="108" width="221" height="18" font="0">project requirements are met. </text>
<text top="209" left="108" width="4" height="18" font="0"> </text>
<text top="618" left="778" width="4" height="18" font="0"> </text>
<text top="658" left="256" width="394" height="15" font="12"><b>Figure 5.1</b>: Sequence diagram of the continuous delivery process.</text>
<text top="655" left="650" width="4" height="18" font="0"> </text>
<text top="695" left="108" width="4" height="18" font="0"> </text>
<text top="739" left="108" width="53" height="25" font="2">5.2  E</text>
<text top="743" left="162" width="234" height="20" font="0">XAMPLES	  OF	  USED	  TECHNOLOGIES</text>
<text top="739" left="396" width="5" height="25" font="2">	  </text>
<text top="783" left="108" width="693" height="18" font="0">Next are presented three different examples of functionalities that allow to demonstrate how </text>
<text top="811" left="108" width="693" height="18" font="0">technologies  are  used  in  the  project.  These  examples  have  been  selected  according  to  the </text>
<text top="839" left="108" width="693" height="18" font="0">importance of the process within the system or because it presented some challenges that are </text>
<text top="867" left="108" width="179" height="18" font="0">worth being mentioned. </text>
<text top="910" left="108" width="693" height="18" font="0">Code generation required some extra effort to guarantee the stability of the system when data </text>
<text top="939" left="108" width="693" height="18" font="0">from the e-commerce backend is changed. Although the set of data used in the template has </text>
<text top="967" left="108" width="693" height="18" font="0">some fixed characteristics, the system has been implemented to support any kind of data that </text>
<text top="995" left="108" width="693" height="18" font="0">may  be  variable,  such  as  product  attributes,  categories  or  currencies.  The  primary  goal  is  to </text>
<text top="1023" left="108" width="636" height="18" font="0">avoid crashing the system or break some elemental functionality when data is changed. </text>
</page>
<page number="96" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">96	  </text>
<text top="109" left="108" width="63" height="24" font="14"><i>5.2.1  F</i></text>
<text top="113" left="172" width="40" height="19" font="15"><i>ORMS</i></text>
<text top="109" left="213" width="4" height="24" font="14"><i>	  </i></text>
<text top="151" left="108" width="693" height="18" font="0">Any  form  submission  requires  the  use  of  most  of  the  technologies  presented  in  this  project, </text>
<text top="179" left="108" width="693" height="18" font="0">making this functionality very appropriate to show examples of how the technologies are used. </text>
<text top="208" left="108" width="693" height="18" font="0">In  particular,  the  <i>update  item  in  cart  </i>use  case  is  going  to  be  explained,  which  design  was </text>
<text top="236" left="108" width="384" height="18" font="0">already detailed in the section Internal Design 4.2.3. </text>
<text top="279" left="108" width="693" height="18" font="0">As mentioned before, form data can be either sent as a regular HTML form submission or via </text>
<text top="307" left="108" width="693" height="18" font="0">an AJAX call, indistinctly. The server logic processes both requests the same way thanks to the </text>
<text top="335" left="108" width="693" height="18" font="0">intercepting filter Form.java, which is in charge of returning the most convenient response to </text>
<text top="363" left="108" width="694" height="18" font="0">the client. This system improves understandability and changeability of the code, as it will be </text>
<text top="391" left="108" width="210" height="18" font="0">explained along this section. </text>
<text top="435" left="108" width="693" height="18" font="0">The flowchart below (Figure 5.2) illustrates the process that takes place from the moment the </text>
<text top="463" left="108" width="693" height="18" font="0">user  submits  the  form  until  the  server  returns  a  response.  As  a  guide,  on  the  left  side  is </text>
<text top="491" left="108" width="693" height="18" font="0">indicated the element or file where each action is executed in this particular use case, although </text>
<text top="519" left="108" width="693" height="18" font="0">the  process  itself  is  the  same  for  every  use  case  with  form  submission.  The  source  code </text>
<text top="547" left="108" width="694" height="18" font="0">corresponding to some of these actions is presented in this section, along with some detailed </text>
<text top="575" left="108" width="94" height="18" font="0">explanation. </text>
<text top="618" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="97" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="690" height="592" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-97_1.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  97	  </text>
<text top="686" left="798" width="4" height="18" font="0"> </text>
<text top="725" left="288" width="330" height="15" font="12"><b>Figure 5.2</b>: Flowchart of the form submission process.</text>
<text top="723" left="618" width="4" height="18" font="0"> </text>
<text top="763" left="108" width="4" height="18" font="0"> </text>
<text top="807" left="108" width="693" height="18" font="0">When the user is submitting a form, the HTML DOM triggers an event that is then captured by </text>
<text top="835" left="108" width="693" height="18" font="0">a handler. The handler stops the regular form submission and sends the request via AJAX. If </text>
<text top="863" left="108" width="693" height="18" font="0">the  handler  is  not  found,  the  form  is  submitted  in  a  traditional  way  to  the  server  via  HTML </text>
<text top="891" left="108" width="693" height="18" font="0">forms.  Below  is  displayed  the  specific  Coffeescript  code  that  implements  the  handler  for  the </text>
<text top="919" left="108" width="330" height="18" font="8"><i>update item in cart </i>use case (see Figure 5.3). </text>
<text top="962" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="98" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="640" height="673" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-98_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="781" width="20" height="20" font="0">98	  </text>
<text top="767" left="748" width="4" height="18" font="0"> </text>
<text top="797" left="245" width="417" height="15" font="12"><b>Figure 5.3</b>: Source code for handling form submission, in cart.coffee.</text>
<text top="794" left="662" width="4" height="18" font="0"> </text>
<text top="835" left="108" width="4" height="18" font="0"> </text>
<text top="879" left="108" width="693" height="18" font="0">In this particular case the handler is not called after submission, but after changing the value </text>
<text top="907" left="108" width="693" height="18" font="0">of the input field for the quantity. It is interesting to notice the use of the “on” jQuery method </text>
<text top="935" left="108" width="693" height="18" font="0">to bind the event handler. As shown below there are three different ways to bind an event: the </text>
<text top="963" left="108" width="693" height="18" font="0">first  method  is  preferred  and  is  actually  a  shortcut  of  the  second  one  (see  Figure  5.4).  The </text>
<text top="991" left="108" width="693" height="18" font="0">difference between these two and the last method lies in the object to which the event handler </text>
<text top="1019" left="108" width="272" height="18" font="0">is attached when the script is loaded. </text>
<text top="1062" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="99" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="164" width="577" height="104" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-99_1.png"/>
<image top="757" left="185" width="537" height="100" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-99_2.png"/>
<text top="1092" left="771" width="30" height="20" font="0">  99	  </text>
<text top="198" left="742" width="4" height="18" font="0"> </text>
<text top="237" left="108" width="693" height="15" font="12"><b>Figure 5.4</b>: Comparison of the different jQuery methods to bind an event handler to the “change” JavaScript event.</text>
<text top="235" left="801" width="4" height="18" font="0"> </text>
<text top="275" left="108" width="4" height="18" font="0"> </text>
<text top="319" left="108" width="693" height="18" font="0">While the handler is directly attached to the quantity input in the first two options, in the latter </text>
<text top="347" left="108" width="693" height="18" font="0">is attached to the HTML object identified by “cart”, specifying as a parameter the path of the </text>
<text top="375" left="108" width="693" height="18" font="0">quantity input. This difference is important when a particular object that can trigger the event </text>
<text top="403" left="108" width="693" height="18" font="0">may  not  exist  at  load  time,  which  is  the  case  of  this  form,  since  all  the  line  items  are  being </text>
<text top="431" left="108" width="693" height="18" font="0">loaded via AJAX after the page is loaded. In this case the event is attached to a stable parent </text>
<text top="459" left="108" width="683" height="18" font="0">object, so that jQuery executes the handler for every descendant object that matches the path. </text>
<text top="502" left="108" width="693" height="18" font="0">Submitting the form each time the input value is changed can lead to an excess of calls to the </text>
<text top="530" left="108" width="693" height="18" font="0">server  if  the  user  changes  the  quantity  value  too  often.  This  has  been  solved  with  a  delayed </text>
<text top="559" left="108" width="693" height="18" font="0">submission, implemented with the JavaScript event <i>setTimeout</i>, which is restarted every time </text>
<text top="587" left="108" width="693" height="18" font="0">the user changes the input field (see Figure 5.5 for an example of CoffeeScript code based on </text>
<text top="615" left="108" width="693" height="18" font="0">this  functionality).  This  JavaScript  timing  event  executes  a  function  that  is  called  after  the </text>
<text top="643" left="108" width="693" height="18" font="0">specified  period  of  time,  in  this  case  sending  the  form  data  via  AJAX  and  processing  the </text>
<text top="671" left="108" width="162" height="18" font="0">response accordingly. </text>
<text top="714" left="108" width="4" height="18" font="0"> </text>
<text top="842" left="721" width="4" height="18" font="0"> </text>
<text top="872" left="139" width="628" height="15" font="12"><b>Figure 5.5</b>: Example of CoffeeScript code and the corresponding generated JavaScript after compilation.</text>
<text top="870" left="767" width="4" height="18" font="0"> </text>
<text top="910" left="108" width="4" height="18" font="0"> </text>
<text top="953" left="108" width="693" height="18" font="0">In order to handle forms easily a new instance of the Form class is created, which processes all </text>
<text top="982" left="108" width="693" height="18" font="0">data related to the form to allow quick access to the information (see Figure 5.6). The method </text>
<text top="1010" left="108" width="693" height="18" font="0">for sending the form data is simply calling the jQuery “ajax” function, additionally specifying </text>
<text top="1038" left="108" width="693" height="18" font="0">in  the  URL  that  the  request  is  performed  via  AJAX.  The  method  returns  jqXHR,  a </text>
</page>
<page number="100" position="absolute" top="0" left="0" height="1188" width="918">
<image top="280" left="108" width="549" height="363" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-100_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">100	  </text>
<text top="110" left="108" width="130" height="18" font="0">XMLHttpRequest</text>
<text top="110" left="239" width="11" height="12" font="10">18</text>
<text top="110" left="249" width="552" height="18" font="0"> object with jQuery added information. A series of methods can be chained </text>
<text top="138" left="108" width="693" height="18" font="0">to the jqXHR object, and executed once the server response has been received under certain </text>
<text top="166" left="108" width="693" height="18" font="0">circumstances. It is the case of “done” for successful requests, “fail” for failures and “always” </text>
<text top="193" left="108" width="371" height="18" font="0">for any condition; all of them used in this use case. </text>
<text top="237" left="108" width="4" height="18" font="0"> </text>
<text top="628" left="657" width="4" height="18" font="0"> </text>
<text top="658" left="221" width="463" height="15" font="12"><b>Figure 5.6</b>: Source code for sending form data with AJAX, in lib-form.coffee.</text>
<text top="656" left="685" width="4" height="18" font="0"> </text>
<text top="696" left="108" width="4" height="18" font="0"> </text>
<text top="740" left="108" width="693" height="18" font="0">Once the request reaches the server, the routing system built in Play Framework analyses the </text>
<text top="768" left="108" width="693" height="18" font="0">incoming HTTP method and the request path to decide the action controller to be invoked. For </text>
<text top="796" left="108" width="694" height="18" font="0">that  matter,  the  system  reads  a  file  where  every  request  pattern  is  linked  with  an  action </text>
<text top="824" left="108" width="693" height="18" font="0">controller (see Figure 5.7), and selects the first pattern that matches the request. In addition, </text>
<text top="852" left="108" width="623" height="18" font="0">routing patterns can also have dynamic parts using the power of regular expressions.  </text>
<text top="895" left="108" width="4" height="18" font="0"> </text>
<text top="993" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1031" left="108" width="11" height="12" font="10">18</text>
<text top="1032" left="119" width="652" height="17" font="11"> API to send HTTP or HTTPS requests to a web server and receive information in response, from a </text>
<text top="1049" left="108" width="338" height="17" font="11">web browser scripting language such as JavaScript.</text>
<text top="1048" left="447" width="4" height="18" font="0"> </text>
</page>
<page number="101" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="219" width="468" height="61" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-101_1.png"/>
<image top="630" left="108" width="613" height="341" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-101_2.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 101	  </text>
<text top="155" left="687" width="4" height="18" font="0"> </text>
<text top="194" left="278" width="350" height="15" font="12"><b>Figure 5.7</b>: Extract of the Route file for cart management.</text>
<text top="192" left="628" width="4" height="18" font="0"> </text>
<text top="232" left="108" width="4" height="18" font="0"> </text>
<text top="276" left="108" width="693" height="18" font="0">Figure 5.8 below shows the invoked controller action for this particular use case. Right before </text>
<text top="304" left="108" width="693" height="18" font="0">the method definition one can notice the “With” annotation, which Play Framework provides </text>
<text top="332" left="108" width="693" height="18" font="0">in order to attach a set of intercepting filters to an action. In this case the filter that intercepts </text>
<text top="360" left="108" width="693" height="18" font="0">the  call  is  the  <i>Form</i>  class,  in  charge  of  detecting,  before  the  action  in  called,  whether  the </text>
<text top="388" left="108" width="321" height="18" font="0">request from the client was made via AJAX. </text>
<text top="431" left="108" width="693" height="18" font="0">The  controller  has  a  static  attribute  of  an  instance  of  Play’s  native  <i>Form</i>,  wrapping  the  class </text>
<text top="460" left="108" width="693" height="18" font="8"><i>UpdateCart</i> that handles incoming parameters to execute this action. When starting the call, </text>
<text top="488" left="108" width="693" height="18" font="0">the request is bound to the form instance and is checked for missing or invalid data, in which </text>
<text top="516" left="108" width="693" height="18" font="0">case errors are prepared for being displayed and the cart page is returned as a “bad request” </text>
<text top="544" left="108" width="258" height="18" font="0">(i.e. with a 400 HTTP status code). </text>
<text top="587" left="108" width="4" height="18" font="0"> </text>
<text top="956" left="721" width="4" height="18" font="0"> </text>
<text top="995" left="203" width="500" height="15" font="12"><b>Figure 5.8</b>: Source code for executing the action for updating the cart, in Carts.java</text>
<text top="993" left="703" width="4" height="18" font="0"> </text>
<text top="1033" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="102" position="absolute" top="0" left="0" height="1188" width="918">
<image top="548" left="108" width="429" height="295" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-102_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">102	  </text>
<text top="110" left="108" width="693" height="18" font="0">When  the  request  contains  no  errors,  the  SPHERE.IO  Play  SDK  is  called  to  update  the  cart, </text>
<text top="138" left="108" width="693" height="18" font="0">setting  the  new  quantity  requested  for  a  particular  line  item.  Then  the  success  messages  are </text>
<text top="166" left="108" width="693" height="18" font="0">prepared and the cart page is returned, this time with a 200 HTTP status code. The controller </text>
<text top="194" left="108" width="693" height="18" font="0">code appears therefore simple and clean of all related presentation logic. This is particularly </text>
<text top="222" left="108" width="693" height="18" font="0">important  for  this  project,  as  controllers  are  the  main  place  where  SPHERE.IO  Play  SDK  is </text>
<text top="250" left="108" width="683" height="18" font="0">used to execute e-commerce logic. Here is where code is most required to be understandable.  </text>
<text top="293" left="108" width="693" height="18" font="0">As seen in Figure 5.9 below, the message method consists of saving on the one hand a success </text>
<text top="321" left="108" width="693" height="18" font="0">message  for  the  HTML  result  and,  on  the  other  hand,  the  JSON  data  with  the  same  success </text>
<text top="350" left="108" width="693" height="18" font="0">message  and  the  necessary  cart  information.  The  source  code  is  also  showing  how  request </text>
<text top="378" left="108" width="693" height="18" font="0">parameters are defined in a form, so that Play can bind and validate them. Some annotations </text>
<text top="406" left="108" width="693" height="18" font="0">are provided in order to specify constraints to incoming parameters, such as declaring a value </text>
<text top="434" left="108" width="693" height="18" font="0">required or accepting only a certain range. Any other type of pattern-based limitation can be </text>
<text top="462" left="108" width="298" height="18" font="0">applied as well with regular expressions. </text>
<text top="505" left="453" width="4" height="18" font="0"> </text>
<text top="828" left="537" width="4" height="18" font="0"> </text>
<text top="867" left="155" width="595" height="15" font="12"><b>Figure 5.9</b>: Source code for handling form submission and saving JSON result, in UpdateCart.java.</text>
<text top="865" left="751" width="4" height="18" font="0"> </text>
<text top="905" left="108" width="4" height="18" font="0"> </text>
<text top="948" left="108" width="693" height="18" font="0">Once the action call finishes, the intercepting filter again takes control, receiving as a result of </text>
<text top="977" left="108" width="693" height="18" font="0">the call a HTML file with a HTTP status code (see Figure 5.10). In some cases the result can </text>
<text top="1005" left="108" width="693" height="18" font="0">also be a URL redirection instead of a HTML file, like is the case of the login use case. On the </text>
<text top="1033" left="108" width="693" height="18" font="0">other hand, the filter has access as well to all JSON data that was stored earlier. So according </text>
<text top="1061" left="108" width="693" height="18" font="0">to the type of incoming request, the filter returns either the result coming from the action call </text>
</page>
<page number="103" position="absolute" top="0" left="0" height="1188" width="918">
<image top="351" left="108" width="602" height="475" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-103_1.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 103	  </text>
<text top="110" left="108" width="693" height="18" font="0">or  a  JSON  response  with  the  same  HTTP  status  code.  With  JSON,  if  the  result  was  a </text>
<text top="137" left="108" width="584" height="18" font="0">redirection, the URL is extracted and sent to the client as part of the JSON data. </text>
<text top="181" left="108" width="693" height="18" font="0">This system allows future developers to add new ways of handling form submissions without </text>
<text top="209" left="108" width="693" height="18" font="0">affecting the core of the system. Disabling a method, such as AJAX submission, is as simple as </text>
<text top="237" left="108" width="694" height="18" font="0">removing the event handler bound to the submit. Therefore the changeability of the code is not </text>
<text top="265" left="108" width="630" height="18" font="0">affected by the complexity of the presentation logic meant to improve user experience. </text>
<text top="308" left="108" width="4" height="18" font="0"> </text>
<text top="811" left="710" width="4" height="18" font="0"> </text>
<text top="850" left="166" width="574" height="15" font="12"><b>Figure 5.10</b>: Source code for returning corresponding result to the client, in FormHandler.java.</text>
<text top="848" left="740" width="4" height="18" font="0"> </text>
<text top="888" left="108" width="4" height="18" font="0"> </text>
<text top="932" left="108" width="693" height="18" font="0">When the AJAX call started on the client receives the response from the server, the methods </text>
<text top="960" left="108" width="693" height="18" font="0">chained to the jqXHR are then executed, depending on the HTTP status code obtained. In the </text>
<text top="988" left="108" width="693" height="18" font="0">current use case, if the response was successful, the pricing details and the mini cart will be </text>
<text top="1016" left="108" width="533" height="18" font="0">replaced with new generated content, and each line item will be updated. </text>
</page>
<page number="104" position="absolute" top="0" left="0" height="1188" width="918">
<image top="308" left="108" width="536" height="257" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-104_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">104	  </text>
<text top="110" left="108" width="693" height="18" font="0">Moreover, some common logic for successful form submissions is executed, which source code </text>
<text top="138" left="108" width="693" height="18" font="0">is  shown  in  detail  below  (see  Figure  5.11).  This  common  logic  allows  to  handle  properly  the </text>
<text top="166" left="108" width="693" height="18" font="0">response  sent  by  the  Form  intercepting  filter:  when  required,  it  forces  to  handle  URL </text>
<text top="194" left="108" width="693" height="18" font="0">redirections  by  executing  a  redirection  with  JavaScript,  otherwise  it  updates  automatically </text>
<text top="222" left="108" width="485" height="18" font="0">some tagged data from the page and displays the success message. </text>
<text top="265" left="108" width="4" height="18" font="0"> </text>
<text top="550" left="644" width="4" height="18" font="0"> </text>
<text top="589" left="194" width="517" height="15" font="12"><b>Figure 5.11</b>: Source code for handling successful form submissions, in lib-form.coffee.</text>
<text top="586" left="712" width="4" height="18" font="0"> </text>
<text top="627" left="108" width="4" height="18" font="0"> </text>
<text top="670" left="108" width="693" height="18" font="0">As mentioned before, each line item on the page is updated with every successful submission. </text>
<text top="699" left="108" width="693" height="18" font="0">Actually  the  only  element  from  the  line  items  that  needs  to  be  updated  is  the  total  line  item </text>
<text top="727" left="108" width="693" height="18" font="0">price (i.e. the product price multiplied by the new quantity), and this calculation could even be </text>
<text top="755" left="108" width="693" height="18" font="0">performed  on  the  client  side.  But  all  the  required  data  is  already  included  in  the  JSON  data </text>
<text top="783" left="108" width="693" height="18" font="0">nonetheless,  needed  to  update  the  mini  cart.  Besides  it  is  safer  to  always  force  a  complete </text>
<text top="811" left="108" width="670" height="18" font="0">update of the cart contents, in case the user changes the cart from another browser window. </text>
<text top="854" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="105" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="507" height="270" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-105_1.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 105	  </text>
<text top="364" left="616" width="4" height="18" font="0"> </text>
<text top="404" left="240" width="425" height="15" font="12"><b>Figure 5.12</b>: Source code for replacing the cart contents, in cart.coffee.</text>
<text top="401" left="666" width="4" height="18" font="0"> </text>
<text top="442" left="108" width="4" height="18" font="0"> </text>
<text top="485" left="108" width="693" height="18" font="0">The method displayed in Figure 5.12 is the one in charge of replacing the cart line items. To do </text>
<text top="513" left="108" width="693" height="18" font="0">so,  the  Handlebars  template  that  renders  a  single  line  item  is  obtained  and  compiled  once </text>
<text top="541" left="108" width="693" height="18" font="0">when  the  page  is  loaded.  When  the  method  is  called,  the  current  contents  of  the  cart  are </text>
<text top="569" left="108" width="693" height="18" font="0">removed  from  the  cart  container  and  each  line  item  is  rendered  with  the  template  and  then </text>
<text top="597" left="108" width="113" height="18" font="0">appended to it. </text>
<text top="641" left="108" width="693" height="18" font="0">The following two figures helps one understand how these templates are being rendered. The </text>
<text top="669" left="108" width="693" height="18" font="0">first  one  corresponds  to  the  template  itself  (Figure  5.13),  with  the  Handlebars  expressions </text>
<text top="697" left="108" width="693" height="18" font="0">surrounded by curly brackets. When the expression starts with a hash symbol, the expression </text>
<text top="725" left="108" width="693" height="18" font="0">corresponds  to  a  helper  to  control  the  flow,  like  the  looping  statement  “each”  used  here. </text>
<text top="753" left="108" width="686" height="18" font="0">Otherwise it refers to a value extracted from the JSON data sent as parameter to the template. </text>
<text top="796" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="106" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="669" height="521" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-106_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">106	  </text>
<text top="615" left="778" width="4" height="18" font="0"> </text>
<text top="655" left="126" width="655" height="15" font="12"><b>Figure 5.13</b>: Simplified source code of the Handlebars template to render a cart line item, in carts.scala.html.</text>
<text top="652" left="781" width="4" height="18" font="0"> </text>
<text top="692" left="453" width="4" height="18" font="0"> </text>
<text top="736" left="108" width="693" height="18" font="0">An extract of the JSON data is presented next (Figure 5.14), as it is received by the client after </text>
<text top="764" left="108" width="693" height="18" font="0">the  request.  It  should  be  noted  that  the  <i>replaceCart</i>  method  is  only  sending  to  the  template </text>
<text top="792" left="108" width="693" height="18" font="0">one  “item”  object  each  time.  It  is  easy  then  to  understand  the  correspondence  between  the </text>
<text top="820" left="108" width="426" height="18" font="0">JSON data and the expressions appearing in the template. </text>
<text top="863" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="107" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="585" height="711" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-107_1.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 107	  </text>
<text top="805" left="693" width="4" height="18" font="0"> </text>
<text top="845" left="173" width="560" height="15" font="12"><b>Figure 5.14</b>: Example of JSON data received from the server, in <i>update item in cart </i>use case.</text>
<text top="842" left="733" width="4" height="18" font="0"> </text>
<text top="883" left="453" width="4" height="18" font="0"> </text>
<text top="925" left="108" width="62" height="24" font="14"><i>5.2.2  L</i></text>
<text top="929" left="171" width="96" height="19" font="15"><i>IST	  PRODUCTS</i></text>
<text top="925" left="268" width="4" height="24" font="14"><i>	  </i></text>
<text top="968" left="108" width="693" height="18" font="0">Product  listing  is  another  interesting  feature  in  the  implementation  process.  As  explained  in </text>
<text top="996" left="108" width="693" height="18" font="0">the section Internal Design 4.2.3, pages of products are being loaded automatically when the </text>
<text top="1024" left="108" width="693" height="18" font="0">user  is  near  the  bottom  of  the  page.  This  way  customers  are  not  fully  aware  of  browsing </text>
</page>
<page number="108" position="absolute" top="0" left="0" height="1188" width="918">
<image top="464" left="108" width="605" height="252" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-108_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">108	  </text>
<text top="110" left="108" width="693" height="18" font="0">through pages, from their point of view new products are constantly presented as they scroll </text>
<text top="137" left="108" width="547" height="18" font="0">down the window of the browser, in what appears to be a large single page. </text>
<text top="181" left="108" width="693" height="18" font="0">Figure 5.15 below illustrates the code of a function that decides when the page needs to load </text>
<text top="209" left="108" width="693" height="18" font="0">more products and when a button to allow a quick return to the top of the page is shown. The </text>
<text top="237" left="108" width="693" height="18" font="0">criteria to execute both actions depend on the vertical scrolling position of the display, so this </text>
<text top="265" left="108" width="693" height="18" font="0">position  needs  to  be  checked  regularly  for  changes.  One  option  was  to  trigger  the  function </text>
<text top="293" left="108" width="693" height="18" font="0">whenever  the  user  scrolls,  but  this  event  is  fired  too  often  when  scrolling  and  would  affect </text>
<text top="321" left="108" width="693" height="18" font="0">negatively  the  performance  of  the  page.  An  alternative  is  to  execute  the  function  in  a  fixed </text>
<text top="350" left="108" width="693" height="18" font="0">interval of time, that balances a smooth navigation with a fast loading before the user reaches </text>
<text top="377" left="108" width="89" height="18" font="0">the bottom. </text>
<text top="420" left="108" width="4" height="18" font="0"> </text>
<text top="700" left="714" width="4" height="18" font="0"> </text>
<text top="731" left="114" width="677" height="15" font="12"><b>Figure 5.15</b>: Source code to load more products and other actions related to page scrolling, in product-list.coffee.</text>
<text top="728" left="792" width="4" height="18" font="0"> </text>
<text top="769" left="108" width="4" height="18" font="0"> </text>
<text top="812" left="108" width="693" height="18" font="0">The  method  to  load  more  products  calls  the  server  via  AJAX,  requesting  to  the  controller </text>
<text top="840" left="108" width="693" height="18" font="0">action  below  a  particular  page  of  a  list  of  products.  The  action  starts  building  the  product </text>
<text top="868" left="108" width="693" height="18" font="0">search request that is sent to SPHERE.IO backend in order to get the desired list of products, </text>
<text top="897" left="108" width="411" height="18" font="0">first requesting all products available. If a category slug</text>
<text top="897" left="519" width="10" height="12" font="10">19</text>
<text top="897" left="530" width="272" height="18" font="0"> was provided, the category object is </text>
<text top="925" left="108" width="693" height="18" font="0">fetched  from  SPHERE.IO  and  is  used  to  filter  the  initial  list  in  the  <i>filterBy</i>  method,  which </text>
<text top="952" left="108" width="319" height="18" font="0">source code is presented next (Figure 5.16). </text>
<text top="996" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1035" left="108" width="10" height="12" font="10">19</text>
<text top="1035" left="119" width="678" height="17" font="11"> Slug is understood in this context as the human-readable keywords identifying a resource, as part of a </text>
<text top="1053" left="108" width="35" height="17" font="11">URL.</text>
<text top="1051" left="143" width="4" height="18" font="0"> </text>
</page>
<page number="109" position="absolute" top="0" left="0" height="1188" width="918">
<image top="152" left="108" width="631" height="240" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-109_1.png"/>
<image top="696" left="108" width="674" height="124" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-109_2.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 109	  </text>
<text top="109" left="108" width="4" height="18" font="0"> </text>
<text top="377" left="739" width="4" height="18" font="0"> </text>
<text top="416" left="143" width="620" height="15" font="12"><b>Figure 5.16</b>: Source code to list products for a particular page and matching criteria, in Categories.java.</text>
<text top="414" left="763" width="4" height="18" font="0"> </text>
<text top="454" left="108" width="4" height="18" font="0"> </text>
<text top="498" left="108" width="693" height="18" font="0">The search of products can be performed with either regular filters (e.g. all products within a </text>
<text top="526" left="108" width="693" height="18" font="0">price range) or faceted searches, in which is returned, besides the list of filtered products, all </text>
<text top="554" left="108" width="693" height="18" font="0">possible options for that attribute and the number of products that belong to each options (e.g. </text>
<text top="582" left="108" width="693" height="18" font="0">a faceted search for the color attribute returns all possible colors for that search and, for each </text>
<text top="610" left="108" width="342" height="18" font="0">color, the number of products with that color). </text>
<text top="653" left="108" width="4" height="18" font="0"> </text>
<text top="805" left="782" width="4" height="18" font="0"> </text>
<text top="844" left="237" width="433" height="15" font="12"><b>Figure 5.17</b>: Source code to filter the list of products, in Categories.java.</text>
<text top="842" left="670" width="4" height="18" font="0"> </text>
<text top="883" left="108" width="4" height="18" font="0"> </text>
<text top="926" left="108" width="693" height="18" font="0">SPHERE.IO Play SDK provides a set of filter and faceted search expressions to flexibly build </text>
<text top="954" left="108" width="693" height="18" font="0">requests for products matching a certain criteria for a certain attribute. For example, above is </text>
<text top="982" left="108" width="693" height="18" font="0">used a category filter expression to get all the products that are present in the set of categories </text>
<text top="1010" left="108" width="693" height="18" font="0">provided,  or  any  of  the  descendent  categories  (see  Figure  5.17).  The  SDK  also  offers  some </text>
<text top="1038" left="108" width="693" height="18" font="0">classes  to  help  implementing  filters  for  the  user  interface,  such  as  search  boxes  to  find </text>
</page>
<page number="110" position="absolute" top="0" left="0" height="1188" width="918">
<image top="280" left="108" width="567" height="225" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-110_1.png"/>
<image top="837" left="108" width="693" height="173" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-110_2.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">110	  </text>
<text top="110" left="108" width="693" height="18" font="0">products. These classes have methods to parse the filter values from the URL query string and </text>
<text top="138" left="108" width="693" height="18" font="0">build the product search request from those values easily. They can also provide some useful </text>
<text top="166" left="108" width="693" height="18" font="0">data for specific filters, like the maximum and minimum prices of a product list for the price </text>
<text top="193" left="108" width="44" height="18" font="0">filter. </text>
<text top="237" left="108" width="4" height="18" font="0"> </text>
<text top="490" left="675" width="4" height="18" font="0"> </text>
<text top="529" left="217" width="471" height="15" font="12"><b>Figure 5.18</b>: Source code with the declaration of filters, in ProductFilters.java.</text>
<text top="527" left="689" width="4" height="18" font="0"> </text>
<text top="567" left="108" width="4" height="18" font="0"> </text>
<text top="611" left="108" width="693" height="18" font="0">Figure  5.18  shows  the  code  that  declares  two  of  the  filters  used  in  this  project  with  the </text>
<text top="639" left="108" width="693" height="18" font="0">corresponding keyword used in the URL query string. They are both included in the filter list </text>
<text top="667" left="108" width="693" height="18" font="0">that  is  directly  bound  to  the  request  in  the  Figure  5.17.  The  only  piece  missing  to  have  a </text>
<text top="695" left="108" width="693" height="18" font="0">functional  product  search  is  the  template  rendering  the  search  form,  shown  below  (Figure </text>
<text top="723" left="108" width="693" height="18" font="0">5.19).  The  HTML  input  name  and  value  are  obtained  from  the  <i>fullTextSearch</i>  parameter </text>
<text top="751" left="108" width="673" height="18" font="0">defined before, hence connecting the user filter interface with the SPHERE.IO filter request. </text>
<text top="794" left="108" width="4" height="18" font="0"> </text>
<text top="995" left="801" width="4" height="18" font="0"> </text>
<text top="1026" left="230" width="447" height="15" font="12"><b>Figure 5.19</b>: Template of the product search box, in searchBox.scala.html.</text>
<text top="1023" left="677" width="4" height="18" font="0"> </text>
</page>
<page number="111" position="absolute" top="0" left="0" height="1188" width="918">
<image top="323" left="108" width="501" height="156" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-111_1.png"/>
<image top="585" left="108" width="471" height="72" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-111_2.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 111	  </text>
<text top="109" left="108" width="4" height="18" font="0"> </text>
<text top="153" left="108" width="693" height="18" font="0">As can be observed, in a Scala template expressions to be evaluated with Scala are preceded by </text>
<text top="181" left="108" width="693" height="18" font="0">a “@” sign. This way classes can be imported and used directly in the template like is the case </text>
<text top="209" left="108" width="693" height="18" font="0">with the filter <i>fullTextSearch</i>. It is also interesting to notice how URLs are generated, using the </text>
<text top="237" left="108" width="640" height="18" font="0">corresponding “reverse routing” method for the controller action that handles searches. </text>
<text top="280" left="108" width="4" height="18" font="0"> </text>
<text top="465" left="609" width="4" height="18" font="0"> </text>
<text top="504" left="237" width="431" height="15" font="12"><b>Figure 5.20</b>: Source code to sort the list of products, in Categories.java.</text>
<text top="501" left="669" width="4" height="18" font="0"> </text>
<text top="542" left="108" width="4" height="18" font="0"> </text>
<text top="642" left="580" width="4" height="18" font="0"> </text>
<text top="681" left="225" width="456" height="15" font="12"><b>Figure 5.21</b>: Source code to paginate the list of products, in Categories.java.</text>
<text top="679" left="681" width="4" height="18" font="0"> </text>
<text top="719" left="108" width="4" height="18" font="0"> </text>
<text top="763" left="108" width="693" height="18" font="0">Using the methods for sorting (Figure 5.20) and paging (Figure 5.21) is very simple, as the two </text>
<text top="791" left="108" width="693" height="18" font="0">pieces  of  code  above  demonstrates.  Sorting  is  achieved  by  specifying  the  correct  sorting </text>
<text top="819" left="108" width="693" height="18" font="0">criterion, provided via a <i>ProductSort</i> enumeration that contains all the possibilities currently </text>
<text top="847" left="108" width="693" height="18" font="0">offered by the SDK. Pagination requires the desired page and the amount of products per page. </text>
<text top="875" left="108" width="693" height="18" font="0">Once  the  request  is  completely  built,  the  list  of  products  is  fetched  from  the  SPHERE.IO </text>
<text top="903" left="108" width="328" height="18" font="0">backend and sent to the client as JSON data. </text>
<text top="946" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="112" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="613" height="577" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-112_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">112	  </text>
<text top="671" left="721" width="4" height="18" font="0"> </text>
<text top="702" left="190" width="526" height="15" font="12"><b>Figure 5.22</b>: Source code to append a page of products to the list, in product-list.coffee.</text>
<text top="699" left="716" width="4" height="18" font="0"> </text>
<text top="739" left="108" width="4" height="18" font="0"> </text>
<text top="783" left="108" width="693" height="18" font="0">When  the  response  is  received  on  the  client  side,  the  method  <i>appendProducts</i>  shown  above </text>
<text top="811" left="108" width="693" height="18" font="0">(Figure 5.22) is called to attach the new data to the previous list and update the information </text>
<text top="839" left="108" width="693" height="18" font="0">about  the  next  page.  In  order  to  achieve  the  product  grid  layout  described  in  the  section </text>
<text top="867" left="108" width="119" height="18" font="0">External  Design</text>
<text top="867" left="228" width="4" height="18" font="21"> </text>
<text top="867" left="235" width="567" height="18" font="0">4.2.2,  the  JavaScript  library  Masonry  has  been  used.  This  library  takes  all </text>
<text top="895" left="108" width="693" height="18" font="0">available space of the parent container and places each product thumbnail in optimal position, </text>
<text top="924" left="108" width="693" height="18" font="0">forming  a  condensed  grid  where  elements  perfectly  fit  together.  A  small  library  called </text>
<text top="952" left="108" width="693" height="18" font="0">imagesLoaded is also used to fire an event when all the images of the products have been fully </text>
<text top="979" left="108" width="528" height="18" font="0">loaded, so that Masonry can use the correct final size of each thumbnail. </text>
<text top="1023" left="108" width="693" height="18" font="0">Thumbnails  are  showing  at  first  a  certain  product  variant,  but  they  should  also  allow  to  see </text>
<text top="1051" left="108" width="693" height="18" font="0">and buy a different variant directly from the thumbnail. This functionality is only enabled for </text>
</page>
<page number="113" position="absolute" top="0" left="0" height="1188" width="918">
<image top="280" left="108" width="665" height="254" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-113_1.png"/>
<image top="829" left="108" width="587" height="81" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-113_2.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 113	  </text>
<text top="110" left="108" width="693" height="18" font="0">color  and  size  attributes  variations,  as  more  attributes  would  saturate  the  design.  A  list  of </text>
<text top="138" left="108" width="693" height="18" font="0">variants is received from the server, with matching attributes but different color. The different </text>
<text top="166" left="108" width="693" height="18" font="0">variants are displayed as small pictures, and when the user hovers the cursor on these pictures </text>
<text top="193" left="108" width="670" height="18" font="0">the thumbnail variant changes to the hovered one, replacing all variant related information. </text>
<text top="237" left="108" width="4" height="18" font="0"> </text>
<text top="519" left="773" width="4" height="18" font="0"> </text>
<text top="549" left="109" width="689" height="15" font="12"><b>Figure 5.23</b>: Source code of the Handlebars template to display matching color variants, in productList.scala.html.</text>
<text top="547" left="798" width="4" height="18" font="0"> </text>
<text top="587" left="108" width="4" height="18" font="0"> </text>
<text top="631" left="108" width="693" height="18" font="0">As shown in the Handlebars template presented in Figure 5.23, there are several data that can </text>
<text top="659" left="108" width="693" height="18" font="0">change amongst variants: image, price, available sizes and, of course, the variant identifier. In </text>
<text top="687" left="108" width="693" height="18" font="0">order to determine the image and sizes for each variant, Handlebars helpers have been used. </text>
<text top="715" left="108" width="693" height="18" font="0">The helper to generate the image is displayed in Figure 5.24, which sets as the new context a </text>
<text top="743" left="108" width="585" height="18" font="0">specific size of the picture, depending on whether the product is featured or not. </text>
<text top="786" left="108" width="4" height="18" font="0"> </text>
<text top="895" left="696" width="4" height="18" font="0"> </text>
<text top="934" left="161" width="584" height="15" font="12"><b>Figure 5.24</b>: Handlebars helper to get correct variant image according to product characteristics.</text>
<text top="932" left="745" width="4" height="18" font="0"> </text>
<text top="973" left="108" width="4" height="18" font="0"> </text>
<text top="1016" left="108" width="693" height="18" font="0">When  a  product  variant  has  different  sizes,  a  list  of  sizes  is  shown  to  the  customer  when  he </text>
<text top="1044" left="108" width="694" height="18" font="0">hovers on the “quick buy” button, to allow him select the correct size. Next is shown the style </text>
</page>
<page number="114" position="absolute" top="0" left="0" height="1188" width="918">
<image top="280" left="108" width="287" height="592" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-114_1.png"/>
<image top="391" left="540" width="257" height="250" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-114_2.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">114	  </text>
<text top="110" left="108" width="693" height="18" font="0">applied to the list of sizes, as an example of the use of LESS to generate CSS stylesheets (see </text>
<text top="138" left="108" width="693" height="18" font="0">Figure 5.25). The example uses the most important features of LESS: variables, here used for </text>
<text top="166" left="108" width="591" height="18" font="0">colors;  functions,  used  to  apply  the  CSS  <i>border-radius</i>  property  cross-browser</text>
<text top="166" left="699" width="12" height="12" font="10">20</text>
<text top="166" left="711" width="90" height="18" font="0">;  mixins,  to </text>
<text top="193" left="108" width="595" height="18" font="0">remove the default style of the list; and nested rules, to better specify inheritance. </text>
<text top="237" left="108" width="4" height="18" font="0"> </text>
<text top="857" left="395" width="4" height="18" font="0"> </text>
<text top="887" left="113" width="680" height="15" font="12"><b>Figure 5.25</b>: Example of LESS stylesheet on the left and the corresponding generated CSS stylesheet on the right.</text>
<text top="884" left="793" width="4" height="18" font="0"> </text>
<text top="925" left="108" width="4" height="18" font="0"> </text>
<text top="968" left="108" width="4" height="18" font="0"> </text>
<text top="993" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1031" left="108" width="12" height="12" font="10">20</text>
<text top="1032" left="121" width="638" height="17" font="11"> Cross-browser refers to the ability of a web application feature to work correctly in all browsers, </text>
<text top="1049" left="108" width="406" height="17" font="11">regardless of whether they provide the required functionality.</text>
<text top="1048" left="514" width="4" height="18" font="0"> </text>
</page>
<page number="115" position="absolute" top="0" left="0" height="1188" width="918">
<image top="689" left="108" width="673" height="141" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-115_1.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 115	  </text>
<text top="109" left="108" width="64" height="24" font="14"><i>5.2.3  P</i></text>
<text top="113" left="173" width="58" height="19" font="15"><i>AYMENT</i></text>
<text top="109" left="231" width="4" height="24" font="14"><i>	  </i></text>
<text top="151" left="108" width="693" height="18" font="0">A notable initial effort was required in order to integrate Optile in a flexible way. But despite of </text>
<text top="179" left="108" width="693" height="18" font="0">the fact that the payment platform was in the end correctly integrated in the system during the </text>
<text top="208" left="108" width="693" height="18" font="0">implementation process, the final result was not entirely satisfactory and was replaced for the </text>
<text top="236" left="108" width="693" height="18" font="0">second  option:  Paymill.  The  problem  resided  on  a  certain  incompatibility  in  the  checkout </text>
<text top="264" left="108" width="619" height="18" font="0">process designed for the SPHERE.IO Play SDK and the workflow expected by Optile. </text>
<text top="307" left="108" width="693" height="18" font="0">The  Optile  workflow  was  already  explained  (see  section  4.2.1.2),  but  the  most  characteristic </text>
<text top="335" left="108" width="693" height="18" font="0">behavior to remember is that it uses notification requests in order to keep the payment state of </text>
<text top="363" left="108" width="693" height="18" font="0">an order updated. Each notification needs to be handled, otherwise the SPHERE.IO backend </text>
<text top="391" left="108" width="287" height="18" font="0">may have wrong payment information. </text>
<text top="435" left="108" width="693" height="18" font="0">On the other hand, the SPHERE.IO Play SDK was initially designed so that the creation of an </text>
<text top="463" left="108" width="693" height="18" font="0">order cannot be reversed. This means that once the order is created the customer’s cart does </text>
<text top="491" left="108" width="693" height="18" font="0">not longer exist, so the only possible moment to create the order is right after the payment has </text>
<text top="519" left="108" width="679" height="18" font="0">succeed.  But  then  the  order  creation  process  can  still  fail  under  some  expected  escenarios</text>
<text top="520" left="787" width="10" height="12" font="10">21</text>
<text top="519" left="798" width="4" height="18" font="0"> </text>
<text top="547" left="108" width="693" height="18" font="0">and charge the customer without actually buying the items. The source code below shows the </text>
<text top="575" left="108" width="693" height="18" font="0">required workflow by SPHERE.IO Play SDK in order to create an order, and how the creation </text>
<text top="603" left="108" width="595" height="18" font="0">needs to be stopped if the customer changes anything from the cart (Figure 5.26). </text>
<text top="646" left="108" width="4" height="18" font="0"> </text>
<text top="815" left="781" width="4" height="18" font="0"> </text>
<text top="854" left="209" width="488" height="15" font="12"><b>Figure 5.26</b>: Source code example to create an order with SPHERE.IO Play SDK.</text>
<text top="852" left="697" width="4" height="18" font="0"> </text>
<text top="892" left="453" width="4" height="18" font="0"> </text>
<text top="976" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1015" left="108" width="10" height="12" font="10">21</text>
<text top="1015" left="119" width="678" height="17" font="11"> When the customer is filling his billing information and opens another browser window to modify the </text>
<text top="1033" left="108" width="652" height="17" font="11">cart, if he did not reload the checkout page before submitting the checkout form, the order will fail </text>
<text top="1049" left="108" width="393" height="17" font="11">because the cart submitted does not match the current cart.</text>
<text top="1048" left="501" width="4" height="18" font="0"> </text>
</page>
<page number="116" position="absolute" top="0" left="0" height="1188" width="918">
<image top="464" left="108" width="414" height="440" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-116_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">116	  </text>
<text top="110" left="108" width="693" height="18" font="0">Of  course  a  payment  cancellation  can  always  be  requested  in  failure  cases,  the  customer  is </text>
<text top="138" left="108" width="693" height="18" font="0">usually already charged but then he is refunded, depending on the payment provider. But this </text>
<text top="166" left="108" width="693" height="18" font="0">behavior was considered to be too uncomfortable for the customer, especially because of the </text>
<text top="194" left="108" width="693" height="18" font="0">uncertainty of a scenario that should be perfectly controlled. Besides, there were other minor </text>
<text top="222" left="108" width="693" height="18" font="0">issues adding more instability to the process, so it was not considered a good solution for the </text>
<text top="250" left="108" width="442" height="18" font="0">implementation of the template until the issues were solved. </text>
<text top="293" left="108" width="693" height="18" font="0">Paymill, despite of accepting only direct debit and credit cards as payment methods, allows on </text>
<text top="321" left="108" width="693" height="18" font="0">the other hand to keep control of the workflow along the process, thus allowing to charge the </text>
<text top="350" left="108" width="693" height="18" font="0">customer only when the order can be created. This is achieved by separating the submission of </text>
<text top="377" left="108" width="441" height="18" font="0">the payment data from the proper charging to the customer. </text>
<text top="420" left="108" width="4" height="18" font="0"> </text>
<text top="888" left="522" width="4" height="18" font="0"> </text>
<text top="928" left="178" width="550" height="15" font="12"><b>Figure 5.27</b>: Source code to send payment data to Paymill and return a token, in Paymill.js.</text>
<text top="925" left="728" width="4" height="18" font="0"> </text>
<text top="966" left="108" width="4" height="18" font="0"> </text>
<text top="1009" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="117" position="absolute" top="0" left="0" height="1188" width="918">
<image top="464" left="108" width="678" height="497" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-117_1.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 117	  </text>
<text top="110" left="108" width="693" height="18" font="0">The payment data is sent via JavaScript to the platform, using a library provided by Paymill. </text>
<text top="138" left="108" width="693" height="18" font="0">This request is executed the moment the customer submits the payment form, and returns a </text>
<text top="166" left="108" width="693" height="18" font="0">token in response. The token is attached to the checkout form, so when the customer submits </text>
<text top="194" left="108" width="693" height="18" font="0">the final form this token is sent to the server. Figure 5.27 shows the code snippet that is part of </text>
<text top="222" left="108" width="657" height="18" font="0">the class that was implemented to help validating the payment form and sending the data. </text>
<text top="265" left="108" width="693" height="18" font="0">Once the checkout form submission reaches the server, the system has complete control over </text>
<text top="293" left="108" width="693" height="18" font="0">the order creation and payment execution, as the next code shows (Figure 5.28). First the cart </text>
<text top="321" left="108" width="693" height="18" font="0">is checked for any changes, then the customer is charged and, only when it is successful, the </text>
<text top="350" left="108" width="693" height="18" font="0">order is created. This process is robust and ensures that no customer is charged without the </text>
<text top="377" left="108" width="150" height="18" font="0">order being created. </text>
<text top="420" left="108" width="4" height="18" font="0"> </text>
<text top="946" left="787" width="4" height="18" font="0"> </text>
<text top="976" left="206" width="494" height="15" font="12"><b>Figure 5.28</b>: Source code to execute payment and create order, in Checkouts.java.</text>
<text top="973" left="700" width="4" height="18" font="0"> </text>
<text top="1014" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="118" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">118	  </text>
<text top="110" left="108" width="693" height="18" font="0">But this system lacks flexibility, because it expects that the payment is executed immediately </text>
<text top="138" left="108" width="693" height="18" font="0">in a single step, which result cannot be changed. Unfortunately some payment providers, such </text>
<text top="166" left="108" width="693" height="18" font="0">as PayPal, are first requested and then the payment is executed at some moment in the future. </text>
<text top="194" left="108" width="693" height="18" font="0">Therefore Paymill is not a solution strong enough for this template either, but at least it offers </text>
<text top="222" left="108" width="593" height="18" font="0">a robust solution until SPHERE.IO and Optile evolve to become fully compatible. </text>
<text top="265" left="108" width="4" height="18" font="0"> </text>
<text top="265" left="324" width="4" height="18" font="0"> </text>
</page>
<page number="119" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0"> 119	  </text>
<text top="109" left="108" width="45" height="33" font="6">6  S</text>
<text top="114" left="154" width="121" height="26" font="7">YSTEM	  TESTS</text>
<text top="109" left="275" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="693" height="18" font="0">This section describes all kind of tests that have been run against the system, both periodical </text>
<text top="191" left="108" width="693" height="18" font="0">and one-time tests. As explained earlier (see section 5.1), every time a change is merged with </text>
<text top="219" left="108" width="694" height="18" font="0">the remote repository, a series of tests are executed to verify those changes did not introduce </text>
<text top="247" left="108" width="693" height="18" font="0">any  error  that  may  prevent  the  system  from  meeting  the  agreed  requirements.  This  system </text>
<text top="275" left="108" width="693" height="18" font="0">triggers only those tests that allow to check the functional requirements of the system, called </text>
<text top="303" left="108" width="693" height="18" font="0">functional  tests,  but  any  other  type  of  automated  test  can  be  executed  as  well  to  check,  for </text>
<text top="331" left="108" width="526" height="18" font="0">example, that the response time of the system is within the agreed limit. </text>
<text top="374" left="108" width="693" height="18" font="0">After functional testing is explained (section Functional Tests 6.1), the next section covers the </text>
<text top="403" left="108" width="693" height="18" font="0">usability tests used to check those non-functional requirements related to user and developer </text>
<text top="431" left="108" width="693" height="18" font="0">experience  (section  Usability  Tests  6.2).  And  although  it  was  not  explicitly  a  requirement,  it </text>
<text top="459" left="108" width="693" height="18" font="0">has been considered important to run some performance tests in order to detect and possibly </text>
<text top="487" left="108" width="615" height="18" font="0">fix those issues that may slow down the application (section Performance Tests 6.3). </text>
<text top="530" left="108" width="693" height="18" font="0">The rest of requirements do not need any special setup to be checked. For example, in order to </text>
<text top="558" left="108" width="693" height="18" font="0">check  the  stability  of  the  system,  it  is  enough  to  change  the  SPHERE.IO  project  to  another </text>
<text top="586" left="108" width="693" height="18" font="0">project with different structure of data and see if it meets the specified requirement (see list in </text>
<text top="614" left="108" width="113" height="18" font="0">Appendix B.2). </text>
<text top="657" left="108" width="4" height="18" font="0"> </text>
<text top="700" left="108" width="53" height="25" font="2">6.1  F</text>
<text top="705" left="161" width="123" height="20" font="0">UNCTIONAL	  TESTS</text>
<text top="700" left="285" width="5" height="25" font="2">	  </text>
<text top="744" left="108" width="693" height="18" font="0">As  explained  in  the  section  Development  Environment  5.1,  this  project  follows  a  continuous </text>
<text top="773" left="108" width="693" height="18" font="0">deployment process which requires functional tests to be implemented along with the feature, </text>
<text top="801" left="108" width="693" height="18" font="0">to ensure the functionality is working correctly every time a change is merged with the project. </text>
<text top="829" left="108" width="693" height="18" font="0">A major difficulty of developing functional tests in this project is that they should work with </text>
<text top="857" left="108" width="693" height="18" font="0">any set of commerce data, so that when developers switch from the test web-shop data to their </text>
<text top="885" left="108" width="245" height="18" font="0">own, the tests are still functional. </text>
<text top="928" left="108" width="693" height="18" font="0">Tests must therefore be independent from the backend data used. The best way to achieve this </text>
<text top="956" left="108" width="693" height="18" font="0">is  mocking  the  <i>Sphere</i>  class  that  handles  the  requests  and  responses  from  the  SPHERE.IO </text>
<text top="984" left="108" width="693" height="18" font="0">backend, to simulate the call to the backend getting only controlled information as response. </text>
<text top="1012" left="108" width="693" height="18" font="0">This means that during the tests execution, all objects returned by the class whenever a call to </text>
<text top="1040" left="108" width="649" height="18" font="0">the backend is theoretically executed are actually objects constructed by the testing code. </text>
</page>
<page number="120" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">120	  </text>
<text top="110" left="108" width="693" height="18" font="0">Not only this solution allows to execute the tests independently of the system’s environment, </text>
<text top="138" left="108" width="693" height="18" font="0">but moreover performance is improved significantly since no remote resources are used, which </text>
<text top="166" left="108" width="693" height="18" font="0">hastens the feedback provided by the continuous development process. Also, mocking allows </text>
<text top="194" left="108" width="693" height="18" font="0">to easily test any situation that may prove complicated otherwise, like provoking certain errors </text>
<text top="222" left="108" width="532" height="18" font="0">from the backend (e.g. a “500 Internal Server Error” HTTP status code).  </text>
<text top="265" left="108" width="693" height="18" font="0">At the moment this project was developed there was no support for mocking coming from the </text>
<text top="293" left="108" width="693" height="18" font="0">SPHERE.IO  Play  SDK  to  ease  this  process.  Besides  the  initial  design  was  not  contemplating </text>
<text top="321" left="108" width="694" height="18" font="0">the possible need to manipulate the response, so mostly all classes had private constructors, </text>
<text top="350" left="108" width="693" height="18" font="0">thus forcing the necessity to mock practically all SDK classes involved in the system and stub </text>
<text top="378" left="108" width="693" height="18" font="0">every  method  before  any  test  could  actually  be  executed.  In  most  cases,  SDK  logic  that  was </text>
<text top="406" left="108" width="693" height="18" font="0">intended to work directly had to be simulated first in order to mock other classes, sometimes </text>
<text top="434" left="108" width="397" height="18" font="0">changing excessively the original behavior of the SDK. </text>
<text top="477" left="108" width="693" height="18" font="0">Not only this process proved to be notably complex, but also testing code became messy and at </text>
<text top="505" left="108" width="693" height="18" font="0">some point it was even difficult to be sure that the tests were really meaningful. So in the end </text>
<text top="533" left="108" width="693" height="18" font="0">only the classes related to browsing products were completely mocked, ensuring at least some </text>
<text top="561" left="108" width="693" height="18" font="0">example tests to include with the template until a better approach is discussed and provided </text>
<text top="589" left="108" width="693" height="18" font="0">with the SPHERE.IO Play SDK. One of the best solutions for the developers would be to offer </text>
<text top="618" left="108" width="693" height="18" font="0">some methods to directly mock the response from the server, without requiring the developer </text>
<text top="645" left="108" width="353" height="18" font="0">to understand the internal structure of the SDK. </text>
<text top="689" left="108" width="693" height="18" font="0">The selected technology to mock Java code was Mockito, a very popular testing framework due </text>
<text top="717" left="108" width="693" height="18" font="0">to  the  simplicity  of  the  resulting  code,  yet  a  complete  solution  like  any  of  the  alternatives. </text>
<text top="745" left="108" width="693" height="18" font="0">Figure 6.1 presents an extract of the source code in charge of mocking the search request for </text>
<text top="773" left="108" width="693" height="18" font="0">products. In this example, the only element that is actually interesting to modify amongst tests </text>
<text top="802" left="108" width="693" height="18" font="0">is the list of products returned, all other stubbed methods and mocked objects are just adding </text>
<text top="829" left="108" width="266" height="18" font="0">unnecessary complexity to the code. </text>
<text top="872" left="108" width="8" height="18" font="0">  </text>
</page>
<page number="121" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="694" height="269" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-121_1.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 121	  </text>
<text top="363" left="802" width="4" height="18" font="0"> </text>
<text top="403" left="200" width="506" height="15" font="12"><b>Figure 6.1</b>: Source code to mock the product search request, in SphereTestable.java.</text>
<text top="400" left="706" width="4" height="18" font="0"> </text>
<text top="440" left="108" width="4" height="18" font="0"> </text>
<text top="484" left="108" width="693" height="18" font="0">The functional tests are designed after the descriptions given for the functional requirements </text>
<text top="512" left="108" width="693" height="18" font="0">of  the  system,  which  are  detailed  in  the  Appendix  B.1.  These  aspects  should  be  eventually </text>
<text top="540" left="108" width="693" height="18" font="0">covered  by  the  set  of  unit,  integration  and  acceptance  tests  as  a  whole;  always  taking  into </text>
<text top="568" left="108" width="693" height="18" font="0">consideration  that  unit  tests  are  using  fewer  resources  than  the  others,  in  opposition  to </text>
<text top="596" left="108" width="693" height="18" font="0">acceptance tests, which are the most resource-intensive of all. This means that unit testing will </text>
<text top="625" left="108" width="693" height="18" font="0">be preferably used to test everything that can be possibly covered by it, while acceptance tests </text>
<text top="652" left="108" width="690" height="18" font="0">will be left for giving feedback about the proper functioning of the system to the future clients.  </text>
<text top="695" left="108" width="4" height="18" font="0"> </text>
<text top="738" left="108" width="66" height="24" font="14"><i>6.1.1  U</i></text>
<text top="742" left="175" width="66" height="19" font="15"><i>NIT	  TESTS</i></text>
<text top="738" left="241" width="4" height="24" font="14"><i>	  </i></text>
<text top="781" left="108" width="693" height="18" font="0">Unit tests are focused on checking the correct behavior of individual components when they </text>
<text top="809" left="108" width="693" height="18" font="0">are  isolated  from  the  rest  of  the  system.  JUnit  is  the  testing  framework  provided  by  Play  to </text>
<text top="837" left="108" width="693" height="18" font="0">implement unit tests for the web application, allowing testing each route in the routing system, </text>
<text top="865" left="108" width="394" height="18" font="0">each controller action and each template individually. </text>
<text top="908" left="108" width="693" height="18" font="0">Template testing is useful to check the correct behavior of some common elements, such as the </text>
<text top="937" left="108" width="693" height="18" font="0">mini-cart  or  the  breadcrumb  generation  shown  in  Figure  6.2.  To  assert  on  HTML  content </text>
<text top="965" left="108" width="693" height="18" font="0">returned  by  the  implementation,  the  library  Jsoup  is  used  to  find  and  extract  the  data  in  a </text>
<text top="992" left="108" width="479" height="18" font="0">simple and clean way thanks to DOM traversal and CSS selectors. </text>
<text top="1036" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="122" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="687" height="270" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-122_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">122	  </text>
<text top="364" left="796" width="4" height="18" font="0"> </text>
<text top="394" left="236" width="433" height="15" font="12"><b>Figure 6.2</b>: Source code to test the breadcrumb view, in ViewsTest.java.</text>
<text top="392" left="670" width="4" height="18" font="0"> </text>
<text top="432" left="108" width="4" height="18" font="0"> </text>
<text top="476" left="108" width="693" height="18" font="0">The routing system is tested by verifying that all the required routes are found by the system, </text>
<text top="504" left="108" width="693" height="18" font="0">while the controller actions are tested setting up different requests and checking the response </text>
<text top="532" left="108" width="693" height="18" font="0">is as expected. The test should analyze the HTTP status code, content type and charset of the </text>
<text top="560" left="108" width="693" height="18" font="0">response are correct, as well as to verify that the content is well formed and displays correct </text>
<text top="588" left="108" width="96" height="18" font="0">information. </text>
<text top="631" left="108" width="693" height="18" font="0">In  Figure  6.3  below  it  is  shown  how  the  Sphere  class  is  mocked  with  certain  products  to  be </text>
<text top="659" left="108" width="693" height="18" font="0">returned by the product request. Then the action is called with a category slug and requesting </text>
<text top="688" left="108" width="693" height="18" font="0">the second page. The type of result is verified and its content, in this case JSON data, is then </text>
<text top="716" left="108" width="693" height="18" font="0">analyzed to check the required products are sent. After that, the search request prepared for </text>
<text top="744" left="108" width="693" height="18" font="0">the backend is examined with Mockito, verifying that the correct filters were applied and the </text>
<text top="772" left="108" width="693" height="18" font="0">second  page  was  actually  requested  before  mocking  the  response.  Unfortunately  the  former </text>
<text top="800" left="108" width="693" height="18" font="0">case is still not possible because the <i>FilterExpression</i> is lacking an overridden <i>equals</i> method </text>
<text top="828" left="108" width="414" height="18" font="0">to compare them, so currently the test would always fail. </text>
<text top="871" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="123" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="640" height="371" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-123_1.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 123	  </text>
<text top="465" left="748" width="4" height="18" font="0"> </text>
<text top="505" left="142" width="623" height="15" font="12"><b>Figure 6.3</b>: Source code to test the product list returned by the action controller, in CategoriesTest.java.</text>
<text top="502" left="764" width="4" height="18" font="0"> </text>
<text top="543" left="108" width="4" height="18" font="0"> </text>
<text top="585" left="108" width="59" height="24" font="14"><i>6.1.2  I</i></text>
<text top="589" left="168" width="132" height="19" font="15"><i>NTEGRATION	  TESTS</i></text>
<text top="585" left="300" width="4" height="24" font="14"><i>	  </i></text>
<text top="628" left="108" width="693" height="18" font="0">Integration tests are in charge of checking that the previously tested components are correctly </text>
<text top="656" left="108" width="693" height="18" font="0">working together. To prove that, Play Framework provides Selenium WebDriver to start a test </text>
<text top="685" left="108" width="693" height="18" font="0">browser and FluentLenium to easily write tests with it, wrapping the Selenium WebDriver in a </text>
<text top="713" left="108" width="693" height="18" font="0">convenient API with a fluent interface. These tests will validate the proper functioning of the </text>
<text top="740" left="108" width="447" height="18" font="0">components when they are integrated in the web application. </text>
<text top="784" left="108" width="693" height="18" font="0">Unlike unit testing, here the tests only need to verify that the response is the expected when an </text>
<text top="812" left="108" width="693" height="18" font="0">action is requested. The content is not checked, as this should be already verified by the unit </text>
<text top="840" left="108" width="693" height="18" font="0">tests. Figure 6.4 below shows an example of how the test browser navigates to the home page </text>
<text top="868" left="108" width="693" height="18" font="0">and there clicks on a category, which displays the category page. In this case the class used in </text>
<text top="896" left="108" width="693" height="18" font="0">the body element, as well as the title, are used to check whether the response is correct, but </text>
<text top="924" left="108" width="693" height="18" font="0">other ways are valid as well, such as checking the URL. The navigation related logic have been </text>
<text top="953" left="108" width="693" height="18" font="0">separated  from  the  testing  logic,  so  that  tests  are  better  isolated  and  the  navigation  code  is </text>
<text top="980" left="108" width="57" height="18" font="0">reused. </text>
<text top="1023" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="124" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="578" height="439" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-124_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">124	  </text>
<text top="533" left="687" width="4" height="18" font="0"> </text>
<text top="572" left="230" width="446" height="15" font="12"><b>Figure 6.4</b>: Source code of some integration tests, in IntegrationTest.java.</text>
<text top="570" left="676" width="4" height="18" font="0"> </text>
<text top="610" left="108" width="4" height="18" font="0"> </text>
<text top="653" left="108" width="65" height="24" font="14"><i>6.1.3  A</i></text>
<text top="657" left="174" width="121" height="19" font="15"><i>CCEPTANCE	  TESTS</i></text>
<text top="653" left="296" width="4" height="24" font="14"><i>	  </i></text>
<text top="695" left="108" width="693" height="18" font="0">Acceptance tests are ensuring that the main requirements agreed for the project are met in the </text>
<text top="724" left="108" width="693" height="18" font="0">current version. So they need to prove that it is possible for a user to achieve at least the main </text>
<text top="752" left="108" width="693" height="18" font="0">goals for which he is using the web application, reason why they will be covering the top-level </text>
<text top="780" left="108" width="693" height="18" font="0">use  cases  described  in  the  early  section  Use  Case  Model  3.1.  Given  that  acceptance  tests  are </text>
<text top="808" left="108" width="693" height="18" font="0">guaranteeing the correctness of the current version, it is imperative to use real data instead of </text>
<text top="836" left="108" width="86" height="18" font="0">mocking it. </text>
<text top="880" left="108" width="693" height="18" font="0">These  type  of  tests  need  to  be  supervised  by  the  client  of  the  product,  usually  non-technical </text>
<text top="908" left="108" width="693" height="18" font="0">people. This makes it a requirement to be easy to understand them by using a plain language </text>
<text top="936" left="108" width="693" height="18" font="0">to define the rules. Cucumber is used in this project as a tool to write these acceptance tests, </text>
<text top="964" left="108" width="693" height="18" font="0">allowing to write the rules in plain text (see Figure 6.5), while describing the technical details </text>
<text top="992" left="108" width="287" height="18" font="0">of each rule in Ruby in a separated file. </text>
<text top="1035" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="125" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="547" height="208" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-125_1.png"/>
<image top="584" left="108" width="684" height="144" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-125_2.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 125	  </text>
<text top="302" left="655" width="4" height="18" font="0"> </text>
<text top="333" left="144" width="617" height="15" font="12"><b>Figure 6.5</b>: Example of rules to verify that browsing catalog can be achieved, in browseCatalog.feature.</text>
<text top="330" left="762" width="4" height="18" font="0"> </text>
<text top="370" left="108" width="4" height="18" font="0"> </text>
<text top="414" left="108" width="693" height="18" font="0">Figure 6.6 shows how the rules are implemented for registering a new customer account. The </text>
<text top="442" left="108" width="693" height="18" font="0">query language XPath is used to select the different HTML elements in order to click on them, </text>
<text top="470" left="108" width="693" height="18" font="0">change  their  value  or  verify  their  existence.  Error  messages  are  always  specified  along  with </text>
<text top="498" left="108" width="569" height="18" font="0">every action, so it becomes easy for non-technical people to identify any issue. </text>
<text top="541" left="108" width="4" height="18" font="0"> </text>
<text top="713" left="792" width="4" height="18" font="0"> </text>
<text top="753" left="174" width="557" height="15" font="12"><b>Figure 6.6</b>: Example of the rules implementation for registering a new customer, in steps.rb.</text>
<text top="750" left="732" width="4" height="18" font="0"> </text>
<text top="790" left="108" width="4" height="18" font="0"> </text>
<text top="834" left="108" width="57" height="25" font="2">6.2  U</text>
<text top="838" left="165" width="100" height="20" font="0">SABILITY	  TESTS</text>
<text top="834" left="266" width="5" height="25" font="2">	  </text>
<text top="878" left="108" width="693" height="18" font="0">With  iterative  methodologies,  usability  tests  would  be  ideally  performed  by  the  end  of  the </text>
<text top="906" left="108" width="693" height="18" font="0">sprint, so that tasks for fixing any issue resulting from the test output can be assigned to the </text>
<text top="934" left="108" width="693" height="18" font="0">next sprint. This iteration is repeated until the reports from the tests are satisfactory, meaning </text>
<text top="962" left="108" width="236" height="18" font="0">that the user story is concluded. </text>
<text top="1005" left="108" width="693" height="18" font="0">But this system may not be convenient for most of the projects if the tests are meant to be too </text>
<text top="1033" left="108" width="693" height="18" font="0">strict. Usually during the Sprint Review Meeting, when a member of the team is showing the </text>
<text top="1062" left="108" width="693" height="18" font="0">tasks he managed to accomplish, the other members are participating in the demonstration by </text>
</page>
<page number="126" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">126	  </text>
<text top="110" left="108" width="693" height="18" font="0">evaluating  and  giving  feedback,  so  that  the  feature  can  be  improved  further.  This  process </text>
<text top="137" left="108" width="402" height="18" font="0">already acts like an informal usability test every sprint. </text>
<text top="181" left="108" width="693" height="18" font="0">Formal usability tests are still necessary in order to receive feedback from some controlled and </text>
<text top="209" left="108" width="693" height="18" font="0">prepared environments, giving a more reliable source of information. Given that this project </text>
<text top="237" left="108" width="693" height="18" font="0">needed to reach some usability requirements focused both on developers and end users, it was </text>
<text top="265" left="108" width="394" height="18" font="0">necessary to set up two different scenarios separately. </text>
<text top="308" left="108" width="693" height="18" font="0">On  the  one  hand,  an  API  hackathon  about  e-commerce  was  organized  in  April  2013,  called </text>
<text top="336" left="108" width="693" height="18" font="0">Berlin ECOMMHACK I/O. This hackathon consisted of developing an application connecting </text>
<text top="364" left="108" width="693" height="18" font="0">two or more of the participant platforms, amongst which was SPHERE.IO. Contestants could </text>
<text top="393" left="108" width="693" height="18" font="0">use the web-shop of the current project as a template to implement their applications or just as </text>
<text top="421" left="108" width="693" height="18" font="0">documentation  of  the  SPHERE.IO  Play  SDK.  As  a  result,  two  of  the  winning  projects  were </text>
<text top="449" left="108" width="677" height="18" font="0">based on the web-shop, developed by teams of four members average in within twelve hours. </text>
<text top="492" left="108" width="693" height="18" font="0">Around September, a smaller hackathon of six hours was held internally, only for the staff of </text>
<text top="520" left="108" width="693" height="18" font="0">commercetools GmbH. About five teams used the web-shop as a template, achieving notable </text>
<text top="548" left="108" width="693" height="18" font="0">results  as  well.  Both  events  and  the  feedback  received  allowed  to  improve  the  template,  but </text>
<text top="577" left="108" width="693" height="18" font="0">also  to  confirm  that  the  understability,  learnability  and  changeability  requirements  expected </text>
<text top="604" left="108" width="286" height="18" font="0">for the current project were safely met. </text>
<text top="648" left="108" width="693" height="18" font="0">On the other hand, a test was designed in order to evaluate the operability and likeability of </text>
<text top="676" left="108" width="694" height="18" font="0">the  template  by  the  users.  Five  people  were  selected  for  this  test  [Nie12],  all  with  different </text>
<text top="704" left="108" width="693" height="18" font="0">profiles  of  online  shopping  experience  and  computer  expertise.  Their  task  consisted  first  of </text>
<text top="732" left="108" width="693" height="18" font="0">registering a new customer account and adding a postal address to their address book. After </text>
<text top="760" left="108" width="693" height="18" font="0">that,  they  were  told  to  add  two  specific  products  to  the  cart,  which  later  they  were  asked  to </text>
<text top="788" left="108" width="693" height="18" font="0">remove or modify in the cart. Next, they had to purchase the products, using the address they </text>
<text top="816" left="108" width="143" height="18" font="0">previously entered. </text>
<text top="859" left="108" width="693" height="18" font="0">Besides measuring the total time it took them to actually buy the items, it is most important to </text>
<text top="888" left="108" width="693" height="18" font="0">observe  their  reactions  and  ask  them  about  their  first  thoughts  regarding  what  they  expect </text>
<text top="916" left="108" width="693" height="18" font="0">when they perform an operation. This will give an insight of the most common usability issues </text>
<text top="943" left="108" width="231" height="18" font="0">and the best way to solve them. </text>
<text top="987" left="108" width="693" height="18" font="0">The results were very satisfactory and provided some issues with clear solutions. For example, </text>
<text top="1015" left="108" width="693" height="18" font="0">most of them had problems with the lack of loading animations when AJAX is performing a </text>
<text top="1043" left="108" width="693" height="18" font="0">request in the background, which is something that has repeatedly been postponed, although </text>
</page>
<page number="127" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0"> 127	  </text>
<text top="110" left="108" width="693" height="18" font="0">it is practically implemented since the beginning. Some evident examples they gave were the </text>
<text top="138" left="108" width="693" height="18" font="0">poor feedback the system shows when adding an address or selecting one during the checkout </text>
<text top="165" left="108" width="63" height="18" font="0">process. </text>
<text top="209" left="108" width="693" height="18" font="0">In contrast, they apparently did not have any trouble with browsing products and navigating </text>
<text top="237" left="108" width="693" height="18" font="0">throughout  the  web-shop.  Especially  giving  very  positive  feedback  about  pagination  and  the </text>
<text top="265" left="108" width="693" height="18" font="0">checkout process, which were the main concerns of the design process. Also their average time </text>
<text top="293" left="108" width="693" height="18" font="0">required for purchasing an item for the first time was considerably low, around 1:50 minutes. </text>
<text top="321" left="108" width="693" height="18" font="0">In  addition,  they  liked  the  whole  look  and  feel  of  the  web-shop,  although  some  reported </text>
<text top="350" left="108" width="693" height="18" font="0">missing some visual aid to understand the behavior of certain elements, such as the category </text>
<text top="377" left="108" width="85" height="18" font="0">navigation. </text>
<text top="421" left="108" width="693" height="18" font="0">In short, participants considered it very easy to operate, which can be translated as a success of </text>
<text top="449" left="108" width="693" height="18" font="0">the logical design of the system. The negative evaluation responds to missing features rather </text>
<text top="477" left="108" width="693" height="18" font="0">than bad design or implementation. The animation on AJAX operations was already planned </text>
<text top="505" left="108" width="693" height="18" font="0">and  the  implementation  was  always  taking  into  account  this  issue,  although  it  had  never </text>
<text top="533" left="108" width="693" height="18" font="0">enough  priority  to  be  implemented.  Also  the  category  navigation  menu  is  missing  feedback </text>
<text top="561" left="108" width="536" height="18" font="0">from a designer, so it still has a very basic design, enough to be operative. </text>
<text top="604" left="108" width="4" height="18" font="0"> </text>
<text top="647" left="108" width="54" height="25" font="2">6.3  P</text>
<text top="652" left="162" width="139" height="20" font="0">ERFORMANCE	  TESTS</text>
<text top="647" left="301" width="5" height="25" font="2">	  </text>
<text top="691" left="108" width="693" height="18" font="0">Constantly during the project development, the tool Chrome DevTools was used to check the </text>
<text top="720" left="108" width="693" height="18" font="0">performance  of  the  web-shop,  paying  special  attention  to  repeated  calls  or  some  unexpected </text>
<text top="748" left="108" width="693" height="18" font="0">behavior resulting from a flaw in the software. This way it was possible to detect a bug in the </text>
<text top="776" left="108" width="693" height="18" font="0">endless scroll for the product list, which executed repeated calls to the web application server </text>
<text top="804" left="108" width="693" height="18" font="0">even when there were no more product available. Also some methods with high response times </text>
<text top="832" left="108" width="250" height="18" font="0">could be fine-tuned with this tool. </text>
<text top="875" left="108" width="693" height="18" font="0">Another tool from Google, PageSpeed Insights, is an online performance test that analyzes the </text>
<text top="903" left="108" width="693" height="18" font="0">web  page  looking  for  elements  that  may  affect its fast  execution,  such  as  resources  that  may </text>
<text top="931" left="108" width="693" height="18" font="0">unnecessary block the page. This test suggested to use minified versions of the JavaScript and </text>
<text top="959" left="108" width="561" height="18" font="0">CSS files, which was an easy task thanks to Play Framework built-in support. </text>
<text top="1003" left="108" width="693" height="18" font="0">It  also  reported  that  there  were  too  many  JavaScript  and  CSS  files  being  fetched  before  the </text>
<text top="1031" left="108" width="693" height="18" font="0">page  could  even  be  loaded,  which  meant  that  the  browser  had  to  wait  until  the  last  file  was </text>
<text top="1059" left="108" width="693" height="18" font="0">fetched in order to allow the user take control of it. It was necessary to find a solution for this, </text>
</page>
<page number="128" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">128	  </text>
<text top="110" left="108" width="693" height="18" font="0">because in order to make the system’s CoffeeScript more understandable for the developer, the </text>
<text top="138" left="108" width="693" height="18" font="0">code  was  split  into  several  files  and  classes,  which  in  some  cases  raised  the  amount  of  files </text>
<text top="165" left="108" width="187" height="18" font="0">fetched to more than ten. </text>
<text top="209" left="108" width="693" height="18" font="0">The best way to face this issue was to use RequireJS, an asynchronously module and file loader </text>
<text top="237" left="108" width="693" height="18" font="0">for  JavaScript  files,  that  allowed  to  fetch  a  JavaScript  file  in  the  background  first,  and  then </text>
<text top="265" left="108" width="693" height="18" font="0">load all its dependencies in parallel. Although it required a bit of effort to integrate with the </text>
<text top="293" left="108" width="693" height="18" font="0">current  code,  the  results  were  very  satisfactory.  It  is  also  worth  mentioning  that  almost  all </text>
<text top="321" left="108" width="652" height="18" font="0">third-party client-side libraries are being fetched from CDNJS, a community-driven CDN</text>
<text top="322" left="761" width="12" height="12" font="10">22</text>
<text top="321" left="773" width="29" height="18" font="0"> for </text>
<text top="349" left="108" width="490" height="18" font="0">web libraries that allows to decrease the loading time considerably. </text>
<text top="393" left="108" width="693" height="18" font="0">A load test was also performed against the system to check the maximum operating capacity </text>
<text top="421" left="108" width="693" height="18" font="0">and detect bottlenecks. As explained in the Physical Design section, both the web application </text>
<text top="449" left="108" width="693" height="18" font="0">and the data tier are scalable systems, although Heroku needs to be scaled up under demand. </text>
<text top="477" left="108" width="693" height="18" font="0">Therefore  the  bottleneck  should  theoretically  be  located  in  the  web  application  tier.  The  test </text>
<text top="505" left="108" width="693" height="18" font="0">was executed with Blitz, a very interesting tool that allows to easily integrate load testing in the </text>
<text top="533" left="108" width="693" height="18" font="0">Continuous  Integration  process,  although  in  this  case  only  the  online  tool  provided  in  their </text>
<text top="561" left="108" width="376" height="18" font="0">website is going to be used for these one-time tests. </text>
<text top="605" left="108" width="693" height="18" font="0">A first test with a duration of one minute, going from 1 to 250 concurrent users, will serve to </text>
<text top="633" left="108" width="693" height="18" font="0">test  the  regular  configuration  of  the  system,  which  consists  of  a  single  processing  unit  with </text>
<text top="661" left="108" width="693" height="18" font="0">512MB  of  memory  RAM  in  Heroku.  After  repeating  the  same  test  severals  time  to  check  for </text>
<text top="689" left="108" width="693" height="18" font="0">anomalies, the average results show how the web application has no problems with light pages </text>
<text top="717" left="108" width="693" height="18" font="0">(e.g.  a  product  detail  page),  although  the  response  time  is  not  stable,  which  suggests  that </text>
<text top="745" left="108" width="499" height="18" font="0">might have problems with a bigger amount of users (see Figure 6.7). </text>
<text top="788" left="108" width="693" height="18" font="0">On  the  other  hand,  heavier  pages  like  any  product  list,  have  grave  problems  with  memory, </text>
<text top="816" left="108" width="693" height="18" font="0">which starts failing with around 170 concurrent users, and then Heroku keeps serving a “503 </text>
<text top="844" left="108" width="693" height="18" font="0">Service  Unavailable”  error.  This  is  more  prominent  as  the  number  of  displayed  products </text>
<text top="873" left="108" width="693" height="18" font="0">increases, being the best example the home page where all products are listed. In this case, the </text>
<text top="901" left="108" width="295" height="18" font="0">memory fails before reaching 100 users. </text>
<text top="943" left="108" width="4" height="18" font="0"> </text>
<text top="976" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1015" left="108" width="12" height="12" font="10">22</text>
<text top="1015" left="120" width="679" height="17" font="11"> CDN stands for Content Management Network and it is a large distributed system of servers deployed </text>
<text top="1033" left="108" width="639" height="17" font="11">in multiple data centers across the Internet, allowing to server content with high availability and </text>
<text top="1049" left="108" width="89" height="17" font="11">performance.</text>
<text top="1048" left="197" width="4" height="18" font="0"> </text>
</page>
<page number="129" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="702" height="294" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-129_1.png"/>
<image top="428" left="108" width="702" height="279" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-129_2.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 129	  </text>
<text top="388" left="810" width="4" height="18" font="0"> </text>
<text top="691" left="810" width="4" height="18" font="0"> </text>
<text top="731" left="135" width="637" height="15" font="12"><b>Figure 6.7</b>: Load test results of 1 minute with 250 users against product detail page with 1 processing unit.</text>
<text top="728" left="772" width="4" height="18" font="0"> </text>
<text top="769" left="108" width="4" height="18" font="0"> </text>
<text top="812" left="108" width="693" height="18" font="0">This problem has two solutions: either the number of processing units is increased, so the load </text>
<text top="841" left="108" width="693" height="18" font="0">can  be  distributed  and  units  can  be  replaced  when  they  fail,  or  the  unit  can  be  upgraded  to </text>
<text top="869" left="108" width="693" height="18" font="0">have double memory. If the number of processing units is increased by one, having then two </text>
<text top="897" left="108" width="693" height="18" font="0">units, then the product detail page shows stable responses and the product list page with few </text>
<text top="925" left="108" width="693" height="18" font="0">products has no more memory problems, but the home page is still having trouble, this time at </text>
<text top="953" left="108" width="279" height="18" font="0">170 concurrent users (see Figure 6.8). </text>
<text top="996" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="130" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="702" height="567" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-130_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">130	  </text>
<text top="661" left="810" width="4" height="18" font="0"> </text>
<text top="701" left="155" width="596" height="15" font="12"><b>Figure 6.8</b>: Load test results of 1 minute with 250 users against home page with 2 processing units.</text>
<text top="698" left="751" width="4" height="18" font="0"> </text>
<text top="731" left="453" width="4" height="18" font="0"> </text>
<text top="775" left="108" width="693" height="18" font="0">Increasing up to four processing units solves the problem, but still 10% of the responses end </text>
<text top="803" left="108" width="693" height="18" font="0">up  exceeding  1.000  milliseconds.  This  memory  issue  may  be  related  to  a  memory  leak  from </text>
<text top="831" left="108" width="121" height="18" font="0">Play Framework</text>
<text top="831" left="229" width="12" height="12" font="10">23</text>
<text top="831" left="241" width="561" height="18" font="0"> or from the same application, but in any case probably has a solution that </text>
<text top="858" left="108" width="496" height="18" font="0">should be found in order to increase the performance of the system. </text>
<text top="902" left="108" width="4" height="18" font="0"> </text>
<text top="993" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1031" left="108" width="12" height="12" font="10">23</text>
<text top="1032" left="120" width="651" height="17" font="11"> See unresolved issue for more information: http://stackoverflow.com/questions/19400493/after-</text>
<text top="1049" left="108" width="467" height="17" font="11">updating-to-play-2-2-i-get-memory-quota-exceeded-errors-on-heroku</text>
<text top="1048" left="575" width="4" height="18" font="0"> </text>
</page>
<page number="131" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="702" height="644" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-131_1.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 131	  </text>
<text top="753" left="453" width="3" height="15" font="12"><b> </b></text>
<text top="776" left="137" width="631" height="15" font="12"><b>Figure 6.9</b>: Load test results of 3 minutes with 1.000 users against category page with 4 processing units.</text>
<text top="773" left="769" width="4" height="18" font="0"> </text>
<text top="814" left="108" width="4" height="18" font="0"> </text>
<text top="857" left="108" width="681" height="18" font="0">Lastly, a load of 1.000 concurrent users during 3 minutes was tested against the light product </text>
<text top="885" left="108" width="618" height="18" font="0">list page with these four processing units (see Figure 6.9). The results are completely </text>
<text top="913" left="108" width="665" height="18" font="0">satisfactory, with very stable responses except for one timeout period after the first minute, </text>
<text top="942" left="108" width="665" height="18" font="0">which could be related to Heroku reacting to the load or simply isolated network problems. </text>
<text top="970" left="108" width="667" height="18" font="0">Here the average response time was of 58 milliseconds, which is more or less the average of </text>
<text top="997" left="108" width="536" height="18" font="0">the whole web-shop when no bigger issues are affecting the performance. </text>
<text top="997" left="856" width="4" height="18" font="0"> </text>
</page>
<page number="132" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">132	  </text>
<text top="109" left="108" width="48" height="33" font="6">7  A</text>
<text top="114" left="157" width="433" height="26" font="7">CTUAL	  PLANNING	  AND	  ECONOMICAL	  ANALYSIS</text>
<text top="109" left="590" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="693" height="18" font="0">Now that every step of the project has been described, it is time to review the actual planning </text>
<text top="191" left="108" width="693" height="18" font="0">resulting from the final developing process. Analysing the deviation and the reasons behind it </text>
<text top="219" left="108" width="693" height="18" font="0">will help to better plan similar projects in the future (section Deviation from Initial Timeline </text>
<text top="247" left="108" width="693" height="18" font="0">7.1). At the same time, knowing the total amount of hours invested allows to estimate the total </text>
<text top="275" left="108" width="693" height="18" font="0">cost of the project (section Economical Valuation 7.2), which helps as well for others projects, </text>
<text top="303" left="108" width="693" height="18" font="0">especially the development of a SPHERE.IO based web-shop that needs to be budgeted to be </text>
<text top="331" left="108" width="171" height="18" font="0">presented to the client. </text>
<text top="374" left="108" width="4" height="18" font="0"> </text>
<text top="417" left="108" width="56" height="25" font="2">7.1  D</text>
<text top="422" left="164" width="229" height="20" font="0">EVIATION	  FROM	  INITIAL	  TIMELINE</text>
<text top="417" left="394" width="5" height="25" font="2">	  </text>
<text top="461" left="108" width="693" height="18" font="0">As  it  was  already  contemplated  as  a  possibility  during  the  risk  analysis,  it  was  necessary  to </text>
<text top="489" left="108" width="228" height="18" font="0">sacrifice the constraint of time</text>
<text top="490" left="336" width="12" height="12" font="10">24</text>
<text top="489" left="348" width="453" height="18" font="0"> of the project. The 725 total hours of  work initially planned </text>
<text top="518" left="108" width="693" height="18" font="0">became 1.361 hours; resulting from an increase of 60 hours in implementation and 576 hours </text>
<text top="546" left="108" width="693" height="18" font="0">in documentation. Also, the project was postponed some months in order to finish some other </text>
<text top="574" left="108" width="400" height="18" font="0">projects that required a higher priority in the moment. </text>
<text top="617" left="108" width="693" height="18" font="0">Moreover, several times during implementation, some malfunction or missing functionality of </text>
<text top="645" left="108" width="693" height="18" font="0">SPHERE.IO Play SDK had to be reported and in some cases a workaround had to be applied </text>
<text top="673" left="108" width="693" height="18" font="0">until a fix was provided, therefore delaying the current development. But it was necessary just </text>
<text top="701" left="108" width="693" height="18" font="0">one  extra  sprint  of  two  weeks  to  deliver  an  acceptable  product  that  allowed  to  fulfill  the </text>
<text top="730" left="108" width="693" height="18" font="0">objectives of the project. In fact, the main responsible of the large deviation between estimated </text>
<text top="758" left="108" width="693" height="18" font="0">and actual planning was the drawing up of the documentation, which was expected to be two </text>
<text top="786" left="108" width="693" height="18" font="0">months shorter. Taking a closer look at the planning (see Figure 6.10), there are three sections </text>
<text top="813" left="108" width="607" height="18" font="0">that were considerably underestimated: Introduction, Design and Implementation. </text>
<text top="857" left="108" width="4" height="18" font="0"> </text>
<text top="993" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1031" left="108" width="12" height="12" font="10">24</text>
<text top="1032" left="120" width="658" height="17" font="11"> A project is considered to have three constraints (scope, time and cost) that cannot be optimized at </text>
<text top="1049" left="108" width="389" height="17" font="11">the same time, at least one constraint will inevitably suffer.</text>
<text top="1048" left="497" width="4" height="18" font="0"> </text>
</page>
<page number="133" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="699" height="563" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-133_1.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 133	  </text>
<text top="657" left="807" width="4" height="18" font="0"> </text>
<text top="696" left="259" width="387" height="15" font="12"><b>Figure 6.10</b>: Gantt diagram of the actual timeline of the project.</text>
<text top="694" left="647" width="4" height="18" font="0"> </text>
<text top="734" left="108" width="4" height="18" font="0"> </text>
<text top="778" left="108" width="693" height="18" font="0">The main reason is that the amount of valuable information of the project was considered to </text>
<text top="806" left="108" width="693" height="18" font="0">be less extensive than it actually was, especially related to technical aspects of the system. The </text>
<text top="834" left="108" width="693" height="18" font="0">same can be applied to the Introduction, because initially it was not contemplated the need of </text>
<text top="862" left="108" width="693" height="18" font="0">explaining the definition and the history of e-commerce, but eventually it was decided best to </text>
<text top="890" left="108" width="493" height="18" font="0">give some solid background before SPHERE.IO could be evaluated. </text>
<text top="933" left="108" width="693" height="18" font="0">The scope was mostly kept the same, but many small user stories were left out of the current </text>
<text top="961" left="108" width="693" height="18" font="0">product due to its low priority, while others had to be released as a slimmed down version of </text>
<text top="989" left="108" width="693" height="18" font="0">the  original  feature,  mainly  because  of  SPHERE.IO  Play  SDK  deficiencies  that  could  not  be </text>
<text top="1018" left="108" width="693" height="18" font="0">fixed  in  time.  Most  of  these  cases  were  already  mentioned,  like  the  issues  with  the  payment </text>
<text top="1045" left="108" width="235" height="18" font="0">platform or the functional tests. </text>
</page>
<page number="134" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">134	  </text>
<text top="110" left="108" width="693" height="18" font="0">Product filtering and sorting was also affected, but in this case due to missing external design. </text>
<text top="138" left="108" width="693" height="18" font="0">While  the  necessary  logic  was  fully  implemented,  the  user  interface  component  was  never </text>
<text top="166" left="108" width="693" height="18" font="0">included  in  the  template.  Despite  of  that,  the  objectives  are  still  covered  since  the  developer </text>
<text top="194" left="108" width="693" height="18" font="0">can use the code to learn how to filter products or build his own product sorting reusing the </text>
<text top="222" left="108" width="42" height="18" font="0">code. </text>
<text top="265" left="108" width="4" height="18" font="0"> </text>
<text top="308" left="108" width="53" height="25" font="2">7.2  E</text>
<text top="312" left="162" width="152" height="20" font="0">CONOMIC	  VALUATION</text>
<text top="308" left="314" width="5" height="25" font="2">	  </text>
<text top="352" left="108" width="693" height="18" font="0">Once  the  total  amount  of  working  hours  is  known,  it  can  be  estimated  the  total  cost  of  the </text>
<text top="380" left="108" width="693" height="18" font="0">project.  This  calculation  consists  of  adding  up  the  costs  of  human  resources,  equipment  and </text>
<text top="408" left="108" width="693" height="18" font="0">facilities used during the development process. Below are presented two tables with detailed </text>
<text top="436" left="108" width="566" height="18" font="0">information about the human resources used and the total cost of the project. </text>
<text top="480" left="108" width="693" height="18" font="0">All the tasks described in this document and the document itself were developed by the same </text>
<text top="508" left="108" width="693" height="18" font="0">person during an internship at the company commercetools GmbH. The contract established a </text>
<text top="536" left="108" width="693" height="18" font="0">gross monthly salary of 1.200 €, for forty hours a week and twenty days of leave. Adding up </text>
<text top="564" left="108" width="33" height="18" font="0">20%</text>
<text top="565" left="141" width="11" height="12" font="10">25</text>
<text top="564" left="153" width="649" height="18" font="0"> of  the  employee’s  gross  salary  as  social  security  contributions,  results  in  the  17.280  € </text>
<text top="592" left="108" width="524" height="18" font="0">yearly cost for the company. Considering 232 working days during 2013</text>
<text top="593" left="632" width="12" height="12" font="10">26</text>
<text top="592" left="644" width="158" height="18" font="0">, this resource costed </text>
<text top="620" left="108" width="693" height="18" font="0">around 9,31 €/hour, that applied to 1.361 hours of work ends up in 12.671 € cost for the whole </text>
<text top="648" left="108" width="154" height="18" font="0">project (see Table 1). </text>
<text top="692" left="108" width="693" height="18" font="0">Although other IT professionals collaborated with some minor changes for the template, none </text>
<text top="720" left="108" width="693" height="18" font="0">of their tasks are covered by this particular project, reason why they are not considered in the </text>
<text top="748" left="108" width="693" height="18" font="0">economic valuation. On the other hand, the designer team was composed by a single freelance </text>
<text top="776" left="108" width="693" height="18" font="0">worker, but the collaboration was terminated before the project was finished, thus lasting less </text>
<text top="804" left="108" width="693" height="18" font="0">than one week. Also usability tests were not contemplated in the company’s budget, therefore </text>
<text top="832" left="108" width="685" height="18" font="0">the testers were picked from the social environment and received no monetary compensation. </text>
<text top="875" left="108" width="4" height="18" font="0"> </text>
<text top="918" left="108" width="4" height="18" font="0"> </text>
<text top="959" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="998" left="108" width="11" height="12" font="10">25</text>
<text top="998" left="120" width="613" height="17" font="11"> The employee worked at the office located in Berlin, Germany, where in 2013 social security </text>
<text top="1016" left="108" width="305" height="17" font="11">contributions of companies were around 20%.</text>
<text top="1014" left="414" width="4" height="18" font="0"> </text>
<text top="1048" left="108" width="12" height="12" font="10">26</text>
<text top="1049" left="120" width="501" height="17" font="11"> Resulting from 252 working days in Berlin for 2013 minus 20 days of leave.</text>
<text top="1047" left="621" width="4" height="18" font="0"> </text>
</page>
<page number="135" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0"> 135	  </text>
<text top="126" left="198" width="317" height="18" font="9"><b>Resource  Yearly cost  Hourly cost </b></text>
<text top="126" left="542" width="58" height="18" font="9"><b>Hours </b></text>
<text top="126" left="626" width="86" height="18" font="9"><b>Total cost </b></text>
<text top="170" left="198" width="51" height="18" font="8"><i>Intern</i> </text>
<text top="170" left="293" width="106" height="18" font="0">17.280 €/year </text>
<text top="170" left="424" width="190" height="18" font="0">9,31 €/hour  1.361 hours </text>
<text top="170" left="648" width="64" height="18" font="0">12.671 € </text>
<text top="214" left="198" width="71" height="18" font="8"><i>Designer</i> </text>
<text top="214" left="396" width="4" height="18" font="0"> </text>
<text top="214" left="436" width="79" height="18" font="0">45 €/hour </text>
<text top="214" left="546" width="68" height="18" font="0">24 hours </text>
<text top="214" left="652" width="60" height="18" font="0">1.080 € </text>
<text top="258" left="198" width="48" height="18" font="9"><b>Total </b></text>
<text top="258" left="293" width="4" height="18" font="9"><b> </b></text>
<text top="258" left="412" width="4" height="18" font="9"><b> </b></text>
<text top="258" left="527" width="4" height="18" font="9"><b> </b></text>
<text top="258" left="641" width="71" height="18" font="9"><b>13.751 € </b></text>
<text top="302" left="276" width="354" height="15" font="12"><b>Table 1</b>: Detail of the human resources costs of the project.</text>
<text top="300" left="630" width="4" height="18" font="0"> </text>
<text top="340" left="108" width="4" height="18" font="0"> </text>
<text top="384" left="108" width="693" height="18" font="0">Facilities costs, such as supplies and office rental, are shared with multiple teams and projects </text>
<text top="412" left="108" width="693" height="18" font="0">in the company, so their cost is not relevant for the project. As for the equipment, a 15-inch </text>
<text top="440" left="108" width="693" height="18" font="0">MacBook  Pro  laptop  was  used,  with  a  processor  Intel  Core  i7  of  2.2  GHz  and  8GB  of  DDR3 </text>
<text top="468" left="108" width="693" height="18" font="0">memory,  from  the  late  2011.  The  price  is  not  known  but  it  is  guessed  to  have  costed  around </text>
<text top="496" left="108" width="693" height="18" font="0">2.000 €. It was used for this project during a period of 16 months, although it was shared with </text>
<text top="524" left="108" width="693" height="18" font="0">other  projects  and  therefore  only  75%  of  the  time  is  counted,  making  a  total  of  one  year. </text>
<text top="552" left="108" width="388" height="18" font="0">Considering  that  laptops  are  paid  along  three  years</text>
<text top="553" left="496" width="11" height="12" font="10">27</text>
<text top="552" left="507" width="294" height="18" font="0"> and  therefore  this  laptop  is  still  being </text>
<text top="580" left="108" width="329" height="18" font="0">paid, its cost for this project is around 667 €. </text>
<text top="623" left="108" width="693" height="18" font="0">All platforms used in the project (i.e. Heroku, Paymill, Mailjet, SPHERE.IO) are permanently </text>
<text top="651" left="108" width="693" height="18" font="0">in trial or free version, with no associated costs. AgileZen, used for project management, was a </text>
<text top="680" left="108" width="693" height="18" font="0">free beta version during the development of the project. GitHub, the project hosting service, is </text>
<text top="708" left="108" width="693" height="18" font="0">free of charge for projects in public repositories, which is the case of this particular project.  All </text>
<text top="736" left="108" width="693" height="18" font="0">other technologies and software were used under free licenses, most of them belonging to open </text>
<text top="764" left="108" width="118" height="18" font="0">source projects. </text>
<text top="807" left="108" width="693" height="18" font="0">The total cost is then calculated only with the human resources and the computer cost, which </text>
<text top="835" left="108" width="693" height="18" font="0">results in 14.418 € (see Table 2). This number is of course just an estimation, but it is enough </text>
<text top="863" left="108" width="693" height="18" font="0">to give an idea of how much this project costed, especially interesting since it is not a project </text>
<text top="891" left="108" width="533" height="18" font="0">for a customer and thus it is not supposed to produce any direct revenue. </text>
<text top="934" left="108" width="4" height="18" font="0"> </text>
<text top="1010" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1048" left="108" width="11" height="12" font="10">27</text>
<text top="1049" left="120" width="447" height="17" font="11"> In Germany, annual depreciation of computers is of 33,3% in 2013.</text>
<text top="1047" left="566" width="4" height="18" font="0"> </text>
</page>
<page number="136" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">136	  </text>
<text top="126" left="323" width="84" height="18" font="9"><b>Resource </b></text>
<text top="126" left="465" width="4" height="18" font="9"><b> </b></text>
<text top="126" left="493" width="89" height="18" font="9"><b>Total Cost </b></text>
<text top="170" left="323" width="61" height="18" font="8"><i>Human</i> </text>
<text top="170" left="472" width="4" height="18" font="0"> </text>
<text top="170" left="523" width="63" height="18" font="0">13.751 € </text>
<text top="214" left="323" width="86" height="18" font="8"><i>Equipment</i> </text>
<text top="214" left="472" width="4" height="18" font="0"> </text>
<text top="214" left="541" width="45" height="18" font="0">667 € </text>
<text top="258" left="323" width="48" height="18" font="9"><b>Total </b></text>
<text top="258" left="472" width="4" height="18" font="0"> </text>
<text top="258" left="512" width="74" height="18" font="9"><b>14.418 € </b></text>
<text top="302" left="316" width="274" height="15" font="12"><b>Table 2</b>: Detail of the total cost of the project.</text>
<text top="300" left="590" width="4" height="18" font="0"> </text>
<text top="340" left="108" width="4" height="18" font="0"> </text>
<text top="340" left="324" width="4" height="18" font="0"> </text>
</page>
<page number="137" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0"> 137	  </text>
<text top="109" left="108" width="47" height="33" font="6">8  C</text>
<text top="114" left="156" width="110" height="26" font="7">ONCLUSION</text>
<text top="109" left="266" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="693" height="18" font="0">E-commerce needed the web to be born in order to start being a profitable business. Nobody </text>
<text top="191" left="108" width="693" height="18" font="0">knows for sure what other technologies may appear to change the e-commerce world we know </text>
<text top="219" left="108" width="693" height="18" font="0">today, but running businesses should get ready for them beforehand. SaaS product model is an </text>
<text top="247" left="108" width="693" height="18" font="0">easy-to-use  but  powerful  e-commerce  solution,  although  it  is  really  slow  reacting  to  changes </text>
<text top="274" left="108" width="562" height="18" font="0">and it needs to be designed for a particular business model and technologies. </text>
<text top="318" left="108" width="693" height="18" font="0">The  new  e-commerce  PaaS  model  not  only  allows  to  give  a  fast  answer  to  new  e-commerce </text>
<text top="346" left="108" width="693" height="18" font="0">scenarios,  but  also  gives  flexibility  to  developers  to  choose  their  programming  language  and </text>
<text top="374" left="108" width="693" height="18" font="0">framework of preference. Furthermore, it can still emulate mostly all advantages of software </text>
<text top="403" left="108" width="693" height="18" font="0">solutions by distributing open source templates, like the one developed in the current project, </text>
<text top="430" left="108" width="346" height="18" font="0">that can be easily deployed to a cloud platform. </text>
<text top="474" left="108" width="689" height="18" font="0">The future of e-commerce relies on PaaS solutions, like SPHERE.IO, to have a specialized e-</text>
<text top="502" left="108" width="693" height="18" font="0">commerce data backend without technology and business boundaries. A product ready to be </text>
<text top="530" left="108" width="693" height="18" font="0">used  from  any  system,  independently  of  the  uncommon  business  process  that  the  company </text>
<text top="558" left="108" width="448" height="18" font="0">follows or the experimental technology that needs to be used. </text>
<text top="601" left="108" width="693" height="18" font="0">Although  SPHERE.IO  is  still  in  development  and  improvement  process,  it  is  already  a  very </text>
<text top="629" left="108" width="693" height="18" font="0">competitive  solution  with  many  built  scenarios  that  attest  this  capability  of  working  in  any </text>
<text top="658" left="108" width="693" height="18" font="0">environment. Starting with the fancy web-shop developed in this project, many other followed </text>
<text top="686" left="108" width="693" height="18" font="0">pursuing  to  check  different  shop  concepts.  As  a  direct  opposite  example,  a  traditional  shop </text>
<text top="714" left="108" width="693" height="18" font="0">with regular pagination, filters, sorting and displaying options was developed, with additional </text>
<text top="742" left="108" width="693" height="18" font="0">multi language support in Italian, Spanish, Chinese and Russian, that demonstrated no issues </text>
<text top="769" left="108" width="573" height="18" font="0">with character encoding (see “Fedora store” in Appendix A.6 for more details). </text>
<text top="813" left="108" width="693" height="18" font="0">Another example is a subscription model with detailed billing information, which was possible </text>
<text top="841" left="108" width="693" height="18" font="0">thanks  to  the  easy  integration  with  other  platforms,  Pactas  and  Paymill  in  this  case.  At  the </text>
<text top="869" left="108" width="693" height="18" font="0">same time this shop proved how comfortable was to develop something apparently so trivial </text>
<text top="897" left="108" width="693" height="18" font="0">but  actually  so  complicated  with  SaaS  solutions  as  a  single-product  web-shop  (see  “I  Want </text>
<text top="925" left="108" width="355" height="18" font="0">Donuts shop” in Appendix A.6 for more details). </text>
<text top="969" left="108" width="693" height="18" font="0">Other interesting business models were implemented with SPHERE.IO, like a web-shop where </text>
<text top="997" left="108" width="693" height="18" font="0">customers could purchase a product and ask somebody else to pay it for them, in which case </text>
<text top="1025" left="108" width="693" height="18" font="0">this person receives an email with a link to a webpage where to fill his billing information; a </text>
<text top="1053" left="108" width="618" height="18" font="0">model especially thought for kids (see “PayforMe” in Appendix A.6 for more details). </text>
</page>
<page number="138" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">138	  </text>
<text top="110" left="108" width="693" height="18" font="0">All  these  web-shop  models  may  seem  simple  to  implement  because  the  required  changes  do </text>
<text top="138" left="108" width="693" height="18" font="0">not look difficult whatsoever. But as in the case of the single-product web-shop, the reality is </text>
<text top="166" left="108" width="693" height="18" font="0">quite different. As mentioned before, SaaS solutions are modelled for a specified system, and </text>
<text top="194" left="108" width="693" height="18" font="0">anything outside this system can fail. Instead, PaaS simply supports commerce data and logic, </text>
<text top="222" left="108" width="693" height="18" font="0">while the system is built on top of it as the client requires. So as long as the platform supports </text>
<text top="250" left="108" width="693" height="18" font="0">all  possible  data  and  logic,  or  it  can  be  connected  to  another  platform  that  supports  the </text>
<text top="278" left="108" width="323" height="18" font="0">missing functionality, anything can be built. </text>
<text top="321" left="108" width="693" height="18" font="0">In  this  case,  supporting  a  functionality  does  not  mean  literally  to  provide  a  full  support,  but </text>
<text top="350" left="108" width="693" height="18" font="0">rather to allow integrating any custom feature with the e-commerce platform. As an example, </text>
<text top="378" left="108" width="693" height="18" font="0">currently SPHERE.IO does not fully support discounts, but instead provides custom line items </text>
<text top="406" left="108" width="693" height="18" font="0">that flexibly allows the developer to add or subtract a specific amount of money from the cart. </text>
<text top="434" left="108" width="693" height="18" font="0">The amount has to be calculated by the developer according to the business rule applied, but </text>
<text top="462" left="108" width="586" height="18" font="0">the logic to integrate any discount or fee to the cart is supported by SPHERE.IO. </text>
<text top="505" left="108" width="693" height="18" font="0">To  put  it  briefly,  well-built  e-commerce  SaaS  solutions  might  provide  full  support  to  all  the </text>
<text top="533" left="108" width="693" height="18" font="0">most demanded business models, but they shall unavoidably create limits on what they really </text>
<text top="561" left="108" width="693" height="18" font="0">support.  They  simply  cannot  cover  all  possible  cases,  especially  when  it  comes  to  innovative </text>
<text top="589" left="108" width="693" height="18" font="0">technologies or new business models. Well-built e-commerce PaaS solutions do not require to </text>
<text top="618" left="108" width="693" height="18" font="0">provide any fully supported model, they just have to make sure they are not limiting what they </text>
<text top="646" left="108" width="693" height="18" font="0">really support. Developers should then use templates in order to reuse code or find inspiration </text>
<text top="674" left="108" width="357" height="18" font="0">to implement their own web-shop requirements. </text>
<text top="717" left="108" width="693" height="18" font="0">During  the  development  of  this  web-shop,  many  flaws  were  found  in  SPHERE.IO  Play  SDK, </text>
<text top="745" left="108" width="693" height="18" font="0">most of them already solved, while the biggest problems are currently in progress. These major </text>
<text top="773" left="108" width="693" height="18" font="0">issues have been already explained in detail in this project: the resulting system is not entirely </text>
<text top="802" left="108" width="693" height="18" font="0">testable and the checkout is incompatible with some payment platforms; and it can be added a </text>
<text top="829" left="108" width="517" height="18" font="0">certain limitation on filtering and sorting products with complex rules. </text>
<text top="873" left="108" width="693" height="18" font="0">But none of these problems is structural, because all come from the SPHERE.IO Play SDK, not </text>
<text top="901" left="108" width="693" height="18" font="0">the platform itself. Also they respond to missing functionalities rather than design problems. </text>
<text top="929" left="108" width="693" height="18" font="0">This not only means that the solution is easier to apply, but also that the core of the system is </text>
<text top="957" left="108" width="693" height="18" font="0">well built. Moreover, given that the SDK is an open-source project, any developer can fix any </text>
<text top="985" left="108" width="693" height="18" font="0">bug or collaborate with missing functionalities, or simply extend it to support his needs as a </text>
<text top="1013" left="108" width="118" height="18" font="0">parallel project. </text>
</page>
<page number="139" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0"> 139	  </text>
<text top="110" left="108" width="693" height="18" font="0">The template developed in this project, as the first template offered by the platform, ended up </text>
<text top="138" left="108" width="693" height="18" font="0">being  a  versatile  web-shop  with  a  flexible  code  and  design,  as  the  usability  tests  results </text>
<text top="166" left="108" width="693" height="18" font="0">describes (see Usability Tests 6.2). It is difficult to count the number of success cases of this </text>
<text top="194" left="108" width="693" height="18" font="0">template, but in any case its code has been reused to build more than five web-shop templates </text>
<text top="222" left="108" width="348" height="18" font="0">in less than a year and even real business cases. </text>
<text top="265" left="108" width="693" height="18" font="0">Some  objectives  were  changed  during  the  development  process  and  others  took  longer  than </text>
<text top="293" left="108" width="693" height="18" font="0">expected to finish, but the result is that the template is widely used, which makes the project a </text>
<text top="321" left="108" width="693" height="18" font="0">success.  Even  at  an  early  stage,  the  template  was  already  public  and  it  was  used  to  develop </text>
<text top="350" left="108" width="693" height="18" font="0">other  systems,  like  it  was  the  case  in  the  e-commerce  hackathon  ECOMMHACK  I/O  (see </text>
<text top="377" left="108" width="213" height="18" font="0">section 6.2 for more details). </text>
<text top="421" left="108" width="693" height="18" font="0">But this is normal, since the template will be constantly evolving at the same time it is used, </text>
<text top="449" left="108" width="693" height="18" font="0">including  new  features  as  the  platform  grows  and  also  improving  the  structure  as  these  new </text>
<text top="477" left="108" width="693" height="18" font="0">features are introduced. In the end, the product described in this document is no more than a </text>
<text top="505" left="108" width="693" height="18" font="0">snapshot of the template as it was. It is also possible that this template has already finished its </text>
<text top="533" left="108" width="693" height="18" font="0">lifecycle and is not being further developed, but then certainly one of the templates based in </text>
<text top="561" left="108" width="293" height="18" font="0">this one has taken over the leading role. </text>
<text top="604" left="108" width="4" height="18" font="0"> </text>
<text top="647" left="108" width="53" height="25" font="2">8.1  F</text>
<text top="652" left="161" width="93" height="20" font="0">UTURE	  WORK</text>
<text top="647" left="254" width="5" height="25" font="2">	  </text>
<text top="691" left="108" width="693" height="18" font="0">Independently  of  the  main  template  being  developed  for  the  platform,  there  are  many  open </text>
<text top="720" left="108" width="693" height="18" font="0">issues that need to be fixed or improved, as well as new functionalities to be implemented. As a </text>
<text top="748" left="108" width="693" height="18" font="0">priority issue, once SPHERE.IO Play SDK provides support for functional testing, all unit and </text>
<text top="776" left="108" width="693" height="18" font="0">integration tests need to be completed. Missing acceptance tests must be implemented as well, </text>
<text top="804" left="108" width="582" height="18" font="0">and some JavaScript testing needs to be provided, due to the extensive use of it. </text>
<text top="847" left="108" width="693" height="18" font="0">Another  important  feature  missing  from  the  initial  planning  is  the  Optile  integration.  At  the </text>
<text top="875" left="108" width="693" height="18" font="0">moment  of  implementing  the  payment  process,  both  SPHERE.IO  and  Optile  were  products </text>
<text top="903" left="108" width="693" height="18" font="0">that had released their first version not so long ago. They were therefore young products giving </text>
<text top="931" left="108" width="693" height="18" font="0">full support to only certain selected workflows, reason why they did not offer much flexibility </text>
<text top="960" left="108" width="693" height="18" font="0">to work together. One of the solutions that solves this incompatibility is, on the one hand, to </text>
<text top="988" left="108" width="693" height="18" font="0">allow an early creation of the order before the payment is executed and reverse it when it fails </text>
<text top="1016" left="108" width="693" height="18" font="0">and, on the other hand, to improve communication between the web server and the payment </text>
<text top="1044" left="108" width="72" height="18" font="0">platform. </text>
</page>
<page number="140" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">140	  </text>
<text top="110" left="108" width="693" height="18" font="0">Currently Optile is already offering repeated notification calls when the web server has failed </text>
<text top="138" left="108" width="693" height="18" font="0">to return a successful response, ensuring that the e-commerce backend has the latest payment </text>
<text top="166" left="108" width="693" height="18" font="0">state. This modification has already allowed to use Optile in some of the newest SPHERE.IO </text>
<text top="194" left="108" width="693" height="18" font="0">based web-shops successfully, but still some work must be done in order to offer it as a simple </text>
<text top="222" left="108" width="136" height="18" font="0">template solution. </text>
<text top="265" left="108" width="693" height="18" font="0">The rest of pending features are closely related to the missing design, being the lack of filters </text>
<text top="293" left="108" width="693" height="18" font="0">and sorting interface components the most noticeable. Although possibly the most important </text>
<text top="321" left="108" width="693" height="18" font="0">is to ensure that the template is responsive to different devices and has cross-browser support. </text>
<text top="350" left="108" width="693" height="18" font="0">Currently it has some minimal support to small devices and it is rendered correctly in most of </text>
<text top="378" left="108" width="693" height="18" font="0">the  newest  browsers  available  (i.e.  the  latest  versions  of  Chrome,  Firefox,  Opera,  Safari  and </text>
<text top="406" left="108" width="662" height="18" font="0">Internet Explorer), but the support is not guaranteed and the design still has to be applied. </text>
<text top="449" left="108" width="697" height="18" font="0">Other smaller improvements for the template include elements to improve the user experience, </text>
<text top="477" left="108" width="693" height="18" font="0">such as the loading animation for all those components that are loaded in the background. As </text>
<text top="505" left="108" width="693" height="18" font="0">well as saving in the browser’s history the last page of the product list that was loaded, so that </text>
<text top="533" left="108" width="693" height="18" font="0">the user returns to the same product list area when he uses the browser’s back functionality. It </text>
<text top="561" left="108" width="693" height="18" font="0">may  also  be  useful  to  modify  the  browser’s  URL  path  when  the  customer  selects  a  different </text>
<text top="589" left="108" width="693" height="18" font="0">color in the product detail page, to make sure the user can still share the URL of the specific </text>
<text top="617" left="108" width="354" height="18" font="0">product variant with no need to reload the page. </text>
<text top="661" left="108" width="693" height="18" font="0">Additionally, it would be also interesting to further improve performance, specially analyzing </text>
<text top="689" left="108" width="693" height="18" font="0">the reason why the web application is running out of memory when listing products. And of </text>
<text top="717" left="108" width="693" height="18" font="0">course, the template should continue to integrate features as SPHERE.IO grows, like different </text>
<text top="745" left="108" width="693" height="18" font="0">catalogs, internationalization, wish list and any other new functionality that can be interesting </text>
<text top="773" left="108" width="161" height="18" font="0">for future developers. </text>
<text top="816" left="108" width="4" height="18" font="0"> </text>
<text top="859" left="108" width="54" height="25" font="2">8.2  P</text>
<text top="864" left="162" width="164" height="20" font="0">ERSONAL	  CONCLUSIONS</text>
<text top="859" left="326" width="5" height="25" font="2">	  </text>
<text top="903" left="108" width="693" height="18" font="0">After explaining how I have contributed to make this project a reality, I did not want to finish </text>
<text top="931" left="108" width="693" height="18" font="0">this document without expressing before how this project has contributed in my academic and </text>
<text top="960" left="108" width="693" height="18" font="0">professional  learning.  This  has  been  an  exceptional  year  in  which  I  had  the  opportunity  to </text>
<text top="988" left="108" width="693" height="18" font="0">work  in  a  very  dynamic  and  innovative  environment,  surrounded  by  extremely  talented  and </text>
<text top="1016" left="108" width="124" height="18" font="0">splendid people. </text>
</page>
<page number="141" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0"> 141	  </text>
<text top="110" left="108" width="693" height="18" font="0">In this atmosphere I was encouraged to try new approaches and technologies to solve design </text>
<text top="138" left="108" width="693" height="18" font="0">and  implementation  problems.  In  fact,  it  is  precisely  the  acquired  technological  knowledge  I </text>
<text top="166" left="108" width="693" height="18" font="0">value the most of my learning, especially when compared with my previous experience, which </text>
<text top="194" left="108" width="693" height="18" font="0">basically consisted of traditional and outdated technologies. This obtained knowledge largely </text>
<text top="222" left="108" width="693" height="18" font="0">includes the complete functional testing of a web system, a pending subject in my professional </text>
<text top="250" left="108" width="135" height="18" font="0">and academic life. </text>
<text top="293" left="108" width="693" height="18" font="0">Working with a proper development environment was also a gratifying experience that I never </text>
<text top="321" left="108" width="693" height="18" font="0">had the chance to put in practice before. I enjoyed as well getting to know agile methodologies </text>
<text top="350" left="108" width="693" height="18" font="0">from inside instead of learning the theory from a book. And not only the methodology, but also </text>
<text top="378" left="108" width="693" height="18" font="0">the  work  philosophy  of  the  company,  which  can  be  simply  summarized  with  the  feeling  of </text>
<text top="406" left="108" width="693" height="18" font="0">joining a professional team that cares about doing things right from the start, valuing quality </text>
<text top="434" left="108" width="105" height="18" font="0">over quantity. </text>
<text top="477" left="108" width="693" height="18" font="0">And of course, the development of this template became a very challenging and motivational </text>
<text top="505" left="108" width="693" height="18" font="0">project to me, with a concept completely different from those I have developed before. It was </text>
<text top="533" left="108" width="693" height="18" font="0">particularly a pleasure to work with requirements that involved a more humanistic approach </text>
<text top="561" left="108" width="693" height="18" font="0">of  the  solution,  such  as  user  and  developer  experience.  And  yet  it  was  quite  surprising  how </text>
<text top="589" left="108" width="300" height="18" font="0">technological these requirements can be. </text>
<text top="632" left="108" width="4" height="18" font="0"> </text>
<text top="632" left="324" width="4" height="18" font="0"> </text>
</page>
<page number="142" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">142	  </text>
<text top="109" left="108" width="15" height="33" font="6">B</text>
<text top="114" left="123" width="124" height="26" font="7">IBLIOGRAPHY</text>
<text top="109" left="247" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="4" height="18" font="0"> </text>
<text top="205" left="108" width="61" height="18" font="0">[Ald09] </text>
<text top="205" left="216" width="494" height="18" font="0">M. Aldrich. Finding Mrs. Snowball. <i>Michael Aldrich Archive</i>, 2009. </text>
<text top="249" left="108" width="59" height="18" font="0">[Ald10] </text>
<text top="249" left="216" width="561" height="18" font="0">M. Aldrich. E-commerce, e-business and online shopping. <i>Sussex Enterprise </i></text>
<text top="277" left="216" width="127" height="18" font="8"><i>Magazine</i>, 2010. </text>
<text top="320" left="107" width="56" height="18" font="0">[Ald11] </text>
<text top="320" left="215" width="580" height="18" font="0">M. Aldrich. Online shopping in the 1980s. <i>Annals of the History of Computing, </i></text>
<text top="348" left="215" width="545" height="18" font="8"><i>October-December 2011 edition, volume 33, number 4</i>, pages 57-61, 2011.  </text>
<text top="391" left="108" width="57" height="18" font="0">[BB05] </text>
<text top="391" left="215" width="530" height="18" font="0">J. Barlow and M. Breeze. Teleshopping for older and disabled people: an </text>
<text top="419" left="215" width="485" height="18" font="0">evaluation of two pilot trials. <i>Joseph Rowntree Foundation</i>, 2005. </text>
<text top="462" left="108" width="62" height="18" font="0">[Ber00] </text>
<text top="462" left="215" width="565" height="18" font="0">T. Berners-Lee. Weaving the Web: the original design and ultimate destiny of </text>
<text top="490" left="215" width="530" height="18" font="0">the World Wide Web by its inventor. <i>HarperBusiness, 1st edition</i>, 2000. </text>
<text top="534" left="108" width="65" height="18" font="0">[Con03] </text>
<text top="534" left="210" width="591" height="18" font="0">J. Conallen. Building Web applications with UML. <i>Addison-Wesley, 2nd edition</i>, </text>
<text top="561" left="215" width="47" height="18" font="0">2003. </text>
<text top="605" left="110" width="68" height="18" font="0">[GWL11] </text>
<text top="605" left="216" width="517" height="18" font="0">S. Guo, M. Wang and J. Leskovec. The role of social networks in online </text>
<text top="633" left="216" width="561" height="18" font="0">shopping: information passing, price of trust, and customer choice. <i>Stanford </i></text>
<text top="661" left="216" width="129" height="18" font="8"><i>University</i>, 2011. </text>
<text top="704" left="110" width="65" height="18" font="0">[Kha04] </text>
<text top="704" left="216" width="567" height="18" font="0">A. Khan. A tale of two methodologies: heavyweight versus agile. <i>University of </i></text>
<text top="732" left="216" width="136" height="18" font="8"><i>Melbourne</i>, 2004. </text>
<text top="776" left="110" width="74" height="18" font="0">[KRSS12] </text>
<text top="776" left="216" width="574" height="18" font="0">S. Koulayev, M. Rysman, S. Schuh and J. Stavins. Explaining adoption and use </text>
<text top="803" left="216" width="525" height="18" font="0">of payment instruments by U.S. consumers. <i>Harvard University</i>, 2007. </text>
<text top="847" left="110" width="79" height="18" font="0">[MERJ13] </text>
<text top="847" left="216" width="580" height="18" font="0">S. Mulpuru, P. F. Evans, D. Roberge and M. Johnson. US mobile retail forecast, </text>
<text top="875" left="216" width="224" height="18" font="0">2012 to 2017. <i>Forrester</i>, 2013. </text>
<text top="918" left="108" width="66" height="18" font="0">[Nem11] </text>
<text top="918" left="216" width="561" height="18" font="0">R. Nemat. Taking a look at different types of e-commerce. <i>Department of IT, </i></text>
<text top="946" left="216" width="426" height="18" font="8"><i>Al-Azhar University. World Applied Programming</i>, 2011. </text>
<text top="989" left="108" width="57" height="18" font="0">[OG13] </text>
<text top="989" left="216" width="557" height="18" font="0">M. O’Grady. Forrester research online retail forecast, 2012 to 2017 (Western </text>
<text top="1017" left="216" width="190" height="18" font="0">Europe). <i>Forrester</i>, 2013. </text>
</page>
<page number="143" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="22" size="14" family="Times" color="#1155cc"/>
<text top="1092" left="771" width="31" height="20" font="0"> 143	  </text>
<text top="110" left="108" width="55" height="18" font="0">[Oli10] </text>
<text top="110" left="216" width="512" height="18" font="0">E. de Oliveira. Um estudo de caso de utilização da WAE para UML em </text>
<text top="138" left="216" width="303" height="18" font="0">aplicações GWT. <i>Adilson Vahldick</i>, 2010. </text>
<text top="182" left="108" width="51" height="18" font="0">[SS13] </text>
<text top="182" left="216" width="531" height="18" font="0">K. Schwaber and J. Sutherland. The Scrum Guide, the definitive guide to </text>
<text top="209" left="216" width="348" height="18" font="0">Scrum: the rules of the game. <i>Scrum.org</i>, 2013. </text>
<text top="253" left="108" width="72" height="18" font="0">[TNW01] </text>
<text top="253" left="216" width="507" height="18" font="0">P. Tarasewich, R. C. Nickerson and M. Warkentin. Wireless/mobile e-</text>
<text top="281" left="216" width="583" height="18" font="0">commerce technologies, applications, and issues. <i>Seventh Americas Conference </i></text>
<text top="309" left="216" width="232" height="18" font="8"><i>on Information Systems</i>, 2001. </text>
<text top="352" left="108" width="57" height="18" font="0">[Akr11] </text>
<text top="352" left="216" width="576" height="18" font="0">G. Akrani. What is commerce? Meaning and importance of commerce. <i>Source: </i></text>
<text top="380" left="216" width="567" height="18" font="22"><i>http://kalyan-city.blogspot.com/2011/03/what-is-commerce-meaning-and-</i></text>
<text top="408" left="216" width="124" height="18" font="22"><i>importance.html</i></text>
<text top="408" left="341" width="225" height="18" font="8"><i> [Visited on August 16th 2013]</i> </text>
<text top="452" left="108" width="59" height="18" font="0">[Bas12] </text>
<text top="452" left="216" width="555" height="18" font="0">V. Basavaraj. The client-side templating throwdown: mustache, handlebars, </text>
<text top="480" left="216" width="191" height="18" font="0">dust.js and more. <i>Source: </i></text>
<text top="480" left="407" width="367" height="18" font="22"><i>http://engineering.linkedin.com/frontend/client-</i></text>
<text top="508" left="216" width="506" height="18" font="22"><i>side-templating-throwdown-mustache-handlebars-dustjs-and-more</i></text>
<text top="508" left="723" width="65" height="18" font="8"><i> [Visited </i></text>
<text top="535" left="216" width="188" height="18" font="8"><i>on November 20th 2013]</i> </text>
<text top="579" left="108" width="62" height="18" font="0">[Con13] </text>
<text top="579" left="216" width="530" height="18" font="0">T. Conroy. Cutting the fat: when to use Ajax and when to reload. <i>Source: </i></text>
<text top="607" left="216" width="558" height="18" font="22"><i>http://www.slideshare.net/Codemotion/cutting-the-fat-by-tiffany-conroy-</i></text>
<text top="635" left="216" width="74" height="18" font="22"><i>21208849</i></text>
<text top="635" left="290" width="246" height="18" font="8"><i> [Visited on December 17th 2013]</i> </text>
<text top="678" left="108" width="71" height="18" font="0">[eMa113] </text>
<text top="678" left="216" width="579" height="18" font="0">eMarketer. Record retail sales on smartphones, tablets take greater ecommerce </text>
<text top="706" left="216" width="109" height="18" font="0">share. So<i>urce: </i></text>
<text top="706" left="325" width="453" height="18" font="22"><i>http://www.emarketer.com/Article/Record-Retail-Sales-on-</i></text>
<text top="735" left="216" width="479" height="18" font="22"><i>Smartphones-Tablets-Take-Greater-Ecommerce-Share/1009595</i></text>
<text top="735" left="696" width="88" height="18" font="8"><i> [Visited on </i></text>
<text top="762" left="216" width="153" height="18" font="8"><i>September 1st 2013]</i> </text>
<text top="806" left="108" width="73" height="18" font="0">[eMa313] </text>
<text top="806" left="216" width="563" height="18" font="0">eMarketer. Ecommerce sales topped $1 trillion for first time in 2012. <i>Source: </i></text>
<text top="834" left="216" width="548" height="18" font="22"><i>http://www.emarketer.com/Article/Ecommerce-Sales-Topped-1-Trillion-</i></text>
<text top="862" left="216" width="193" height="18" font="22"><i>First-Time-2012/1009649</i></text>
<text top="862" left="409" width="227" height="18" font="8"><i> [Visited on August 29th 2013]</i> </text>
<text top="905" left="108" width="73" height="18" font="0">[eMa413] </text>
<text top="905" left="216" width="567" height="18" font="0">eMarketer. Retail ecommerce set to keep a strong pace through 2017. <i>Source: </i></text>
<text top="933" left="216" width="546" height="18" font="22"><i>http://www.emarketer.com/Article/Retail-Ecommerce-Set-Keep-Strong-</i></text>
<text top="961" left="216" width="218" height="18" font="22"><i>Pace-Through-2017/1009836</i></text>
<text top="961" left="435" width="227" height="18" font="8"><i> [Visited on August 29th 2013] </i></text>
<text top="1004" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="144" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">144	  </text>
<text top="110" left="108" width="73" height="18" font="0">[eMa613] </text>
<text top="110" left="216" width="547" height="18" font="0">eMarketer. B2C ecommerce climbs worldwide, as emerging markets drives </text>
<text top="138" left="216" width="156" height="18" font="0">sales higher. <i>Source: </i></text>
<text top="138" left="372" width="404" height="18" font="22"><i>http://www.emarketer.com/Article/B2C-Ecommerce-</i></text>
<text top="166" left="216" width="510" height="18" font="22"><i>Climbs-Worldwide-Emerging-Markets-Drive-Sales-Higher/1010004</i></text>
<text top="166" left="727" width="65" height="18" font="8"><i> [Visited </i></text>
<text top="193" left="216" width="163" height="18" font="8"><i>on August 28th 2013]</i> </text>
<text top="237" left="108" width="63" height="18" font="0">[Hoa12] </text>
<text top="237" left="216" width="555" height="18" font="0">A. Hoar. US B2B e-commerce sales to reach $559 billion by the end of 2013. </text>
<text top="265" left="216" width="61" height="18" font="8"><i>Source: </i></text>
<text top="265" left="277" width="365" height="18" font="22"><i>http://blogs.forrester.com/andy_hoar/12-10-18-</i></text>
<text top="293" left="216" width="539" height="18" font="22"><i>us_b2b_ecommerce_sales_to_reach_559_billion_by_the_end_of_2013</i></text>
<text top="293" left="756" width="4" height="18" font="8"><i> </i></text>
<text top="321" left="216" width="220" height="18" font="8"><i>[Visited on October 5th 2013]</i> </text>
<text top="364" left="108" width="58" height="18" font="0">[Nie12] </text>
<text top="364" left="216" width="434" height="18" font="0">J. Nielsen. How many test users in usability study? <i>Source: </i></text>
<text top="393" left="216" width="433" height="18" font="22"><i>http://www.nngroup.com/articles/how-many-test-users/</i></text>
<text top="393" left="650" width="88" height="18" font="8"><i> [Visited on </i></text>
<text top="420" left="216" width="162" height="18" font="8"><i>December 26th 2013]</i> </text>
<text top="464" left="108" width="58" height="18" font="0">[Off93] </text>
<text top="464" left="216" width="525" height="18" font="0">Office of Inspector of National Science Foundation. Review of NSFNET. </text>
<text top="492" left="216" width="61" height="18" font="8"><i>Source: </i></text>
<text top="492" left="277" width="419" height="18" font="22"><i>http://www.nsf.gov/pubs/stis1993/oig9301/oig9301.txt</i></text>
<text top="492" left="696" width="88" height="18" font="8"><i> [Visited on </i></text>
<text top="520" left="216" width="137" height="18" font="8"><i>August 12th 2013]</i> </text>
<text top="563" left="108" width="55" height="18" font="0">[Pie12] </text>
<text top="563" left="216" width="393" height="18" font="0">A. Pietka. E-commerce new business models. <i>Source: </i></text>
<text top="591" left="216" width="563" height="18" font="22"><i>http://www.slideshare.net/AnnaPietka/e-commerce-new-business-models-</i></text>
<text top="619" left="216" width="70" height="18" font="22"><i>14291829</i></text>
<text top="619" left="287" width="258" height="18" font="8"><i>  [Visited on September 23th 2013]</i> </text>
<text top="663" left="108" width="60" height="18" font="0">[Rob11] </text>
<text top="663" left="216" width="342" height="18" font="0">T. Robinson. How does Heroku work? <i>Source: </i></text>
<text top="691" left="216" width="454" height="18" font="22"><i>http://www.quora.com/Scalability/How-does-Heroku-work</i></text>
<text top="691" left="670" width="88" height="18" font="8"><i> [Visited on </i></text>
<text top="719" left="216" width="152" height="18" font="8"><i>December 4th 2013]</i> </text>
<text top="762" left="108" width="4" height="18" font="0"> </text>
<text top="805" left="108" width="4" height="18" font="0"> </text>
<text top="848" left="108" width="4" height="18" font="0"> </text>
<text top="891" left="108" width="4" height="18" font="0"> </text>
<text top="891" left="324" width="4" height="18" font="0"> </text>
</page>
<page number="145" position="absolute" top="0" left="0" height="1188" width="918">
	<fontspec id="23" size="14" family="Times" color="#1155cc"/>
<text top="1092" left="771" width="31" height="20" font="0"> 145	  </text>
<text top="109" left="108" width="179" height="33" font="6">Appendix	  A  D</text>
<text top="114" left="287" width="182" height="26" font="7">EVELOPER	  MANUAL</text>
<text top="109" left="470" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="4" height="18" font="0"> </text>
<text top="205" left="108" width="52" height="25" font="2">A.1  L</text>
<text top="210" left="161" width="68" height="20" font="0">IVE	  DEMO</text>
<text top="205" left="229" width="5" height="25" font="2">	  </text>
<text top="249" left="108" width="260" height="18" font="0">Visit a live demo of this template at </text>
<text top="249" left="368" width="196" height="18" font="23">http://snowflake.sphere.io</text>
<text top="249" left="564" width="8" height="18" font="0">. </text>
<text top="293" left="108" width="405" height="18" font="0">You can also consult the source code of this template at </text>
<text top="321" left="108" width="395" height="18" font="23">https://github.com/commercetools/sphere-snowflake</text>
<text top="321" left="504" width="8" height="18" font="0">. </text>
<text top="363" left="108" width="4" height="18" font="0"> </text>
<text top="407" left="108" width="53" height="25" font="2">A.2  S</text>
<text top="411" left="161" width="55" height="20" font="0">ET	  IT	  UP</text>
<text top="407" left="216" width="5" height="25" font="2">	  </text>
<text top="451" left="108" width="162" height="19" font="0">➔  Install Play 2.1.5 (</text>
<text top="451" left="270" width="475" height="18" font="23">http://www.playframework.com/documentation/2.1.x/Installing</text>
<text top="451" left="745" width="15" height="18" font="0">). </text>
<text top="479" left="108" width="74" height="19" font="0">➔  Clone</text>
<text top="480" left="182" width="12" height="12" font="10">28</text>
<text top="479" left="194" width="488" height="18" font="0"> sphere-snowflake project from GitHub, or download it as a zip file </text>
<text top="508" left="140" width="6" height="18" font="0">(</text>
<text top="508" left="146" width="540" height="18" font="23">https://github.com/commercetools/sphere-snowflake/archive/master.zip</text>
<text top="508" left="687" width="15" height="18" font="0">). </text>
<text top="536" left="108" width="404" height="19" font="0">➔  Run “play run” command in root project directory. </text>
<text top="564" left="108" width="283" height="19" font="0">➔  Open your browser and point it to </text>
<text top="564" left="391" width="161" height="18" font="23">http://localhost:9000</text>
<text top="564" left="552" width="8" height="18" font="0">. </text>
<text top="592" left="140" width="4" height="18" font="0"> </text>
<text top="635" left="108" width="54" height="25" font="2">A.3  C</text>
<text top="640" left="163" width="87" height="20" font="0">ONFIGURE	  IT</text>
<text top="635" left="250" width="5" height="25" font="2">	  </text>
<text top="679" left="108" width="321" height="18" font="0">To connect your web-shop with SPHERE.IO</text>
<text top="680" left="429" width="12" height="12" font="10">29</text>
<text top="679" left="441" width="9" height="18" font="0">: </text>
<text top="723" left="108" width="328" height="19" font="0">➔  Go to SPHERE.IO Administration page (</text>
<text top="723" left="437" width="176" height="18" font="23">https://admin.sphere.io</text>
<text top="723" left="613" width="144" height="18" font="0">) and log in with an </text>
<text top="751" left="140" width="313" height="18" font="0">existing account or register a new account. </text>
<text top="779" left="108" width="486" height="19" font="0">➔  Go to “Developers &gt; API Clients” to retrieve your project data. </text>
<text top="807" left="108" width="635" height="19" font="0">➔  To connect your web-shop with your SPHERE.IO project, modify “sphere.project”, </text>
<text top="836" left="140" width="533" height="18" font="0">“sphere.clientId” and “sphere.clientSecret” from “conf/application.conf”. </text>
<text top="863" left="108" width="4" height="18" font="0"> </text>
<text top="907" left="108" width="4" height="18" font="0"> </text>
<text top="949" left="108" width="4" height="18" font="0"> </text>
<text top="976" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="1015" left="108" width="12" height="12" font="10">28</text>
<text top="1015" left="120" width="181" height="17" font="11"> For more information see: </text>
<text top="1015" left="302" width="371" height="17" font="18">https://help.github.com/articles/github-glossary#clone</text>
<text top="1014" left="672" width="4" height="18" font="0"> </text>
<text top="1048" left="108" width="12" height="12" font="10">29</text>
<text top="1049" left="120" width="307" height="17" font="11"> For more information about SPHERE.IO see: </text>
<text top="1049" left="428" width="144" height="17" font="18">http://www.sphere.io</text>
<text top="1047" left="572" width="4" height="18" font="0"> </text>
</page>
<page number="146" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">146	  </text>
<text top="109" left="108" width="287" height="18" font="0">To connect your web-shop with Paymill</text>
<text top="110" left="396" width="12" height="12" font="10">30</text>
<text top="109" left="408" width="9" height="18" font="0">: </text>
<text top="153" left="108" width="179" height="19" font="0">➔  Go to Paymill page (</text>
<text top="153" left="287" width="278" height="18" font="23">https://app.paymill.com/en-gb/auth/</text>
<text top="153" left="565" width="201" height="18" font="0">) and login with an existing </text>
<text top="181" left="140" width="252" height="18" font="0">account or register a new account. </text>
<text top="209" left="108" width="630" height="19" font="0">➔  Go to “Paymill Cockpit &gt; My account &gt; Settings &gt; API Keys” to retrieve your keys. </text>
<text top="237" left="108" width="549" height="19" font="0">➔  To connect your web-shop with Paymill, modify “paymill.apiKey” from </text>
<text top="266" left="140" width="179" height="18" font="0">“conf/application.conf”. </text>
<text top="294" left="108" width="4" height="18" font="0"> </text>
<text top="337" left="108" width="56" height="25" font="2">A.4  D</text>
<text top="341" left="165" width="58" height="20" font="0">EPLOY	  IT</text>
<text top="337" left="223" width="5" height="25" font="2">	  </text>
<text top="381" left="108" width="212" height="19" font="0">➔  Install Heroku Toolbelt (</text>
<text top="381" left="321" width="205" height="18" font="23">https://toolbelt.heroku.com</text>
<text top="381" left="526" width="248" height="18" font="0">) and create an account if needed. </text>
<text top="409" left="108" width="435" height="19" font="0">➔  Run “heroku create” command in root project directory</text>
<text top="410" left="543" width="10" height="12" font="10">31</text>
<text top="409" left="553" width="229" height="18" font="0">, it will create a new remote for </text>
<text top="438" left="140" width="31" height="18" font="0">Git. </text>
<text top="465" left="108" width="574" height="19" font="0">➔  Run “git push heroku master” to push the project to Heroku and deploy it. </text>
<text top="494" left="108" width="499" height="19" font="0">➔  Run “heroku open” to open your deployed website in a browser. </text>
<text top="522" left="108" width="4" height="18" font="0"> </text>
<text top="565" left="108" width="56" height="25" font="2">A.5  D</text>
<text top="569" left="165" width="68" height="20" font="0">EVELOP	  IT</text>
<text top="565" left="232" width="5" height="25" font="2">	  </text>
<text top="609" left="108" width="528" height="19" font="0">➔  Install your favourite IDE (preferably IntelliJ, Eclipse or Netbeans). </text>
<text top="638" left="108" width="604" height="19" font="0">➔  Generate configuration files for your chosen IDE, following these instructions: </text>
<text top="666" left="140" width="434" height="18" font="23">http://www.playframework.com/documentation/2.1.x/IDE</text>
<text top="666" left="575" width="4" height="18" font="0"> </text>
<text top="694" left="108" width="374" height="19" font="0">➔  Run “play” command in root project directory. </text>
<text top="722" left="108" width="153" height="19" font="0">➔  Inside Play Shell</text>
<text top="723" left="261" width="12" height="12" font="10">32</text>
<text top="722" left="273" width="336" height="18" font="0">, type “clean test” for compiling and testing it. </text>
<text top="751" left="108" width="367" height="19" font="0">➔  Check SPHERE.IO Play SDK documentation (</text>
<text top="751" left="475" width="301" height="18" font="23">http://www.sphere.io/dev/play-sdk.html</text>
<text top="751" left="776" width="10" height="18" font="0">) </text>
<text top="779" left="140" width="262" height="18" font="0">to further develop your application. </text>
<text top="807" left="108" width="4" height="18" font="0"> </text>
<text top="850" left="108" width="76" height="18" font="0">Have fun! </text>
<text top="894" left="108" width="4" height="18" font="0"> </text>
<text top="942" left="108" width="220" height="20" font="0">	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  	  </text>
<text top="981" left="108" width="12" height="12" font="10">30</text>
<text top="981" left="121" width="277" height="17" font="11"> For more information about Paymill see: </text>
<text top="981" left="397" width="165" height="17" font="18">http://www.paymill.com</text>
<text top="980" left="563" width="4" height="18" font="0"> </text>
<text top="1015" left="108" width="10" height="12" font="10">31</text>
<text top="1015" left="119" width="181" height="17" font="11"> For more information see: </text>
<text top="1015" left="300" width="492" height="17" font="18">http://www.playframework.com/documentation/2.1.x/ProductionHeroku</text>
<text top="1014" left="793" width="4" height="18" font="0"> </text>
<text top="1048" left="108" width="12" height="12" font="10">32</text>
<text top="1049" left="120" width="255" height="17" font="11"> For more information about Play see: </text>
<text top="1049" left="375" width="409" height="17" font="18">http://www.playframework.com/documentation/2.1.x/Home</text>
<text top="1047" left="784" width="4" height="18" font="0"> </text>
</page>
<page number="147" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0"> 147	  </text>
<text top="109" left="108" width="57" height="25" font="2">A.6  O</text>
<text top="114" left="166" width="39" height="20" font="0">THER	  </text>
<text top="109" left="205" width="90" height="25" font="2">SPHERE.IO</text>
<text top="114" left="295" width="35" height="20" font="0">	  WEB</text>
<text top="109" left="330" width="6" height="25" font="2">-­‐</text>
<text top="114" left="337" width="45" height="20" font="0">SHOPS</text>
<text top="109" left="381" width="5" height="25" font="2">	  </text>
<text top="153" left="108" width="463" height="19" font="0">➔  <b>Fedora shop</b>, a traditional webshop with multi-language. </text>
<text top="182" left="140" width="95" height="18" font="0">Running on: </text>
<text top="182" left="236" width="169" height="18" font="23">http://fedora.sphere.io</text>
<text top="182" left="405" width="4" height="18" font="0"> </text>
<text top="210" left="140" width="97" height="18" font="0">Source code: </text>
<text top="210" left="237" width="369" height="18" font="23">https://github.com/commercetools/sphere-fedora</text>
<text top="210" left="606" width="4" height="18" font="0"> </text>
<text top="238" left="140" width="212" height="18" font="0">Main developers: Laura Luiz </text>
<text top="266" left="140" width="4" height="18" font="0"> </text>
<text top="294" left="108" width="661" height="19" font="0">➔  <b>I Want Donuts store</b>, a single-product webshop with subscription payment system. </text>
<text top="323" left="140" width="95" height="18" font="0">Running on: </text>
<text top="323" left="236" width="177" height="18" font="23">http://iwantdonuts.com</text>
<text top="323" left="413" width="4" height="18" font="0"> </text>
<text top="351" left="140" width="97" height="18" font="0">Source code: </text>
<text top="351" left="237" width="366" height="18" font="23">https://github.com/commercetools/sphere-donut</text>
<text top="351" left="603" width="4" height="18" font="0"> </text>
<text top="379" left="140" width="623" height="18" font="0">Main developers: Martin Koníček, Laura Luiz, Christoph Menge and Nicola Molinari. </text>
<text top="407" left="140" width="4" height="18" font="0"> </text>
<text top="435" left="108" width="520" height="19" font="0">➔  <b>PayforMe</b>, a web-shop with request of payment to a third person. </text>
<text top="464" left="140" width="97" height="18" font="0">Source code: </text>
<text top="464" left="237" width="295" height="18" font="23">https://github.com/payforme/payforme</text>
<text top="464" left="532" width="4" height="18" font="0"> </text>
<text top="492" left="140" width="659" height="18" font="0">Main developers: Hajo Eichler, Mathias Fiedler, Gregor Goldmann, Jonas Knipper, Nicola </text>
<text top="520" left="140" width="249" height="18" font="0">Molinari and Christian Zacharias. </text>
<text top="548" left="140" width="4" height="18" font="0"> </text>
<text top="576" left="108" width="470" height="19" font="0">➔  <b>Kokon</b>, a production web-shop with BC2 and B2B support. </text>
<text top="605" left="140" width="478" height="18" font="0">Main developers: Hajo Eichler, Laura Luiz and Sven Straubinger. </text>
<text top="632" left="108" width="4" height="18" font="0"> </text>
<text top="632" left="324" width="4" height="18" font="0"> </text>
</page>
<page number="148" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">148	  </text>
<text top="109" left="108" width="176" height="33" font="6">Appendix	  B  P</text>
<text top="114" left="285" width="83" height="26" font="7">RODUCT	  </text>
<text top="109" left="368" width="15" height="33" font="6">B</text>
<text top="114" left="383" width="75" height="26" font="7">ACKLOG</text>
<text top="109" left="458" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="445" height="18" font="0">General structure of a user story described in this document: </text>
<text top="205" left="108" width="566" height="18" font="9"><b>{User story name}</b>: As a {role}, I want {goal}, so that {benefit} ({priority}). </text>
<text top="249" left="108" width="4" height="18" font="0"> </text>
<text top="291" left="108" width="53" height="25" font="2">B.1  F</text>
<text top="296" left="161" width="84" height="20" font="0">UNCTIONAL	  </text>
<text top="291" left="245" width="11" height="25" font="2">R</text>
<text top="296" left="257" width="99" height="20" font="0">EQUIREMENTS</text>
<text top="291" left="356" width="5" height="25" font="2">	  </text>
<text top="344" left="108" width="74" height="24" font="14"><i>B.1.1  B</i></text>
<text top="348" left="183" width="126" height="19" font="15"><i>ROWSE	  PRODUCTS</i></text>
<text top="344" left="309" width="4" height="24" font="14"><i>	  </i></text>
<text top="399" left="108" width="557" height="19" font="0">➔  <b>List products</b>: As a customer, I want to list all products of the shop (1). </text>
<text top="442" left="108" width="655" height="19" font="0">➔  <b>Filter by category</b>: As a customer, I want to see only those products that belong to a </text>
<text top="470" left="135" width="666" height="18" font="0">particular category and any category descendant, so that I can narrow down the list to what </text>
<text top="498" left="135" width="164" height="18" font="0">fits best my needs (2). </text>
<text top="541" left="108" width="663" height="19" font="0">➔  <b>Filter by price</b>: As a customer, I want to see only those products from the product list </text>
<text top="570" left="135" width="654" height="18" font="0">which prices fall within a specific price range, so that I can narrow down the list to best fit </text>
<text top="597" left="135" width="232" height="18" font="0">my economic requirements (3). </text>
<text top="641" left="108" width="664" height="19" font="0">➔  <b>Filter by color</b>: As a customer, I want to see only those products from the product list </text>
<text top="669" left="135" width="662" height="18" font="0">which main color matches any of the colors I selected, so that I can narrow down the list to </text>
<text top="697" left="135" width="156" height="18" font="0">best fit my liking (4). </text>
<text top="740" left="108" width="670" height="19" font="0">➔  <b>Sort by name</b>: As a customer, I want to sort the products from the product list by their </text>
<text top="768" left="135" width="344" height="18" font="0">name in an ascendant or descendant order (9). </text>
<text top="812" left="108" width="666" height="19" font="0">➔  <b>Sort by price</b>: As a customer, I want to sort the products from the product list by their </text>
<text top="840" left="135" width="340" height="18" font="0">price in an ascendant or descendant order (8). </text>
<text top="883" left="108" width="674" height="19" font="0">➔  <b>Pagination</b>: The product list needs to be displayed divided into pages and the customer </text>
<text top="911" left="135" width="403" height="18" font="0">should be given the ability to browse through them (3). </text>
<text top="955" left="108" width="639" height="19" font="0">➔  <b>Product detail</b>: As a customer, I want to see all information regarding a particular </text>
<text top="983" left="135" width="584" height="18" font="0">product and its variants, so that I can make a better decision about buying it (1). </text>
</page>
<page number="149" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0"> 149	  </text>
<text top="109" left="108" width="664" height="19" font="0">➔  <b>Breadcrumb</b>: As a customer, I want to be informed of my location inside the category </text>
<text top="138" left="135" width="651" height="18" font="0">tree via a breadcrumb, so that it can help me to navigate and have a better understanding </text>
<text top="166" left="135" width="221" height="18" font="0">of the web-shop structure (6). </text>
<text top="209" left="108" width="684" height="19" font="0">➔  <b>Empty list message</b>: As a customer, I want to be informed with an informative message </text>
<text top="237" left="135" width="336" height="18" font="0">when a product list request has no results (5). </text>
<text top="280" left="108" width="683" height="19" font="0">➔  <b>Not found message</b>: As a customer, I want to be informed with an informative message </text>
<text top="309" left="135" width="448" height="18" font="0">when a category or product I requested cannot be found (10). </text>
<text top="352" left="108" width="4" height="18" font="0"> </text>
<text top="404" left="108" width="74" height="24" font="14"><i>B.1.2  P</i></text>
<text top="407" left="183" width="140" height="19" font="15"><i>URCHASE	  PRODUCTS</i></text>
<text top="404" left="323" width="4" height="24" font="14"><i>	  </i></text>
<text top="458" left="108" width="687" height="19" font="0">➔  <b>Add item to cart</b>: As a customer, I want to add a particular product to the shopping cart, </text>
<text top="486" left="135" width="310" height="18" font="0">so that I can buy it with the next order (1). </text>
<text top="529" left="108" width="689" height="19" font="0">➔  <b>Update item in cart</b>: As a customer, I want to change the number of units of a particular </text>
<text top="557" left="135" width="665" height="18" font="0">item in the shopping cart, so that I can buy a different quantity of the product with the next </text>
<text top="585" left="135" width="74" height="18" font="0">order (6). </text>
<text top="629" left="108" width="662" height="19" font="0">➔  <b>Remove item from cart</b>: As a customer, I want to remove a particular item from the </text>
<text top="657" left="135" width="441" height="18" font="0">shopping cart, so that I do not buy it with the next order (3). </text>
<text top="700" left="108" width="682" height="19" font="0">➔  <b>Place order</b>: As a customer, I want to place an order, so that I can actually buy the items </text>
<text top="728" left="135" width="179" height="18" font="0">in my shopping cart (2). </text>
<text top="771" left="108" width="649" height="19" font="0">➔  <b>Payment</b>: As a customer, I want to be able to pay online my orders, so that I can pay </text>
<text top="800" left="135" width="631" height="18" font="0">immediately the moment I buy them instead of using other possibly unpleasant billing </text>
<text top="828" left="135" width="89" height="18" font="0">options (4). </text>
<text top="871" left="108" width="672" height="19" font="0">➔  <b>List orders</b>: As a registered customer, I want to see a list of my orders, so that I can see </text>
<text top="899" left="135" width="274" height="18" font="0">all the purchases I did in the past (5). </text>
<text top="942" left="108" width="691" height="19" font="0">➔  <b>Mini cart</b>: As a customer, I want to be able to see my current shopping cart from any page </text>
<text top="971" left="135" width="643" height="18" font="0">via a so-called mini-cart, so that I can always be aware of its contents and pricing details </text>
<text top="999" left="135" width="29" height="18" font="0">(5). </text>
<text top="1042" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="150" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">150	  </text>
<text top="109" left="108" width="76" height="24" font="14"><i>B.1.3  U</i></text>
<text top="113" left="185" width="130" height="19" font="15"><i>SER	  MANAGEMENT</i></text>
<text top="109" left="316" width="4" height="24" font="14"><i>	  </i></text>
<text top="163" left="108" width="682" height="19" font="0">➔  <b>Sign up</b>: As an anonymous customer, I want to sign up a new customer account, so that I </text>
<text top="191" left="135" width="552" height="18" font="0">can place orders more easily and take advantage of many other benefits (4). </text>
<text top="235" left="108" width="688" height="19" font="0">➔  <b>Log in</b>: As an anonymous customer, I want to log in with an existing customer account, so </text>
<text top="263" left="135" width="518" height="18" font="0">that I take advantage of the benefits of being a registered customer (4). </text>
<text top="306" left="108" width="663" height="19" font="0">➔  <b>Log out</b>: As a registered customer, I want to logout from my customer account, so that </text>
<text top="334" left="135" width="367" height="18" font="0">nobody else can use it from the same machine (5). </text>
<text top="377" left="108" width="628" height="19" font="0">➔  <b>Recover password</b>: As an anonymous customer, I want to be able to recover my </text>
<text top="406" left="135" width="627" height="18" font="0">password, so that I can log in with my account when I forget my current password (7). </text>
<text top="449" left="108" width="666" height="19" font="0">➔  <b>Update account</b>: As a registered customer, I want to update my personal data such as </text>
<text top="477" left="135" width="200" height="18" font="0">the email address used (6). </text>
<text top="520" left="108" width="674" height="19" font="0">➔  <b>Change password</b>: As a registered customer, I want to change my current password to </text>
<text top="548" left="135" width="216" height="18" font="0">another one of my choice (5). </text>
<text top="592" left="108" width="655" height="19" font="0">➔  <b>Add address</b>: As a registered customer, I want to add a postal address to my address </text>
<text top="620" left="135" width="610" height="18" font="0">book, so that I can select it as shipping or billing address when placing an order (5). </text>
<text top="663" left="108" width="649" height="19" font="0">➔  <b>Update address</b>: As a registered customer, I want to update the data of a particular </text>
<text top="691" left="135" width="642" height="18" font="0">postal address from my address book, so that it corresponds to my current situation (6). </text>
<text top="734" left="108" width="687" height="19" font="0">➔  <b>Remove address</b>: As a registered customer, I want to remove a particular postal address </text>
<text top="763" left="135" width="594" height="18" font="0">from my address book, so that I cannot longer select it when placing an order (5). </text>
<text top="806" left="108" width="4" height="18" font="0"> </text>
<text top="849" left="108" width="57" height="25" font="2">B.2  N</text>
<text top="854" left="165" width="21" height="20" font="0">ON</text>
<text top="849" left="187" width="16" height="25" font="2">-­‐F</text>
<text top="854" left="203" width="84" height="20" font="0">UNCTIONAL	  </text>
<text top="849" left="287" width="11" height="25" font="2">R</text>
<text top="854" left="298" width="99" height="20" font="0">EQUIREMENTS</text>
<text top="849" left="398" width="5" height="25" font="2">	  </text>
<text top="902" left="108" width="76" height="24" font="14"><i>B.2.1  U</i></text>
<text top="905" left="185" width="57" height="19" font="15"><i>SABILITY</i></text>
<text top="902" left="243" width="4" height="24" font="14"><i>	  </i></text>
<text top="956" left="108" width="642" height="19" font="0">➔  <b>Understandability</b>: As a developer, I want to identify and understand a particular </text>
<text top="984" left="135" width="479" height="18" font="0">business logic code of the template in less than 1 person-hour (2). </text>
<text top="1027" left="108" width="685" height="19" font="0">➔  <b>Learnability</b>: As a developer, I want to learn how the application is structured and how I </text>
<text top="1055" left="135" width="606" height="18" font="0">can modify and extend it to build my own web-shop in less than 8 person-hour (3). </text>
</page>
<page number="151" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0"> 151	  </text>
<text top="109" left="108" width="677" height="19" font="0">➔  <b>Operability</b>: As a customer, I want to learn how to purchase an item for the first time in </text>
<text top="138" left="135" width="173" height="18" font="0">less than 5 minutes (7). </text>
<text top="181" left="108" width="650" height="19" font="0">➔  <b>Likeability</b>: The template should achieve an average of 7 out of 10 points from users </text>
<text top="209" left="135" width="328" height="18" font="0">when asked of how much do they like it (10). </text>
<text top="252" left="108" width="4" height="18" font="0"> </text>
<text top="304" left="108" width="80" height="24" font="14"><i>B.2.2  M</i></text>
<text top="308" left="189" width="106" height="19" font="15"><i>AINTAINABILITY</i></text>
<text top="304" left="296" width="4" height="24" font="14"><i>	  </i></text>
<text top="358" left="108" width="611" height="19" font="0">➔  <b>Testability</b>: As a developer, I want to be able to test any new feature of my web </text>
<text top="386" left="135" width="627" height="18" font="0">application with unit, integration and acceptance tests, in less than 2 person-hour (4). </text>
<text top="429" left="108" width="668" height="19" font="0">➔  <b>Stability</b>: As a developer, I want to be able to safely change the set of data fetched from </text>
<text top="458" left="135" width="665" height="18" font="0">the platform without affecting the proper functioning of the template, at least in 95% of the </text>
<text top="486" left="135" width="72" height="18" font="0">cases (6). </text>
<text top="529" left="108" width="647" height="19" font="0">➔  <b>Changeability</b>: As a developer, I want to be able to perform simple changes on user </text>
<text top="557" left="135" width="453" height="18" font="0">interface elements of the template in less than 10 minutes (4). </text>
<text top="600" left="108" width="4" height="18" font="0"> </text>
<text top="652" left="108" width="73" height="24" font="14"><i>B.2.3  F</i></text>
<text top="656" left="182" width="113" height="19" font="15"><i>UNCTIONABILITY</i></text>
<text top="652" left="295" width="4" height="24" font="14"><i>	  </i></text>
<text top="706" left="108" width="630" height="19" font="0">➔  <b>Security</b>: The system must block any external attacker from reading or modifying </text>
<text top="735" left="135" width="189" height="18" font="0">sensitive information (6). </text>
<text top="778" left="108" width="609" height="19" font="0">➔  <b>Compliance</b>: The system must avoid to store or process any payment data. (2) </text>
<text top="821" left="108" width="676" height="19" font="0">➔  <b>SEO-Friendly</b>: As a merchant, I want my web-shop with a SEO-friendly URL structure, </text>
<text top="849" left="135" width="619" height="18" font="0">so that my web-shop can improve its ranking position in Internet search engines (8). </text>
<text top="892" left="108" width="629" height="19" font="0">➔  <b>User-Friendly</b>: As a customer, I want the web-shop with a human-readable URL </text>
<text top="921" left="135" width="579" height="18" font="0">structure, so that I can identify the type of content before visiting the web page. </text>
<text top="964" left="108" width="4" height="18" font="0"> </text>
<text top="1007" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="152" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">152	  </text>
<text top="109" left="108" width="175" height="33" font="6">Appendix	  C  T</text>
<text top="114" left="284" width="207" height="26" font="7">ESTING	  INFORMATION</text>
<text top="109" left="491" width="6" height="33" font="6">	  </text>
<text top="162" left="108" width="57" height="25" font="2">C.1  U</text>
<text top="167" left="165" width="27" height="20" font="0">NIT	  </text>
<text top="162" left="192" width="10" height="25" font="2">T</text>
<text top="167" left="202" width="53" height="20" font="0">ESTING	  </text>
<text top="162" left="255" width="13" height="25" font="2">D</text>
<text top="167" left="268" width="41" height="20" font="0">ESIGN</text>
<text top="162" left="308" width="5" height="25" font="2">	  </text>
<text top="206" left="108" width="352" height="18" font="0">List of scenarios to be tested for each user story. </text>
<text top="258" left="108" width="74" height="24" font="14"><i>C.1.1  B</i></text>
<text top="262" left="183" width="126" height="19" font="15"><i>ROWSE	  PRODUCTS</i></text>
<text top="258" left="309" width="4" height="24" font="14"><i>	  </i></text>
<text top="312" left="108" width="168" height="18" font="9"><b>List home products</b> </text>
<text top="355" left="108" width="516" height="19" font="0">➔  When the home page is requested, display all products of the shop. </text>
<text top="383" left="108" width="440" height="19" font="0">➔  When no products found, show an informative message. </text>
<text top="412" left="108" width="4" height="18" font="0"> </text>
<text top="455" left="108" width="252" height="18" font="0">L<b>ist products from a category</b> </text>
<text top="498" left="108" width="655" height="19" font="0">➔  When a category is requested, the chosen category will be indicated and its immediate </text>
<text top="526" left="135" width="647" height="18" font="0">children categories will be displayed, as well as all products belonging to that category or </text>
<text top="555" left="135" width="187" height="18" font="0">any descendant category. </text>
<text top="582" left="108" width="578" height="19" font="0">➔  When the selected category does not exist, show a not found error message. </text>
<text top="611" left="108" width="439" height="19" font="0">➔  When no products found, show an informative message. </text>
<text top="639" left="108" width="4" height="18" font="0"> </text>
<text top="682" left="108" width="202" height="18" font="0">F<b>ilter products by price</b> </text>
<text top="725" left="108" width="673" height="19" font="0">➔  When a price range filtering is requested in any product list page, the chosen price range </text>
<text top="754" left="135" width="639" height="18" font="0">will be displayed, as well as all products from the previous list  (discarding any previous </text>
<text top="782" left="135" width="361" height="18" font="0">price filtering) whose price falls within the range. </text>
<text top="810" left="108" width="592" height="19" font="0">➔  When minimum and maximum price are swapped, recover exchanging them. </text>
<text top="838" left="108" width="471" height="19" font="0">➔  When invalid price provided, dismiss the price filter request. </text>
<text top="867" left="108" width="440" height="19" font="0">➔  When no products found, show an informative message. </text>
<text top="895" left="108" width="4" height="18" font="0"> </text>
<text top="938" left="108" width="203" height="18" font="9"><b>Filter products by color</b> </text>
<text top="981" left="108" width="635" height="19" font="0">➔  When a color filtering is requested in any product list page, the chosen color will be </text>
<text top="1010" left="135" width="624" height="18" font="0">displayed, as well as all products from the previous list whose main color matches the </text>
<text top="1038" left="135" width="108" height="18" font="0">selected color. </text>
</page>
<page number="153" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0"> 153	  </text>
<text top="109" left="108" width="677" height="19" font="0">➔  When more than one color is selected at once, products whose main color matches any of </text>
<text top="138" left="135" width="267" height="18" font="0">the selected colors will be displayed. </text>
<text top="166" left="108" width="440" height="19" font="0">➔  When no products found, show an informative message. </text>
<text top="194" left="135" width="4" height="18" font="0"> </text>
<text top="237" left="108" width="175" height="18" font="9"><b>Show product detail</b> </text>
<text top="280" left="108" width="684" height="19" font="0">➔  When a product is requested, the chosen product will be displayed with all its information </text>
<text top="309" left="135" width="464" height="18" font="0">and pictures, as well as all the possible variants of that product. </text>
<text top="337" left="108" width="574" height="19" font="0">➔  When the selected product does not exist, show a not found error message. </text>
<text top="365" left="135" width="4" height="18" font="0"> </text>
<text top="408" left="108" width="240" height="18" font="9"><b>Show product variant detail</b> </text>
<text top="451" left="108" width="682" height="19" font="0">➔  When a product variant is requested, the chosen product variant will be displayed with all </text>
<text top="480" left="135" width="592" height="18" font="0">its information and pictures, as well as all other possible variants of that product. </text>
<text top="508" left="108" width="645" height="19" font="0">➔  When the selected product variant does not exist, display the default variant instead. </text>
<text top="536" left="108" width="574" height="19" font="0">➔  When the selected product does not exist, show a not found error message. </text>
<text top="564" left="135" width="4" height="18" font="0"> </text>
<text top="616" left="108" width="74" height="24" font="14"><i>C.1.2  P</i></text>
<text top="620" left="183" width="140" height="19" font="15"><i>URCHASE	  PRODUCTS</i></text>
<text top="616" left="323" width="4" height="24" font="14"><i>	  </i></text>
<text top="670" left="108" width="141" height="18" font="9"><b>Show cart detail</b> </text>
<text top="714" left="108" width="639" height="19" font="0">➔  When the shopping cart is requested, display the cart contents and the price details. </text>
<text top="742" left="108" width="498" height="19" font="0">➔  When the shopping cart is empty, show an informative message. </text>
<text top="770" left="135" width="4" height="18" font="0"> </text>
<text top="798" left="108" width="140" height="18" font="9"><b>Add item to cart</b> </text>
<text top="841" left="108" width="677" height="19" font="0">➔  When a product is requested to be added to the shopping cart, add the selected variant in </text>
<text top="870" left="135" width="334" height="18" font="0">the cart and display the updated cart content. </text>
<text top="898" left="108" width="660" height="19" font="0">➔  When the product is already in the cart, the quantity will be updated with the addition. </text>
<text top="926" left="108" width="588" height="19" font="0">➔  When the selected product does not exist, show a bad request error message. </text>
<text top="955" left="135" width="4" height="18" font="0"> </text>
<text top="983" left="135" width="4" height="18" font="0"> </text>
<text top="1011" left="135" width="4" height="18" font="0"> </text>
<text top="1039" left="135" width="4" height="18" font="0"> </text>
</page>
<page number="154" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">154	  </text>
<text top="109" left="108" width="167" height="18" font="9"><b>Update item in cart</b> </text>
<text top="153" left="108" width="667" height="19" font="0">➔  When the quantity of an item in the shopping cart is requested to be updated in the cart </text>
<text top="181" left="135" width="615" height="18" font="0">detail page, replace the previous quantity with the new one provided and display the </text>
<text top="209" left="135" width="160" height="18" font="0">updated cart content. </text>
<text top="237" left="108" width="579" height="19" font="0">➔  When the item does not exist in the cart, show a bad request error message. </text>
<text top="265" left="108" width="529" height="19" font="0">➔  When the new quantity is invalid, show a bad request error message. </text>
<text top="294" left="108" width="4" height="18" font="0"> </text>
<text top="337" left="108" width="200" height="18" font="9"><b>Remove item from cart</b> </text>
<text top="380" left="108" width="683" height="19" font="0">➔  When a product from the shopping cart is requested to be removed in the cart detail page, </text>
<text top="408" left="135" width="496" height="18" font="0">remove the item from the cart and display the updated cart content. </text>
<text top="436" left="108" width="579" height="19" font="0">➔  When the item does not exist in the cart, show a bad request error message. </text>
<text top="465" left="135" width="4" height="18" font="0"> </text>
<text top="508" left="108" width="127" height="18" font="9"><b>Start checkout</b> </text>
<text top="551" left="108" width="641" height="19" font="0">➔  When the checkout process is requested to start, display an order summary (i.e. cart </text>
<text top="579" left="135" width="558" height="18" font="0">content and price details) and the corresponding shipping and billing forms. </text>
<text top="607" left="108" width="483" height="19" font="0">➔  When the shopping cart is empty, display the last visited page. </text>
<text top="636" left="135" width="4" height="18" font="0"> </text>
<text top="679" left="108" width="139" height="18" font="9"><b>Finish checkout</b> </text>
<text top="722" left="108" width="666" height="19" font="0">➔  When the checkout process is requested to finish, display success message and all order </text>
<text top="750" left="135" width="496" height="18" font="0">details (i.e. cart content, price details, shipping and billing options). </text>
<text top="778" left="108" width="651" height="19" font="0">➔  When invalid data provided, show a bad request error message and pre-fill the forms. </text>
<text top="807" left="108" width="483" height="19" font="0">➔  When the shopping cart is empty, display the last visited page. </text>
<text top="835" left="135" width="4" height="18" font="0"> </text>
<text top="887" left="108" width="76" height="24" font="14"><i>C.1.3  U</i></text>
<text top="891" left="185" width="130" height="19" font="15"><i>SER	  MANAGEMENT</i></text>
<text top="887" left="316" width="4" height="24" font="14"><i>	  </i></text>
<text top="940" left="108" width="154" height="18" font="9"><b>Show user profile</b> </text>
<text top="984" left="108" width="664" height="19" font="0">➔  When the user profile is requested, display the user data, change password and address </text>
<text top="1012" left="135" width="393" height="18" font="0">book forms, as well as the list of orders from the user. </text>
<text top="1040" left="108" width="661" height="19" font="0">➔  When the user is not logged in, show an unauthorized error message and display login. </text>
</page>
<page number="155" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0"> 155	  </text>
<text top="109" left="135" width="4" height="18" font="0"> </text>
<text top="152" left="108" width="94" height="18" font="9"><b>Do sign up</b> </text>
<text top="196" left="108" width="661" height="19" font="0">➔  When signing up a new user is requested, register the user and display the user profile. </text>
<text top="224" left="108" width="628" height="19" font="0">➔  When user already registered, show a bad request error message and pre-fill form. </text>
<text top="252" left="108" width="644" height="19" font="0">➔  When invalid data provided, show a bad request error message and pre-fill the form. </text>
<text top="280" left="135" width="4" height="18" font="0"> </text>
<text top="323" left="108" width="79" height="18" font="9"><b>Do log in</b> </text>
<text top="367" left="108" width="652" height="19" font="0">➔  When logging in a user is requested, sign in with the user and display the user profile. </text>
<text top="395" left="108" width="687" height="19" font="0">➔  When invalid credentials provided, show an unauthorized error message and pre-fill form. </text>
<text top="423" left="108" width="417" height="19" font="0">➔  When user already logged in, display the user profile. </text>
<text top="452" left="135" width="4" height="18" font="0"> </text>
<text top="495" left="108" width="90" height="18" font="9"><b>Do log out</b> </text>
<text top="538" left="108" width="668" height="19" font="0">➔  When logging out a user is requested, sign out the user and display the last visited page. </text>
<text top="566" left="108" width="459" height="19" font="0">➔  When user already logged out, display the last visited page. </text>
<text top="595" left="135" width="4" height="18" font="0"> </text>
<text top="638" left="108" width="122" height="18" font="9"><b>Edit user data</b> </text>
<text top="681" left="108" width="683" height="19" font="0">➔  When the user data is requested to be updated, edit data and display updated user profile. </text>
<text top="709" left="108" width="644" height="19" font="0">➔  When invalid data provided, show a bad request error message and pre-fill the form. </text>
<text top="738" left="108" width="661" height="19" font="0">➔  When the user is not logged in, show an unauthorized error message and display login. </text>
<text top="766" left="135" width="4" height="18" font="0"> </text>
<text top="809" left="108" width="167" height="18" font="9"><b>Edit user password</b> </text>
<text top="852" left="108" width="661" height="19" font="0">➔  When the user password is requested to be updated, change password and display user </text>
<text top="880" left="135" width="56" height="18" font="0">profile. </text>
<text top="909" left="108" width="587" height="19" font="0">➔  When invalid current password provided, show a bad request error message. </text>
<text top="937" left="108" width="661" height="19" font="0">➔  When the user is not logged in, show an unauthorized error message and display login. </text>
<text top="965" left="135" width="4" height="18" font="0"> </text>
<text top="1008" left="135" width="4" height="18" font="0"> </text>
<text top="1051" left="135" width="4" height="18" font="0"> </text>
</page>
<page number="156" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">156	  </text>
<text top="109" left="108" width="159" height="18" font="9"><b>Recover password</b> </text>
<text top="153" left="108" width="679" height="19" font="0">➔  When the user password is requested to be recovered, send email to the address provided </text>
<text top="181" left="135" width="626" height="18" font="0">with a temporary link to the recovery page, where the user can insert a new password. </text>
<text top="209" left="108" width="658" height="19" font="0">➔  When the email provided does not exist, show a bad request error message and pre-fill </text>
<text top="237" left="135" width="44" height="18" font="0">form. </text>
<text top="265" left="135" width="4" height="18" font="0"> </text>
<text top="308" left="108" width="247" height="18" font="9"><b>Add address to address book</b> </text>
<text top="352" left="108" width="689" height="19" font="0">➔  When an address is requested to be added to the address book in the user profile page, add </text>
<text top="380" left="135" width="566" height="18" font="0">the selected address in the address book and display the updated user profile. </text>
<text top="408" left="108" width="643" height="19" font="0">➔  When the address is invalid, show a bad request error message and pre-fill the form. </text>
<text top="436" left="135" width="4" height="18" font="0"> </text>
<text top="479" left="108" width="275" height="18" font="9"><b>Update address in address book</b> </text>
<text top="523" left="108" width="678" height="19" font="0">➔  When an address is requested to be updated in the user profile page, replace the previous </text>
<text top="551" left="135" width="497" height="18" font="0">address with the new provided and display the updated user profile. </text>
<text top="579" left="108" width="612" height="19" font="0">➔  When the address does not exist in the address book, add it to the address book. </text>
<text top="607" left="108" width="643" height="19" font="0">➔  When the address is invalid, show a bad request error message and pre-fill the form. </text>
<text top="636" left="135" width="4" height="18" font="0"> </text>
<text top="679" left="108" width="307" height="18" font="9"><b>Remove address from address book</b> </text>
<text top="722" left="108" width="677" height="19" font="0">➔  When an address is requested to be removed in the user profile page, remove the address </text>
<text top="750" left="135" width="437" height="18" font="0">from the address book and display the updated user profile. </text>
<text top="778" left="108" width="670" height="19" font="0">➔  When the address does not exist in the address book, show a bad request error message. </text>
<text top="807" left="108" width="4" height="18" font="0"> </text>
<text top="850" left="108" width="55" height="25" font="2">C.2  A</text>
<text top="854" left="164" width="83" height="20" font="0">CCEPTANCE	  </text>
<text top="850" left="247" width="10" height="25" font="2">T</text>
<text top="854" left="257" width="35" height="20" font="0">ESTS	  </text>
<text top="850" left="292" width="13" height="25" font="2">D</text>
<text top="854" left="305" width="41" height="20" font="0">ESIGN</text>
<text top="850" left="346" width="5" height="25" font="2">	  </text>
<text top="894" left="108" width="215" height="18" font="0">Cucumber based list of rules. </text>
<text top="937" left="108" width="132" height="18" font="9"><b>Browse catalog</b> </text>
<text top="980" left="108" width="223" height="19" font="0">➔  Given I visit the web shop </text>
<text top="1009" left="140" width="163" height="18" font="0">And I select a product </text>
<text top="1037" left="140" width="256" height="18" font="0">When I add the product to the cart </text>
</page>
<page number="157" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0"> 157	  </text>
<text top="110" left="140" width="144" height="18" font="0">And I go to the cart </text>
<text top="138" left="140" width="244" height="18" font="0">Then I have only the chosen item </text>
<text top="166" left="140" width="301" height="18" font="0">And the total price is correctly calculated </text>
<text top="194" left="140" width="199" height="18" font="0">When I add one more item </text>
<text top="222" left="140" width="294" height="18" font="0">Then the total price is correctly updated </text>
<text top="250" left="108" width="4" height="18" font="0"> </text>
<text top="293" left="108" width="84" height="18" font="9"><b>Checkout</b> </text>
<text top="336" left="108" width="223" height="19" font="0">➔  Given I visit the web shop </text>
<text top="365" left="140" width="163" height="18" font="0">And I select a product </text>
<text top="393" left="140" width="256" height="18" font="0">When I add the product to the cart </text>
<text top="421" left="140" width="181" height="18" font="0">And I go to the checkout </text>
<text top="449" left="140" width="199" height="18" font="0">And I enter a valid address </text>
<text top="477" left="140" width="255" height="18" font="0">Then taxes are correctly calculated </text>
<text top="505" left="140" width="267" height="18" font="0">And the shipping methods are listed </text>
<text top="533" left="140" width="243" height="18" font="0">When I select a shipping method </text>
<text top="562" left="140" width="330" height="18" font="0">Then shipping cost is added to the total price </text>
<text top="590" left="140" width="258" height="18" font="0">And the payment form is displayed </text>
<text top="618" left="140" width="243" height="18" font="0">When I enter valid payment data </text>
<text top="646" left="140" width="187" height="18" font="0">And I finish the checkout </text>
<text top="674" left="140" width="258" height="18" font="0">Then I have purchased the product </text>
<text top="702" left="108" width="4" height="18" font="0"> </text>
<text top="745" left="108" width="108" height="18" font="9"><b>Check order</b> </text>
<text top="788" left="108" width="223" height="19" font="0">➔  Given I visit the web shop </text>
<text top="817" left="140" width="203" height="18" font="0">And I go to the signup page </text>
<text top="845" left="140" width="298" height="18" font="0">When I enter valid personal information </text>
<text top="873" left="140" width="246" height="18" font="0">Then I am successfully registered </text>
<text top="901" left="140" width="176" height="18" font="0">When I select a product </text>
<text top="929" left="140" width="242" height="18" font="0">And I add the product to the cart </text>
<text top="957" left="140" width="194" height="18" font="0">When I go to the checkout </text>
<text top="985" left="140" width="199" height="18" font="0">And I enter a valid address </text>
<text top="1014" left="140" width="229" height="18" font="0">And I select a shipping method </text>
<text top="1042" left="140" width="242" height="18" font="0">And I enter a valid payment data </text>
</page>
<page number="158" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">158	  </text>
<text top="110" left="140" width="200" height="18" font="0">When I finish the checkout </text>
<text top="138" left="140" width="237" height="18" font="0">And I go to the user profile page </text>
<text top="166" left="140" width="211" height="18" font="0">And I go to the order history </text>
<text top="194" left="140" width="200" height="18" font="0">Then I have only one order </text>
<text top="222" left="140" width="174" height="18" font="0">When I select the order </text>
<text top="250" left="140" width="217" height="18" font="0">Then the total price is correct </text>
<text top="278" left="140" width="193" height="18" font="0">And the address is correct </text>
<text top="307" left="140" width="260" height="18" font="0">And the shipping method is correct </text>
<text top="335" left="140" width="181" height="18" font="0">And the payment is paid </text>
<text top="362" left="108" width="4" height="18" font="0"> </text>
<text top="406" left="108" width="57" height="25" font="2">C.3  U</text>
<text top="410" left="165" width="61" height="20" font="0">SABILITY	  </text>
<text top="406" left="226" width="10" height="25" font="2">T</text>
<text top="410" left="237" width="35" height="20" font="0">ESTS	  </text>
<text top="406" left="272" width="11" height="25" font="2">R</text>
<text top="410" left="283" width="49" height="20" font="0">ESULTS</text>
<text top="406" left="332" width="5" height="25" font="2">	  </text>
<text top="450" left="108" width="169" height="19" font="0">➔  <b>Subject #1 (GK) </b></text>
<text top="478" left="140" width="59" height="18" font="0">Age: 64 </text>
<text top="506" left="140" width="278" height="18" font="0">Online shopping experience: Medium </text>
<text top="534" left="140" width="188" height="18" font="0">Computer expertise: Low </text>
<text top="562" left="140" width="316" height="18" font="0">Necessary time to purchase: 01:56 minutes </text>
<text top="591" left="140" width="127" height="18" font="0">Liking rate: 8/10 </text>
<text top="619" left="140" width="115" height="18" font="0">Problems with:<b> </b></text>
<text top="647" left="193" width="317" height="19" font="0">◆  Missing feedback on adding an address.<b> </b></text>
<text top="676" left="193" width="197" height="19" font="0">◆  Optional fields in form. </text>
<text top="704" left="183" width="4" height="18" font="9"><b> </b></text>
<text top="732" left="108" width="172" height="19" font="0">➔  <b>Subject #2 (HB) </b></text>
<text top="760" left="140" width="59" height="18" font="0">Age: 29 </text>
<text top="789" left="140" width="278" height="18" font="0">Online shopping experience: Medium </text>
<text top="817" left="140" width="218" height="18" font="0">Computer expertise: Medium </text>
<text top="845" left="140" width="320" height="18" font="0">Necessary time to purchase: 00:49 minutes </text>
<text top="873" left="140" width="127" height="18" font="0">Liking rate: 8/10 </text>
<text top="901" left="140" width="115" height="18" font="0">Problems with: </text>
<text top="929" left="193" width="294" height="19" font="0">◆  Missing feedback on adding address. </text>
<text top="958" left="193" width="246" height="19" font="0">◆  Selecting address in checkout. </text>
<text top="987" left="193" width="268" height="19" font="0">◆  Understanding categories listing. </text>
<text top="1015" left="183" width="4" height="18" font="0"> </text>
</page>
<page number="159" position="absolute" top="0" left="0" height="1188" width="918">
<text top="1092" left="771" width="31" height="20" font="0"> 159	  </text>
<text top="109" left="108" width="169" height="19" font="0">➔  <b>Subject #3 (RE) </b></text>
<text top="138" left="140" width="58" height="18" font="0">Age: 53 </text>
<text top="166" left="140" width="247" height="18" font="0">Online shopping experience: Low </text>
<text top="194" left="140" width="218" height="18" font="0">Computer expertise: Medium </text>
<text top="222" left="140" width="317" height="18" font="0">Necessary time to purchase: 02:18 minutes </text>
<text top="250" left="140" width="127" height="18" font="0">Liking rate: 9/10 </text>
<text top="278" left="140" width="115" height="18" font="0">Problems with: </text>
<text top="307" left="193" width="294" height="19" font="0">◆  Missing feedback on adding address. </text>
<text top="335" left="193" width="334" height="19" font="0">◆  Noticying address book listed in checkout. </text>
<text top="364" left="193" width="197" height="19" font="0">◆  Optional fields in form. </text>
<text top="393" left="193" width="254" height="19" font="0">◆  Noticying quantity field in cart. </text>
<text top="421" left="183" width="4" height="18" font="0"> </text>
<text top="449" left="108" width="168" height="19" font="0">➔  <b>Subject #4 (AL) </b></text>
<text top="478" left="140" width="57" height="18" font="0">Age: 16 </text>
<text top="506" left="140" width="247" height="18" font="0">Online shopping experience: Low </text>
<text top="534" left="140" width="218" height="18" font="0">Computer expertise: Medium </text>
<text top="562" left="140" width="315" height="18" font="0">Necessary time to purchase: 01:18 minutes </text>
<text top="590" left="140" width="127" height="18" font="0">Liking rate: 9/10 </text>
<text top="619" left="140" width="115" height="18" font="0">Problems with: </text>
<text top="647" left="193" width="202" height="19" font="0">◆  Noticying address book. </text>
<text top="675" left="193" width="197" height="19" font="0">◆  Optional fields in form. </text>
<text top="704" left="193" width="254" height="19" font="0">◆  Noticying quantity field in cart. </text>
<text top="733" left="183" width="4" height="18" font="0"> </text>
<text top="761" left="108" width="168" height="19" font="0">➔  <b>Subject #5 (SK) </b></text>
<text top="789" left="140" width="58" height="18" font="0">Age: 37 </text>
<text top="817" left="140" width="253" height="18" font="0">Online shopping experience: High </text>
<text top="845" left="140" width="193" height="18" font="0">Computer expertise: High </text>
<text top="874" left="140" width="314" height="18" font="0">Necessary time to purchase: 01:12 minutes </text>
<text top="902" left="140" width="126" height="18" font="0">Liking rate: 7/10 </text>
<text top="930" left="140" width="115" height="18" font="0">Problems with: </text>
<text top="958" left="193" width="294" height="19" font="0">◆  Missing feedback on adding address. </text>
<text top="987" left="193" width="202" height="19" font="0">◆  Noticying address book. </text>
<text top="1015" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="160" position="absolute" top="0" left="0" height="1188" width="918">
<image top="176" left="108" width="702" height="279" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-160_1.png"/>
<image top="480" left="108" width="702" height="276" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-160_2.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">160	  </text>
<text top="109" left="108" width="54" height="25" font="2">C.4  P</text>
<text top="114" left="163" width="99" height="20" font="0">ERFORMANCE	  </text>
<text top="109" left="262" width="10" height="25" font="2">T</text>
<text top="114" left="272" width="27" height="20" font="0">EST	  </text>
<text top="109" left="300" width="11" height="25" font="2">R</text>
<text top="114" left="311" width="49" height="20" font="0">ESULTS</text>
<text top="109" left="360" width="5" height="25" font="2">	  </text>
<text top="139" left="108" width="4" height="20" font="0">	  </text>
<text top="440" left="810" width="4" height="18" font="0"> </text>
<text top="741" left="810" width="4" height="18" font="0"> </text>
<text top="780" left="453" width="3" height="15" font="12"><b> </b></text>
<text top="803" left="162" width="582" height="15" font="12"><b>Figure C1</b>: Load test results of 1 minute with 250 users against home page with 1 processing unit.</text>
<text top="800" left="744" width="4" height="18" font="0"> </text>
</page>
<page number="161" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="702" height="567" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-161_1.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 161	  </text>
<text top="661" left="810" width="4" height="18" font="0"> </text>
<text top="701" left="453" width="3" height="15" font="12"><b> </b></text>
<text top="724" left="152" width="601" height="15" font="12"><b>Figure C2</b>: Load test results of 1 minute with 250 users against category page with 1 processing unit.</text>
<text top="721" left="754" width="4" height="18" font="0"> </text>
<text top="762" left="453" width="4" height="18" font="0"> </text>
</page>
<page number="162" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="702" height="294" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-162_1.png"/>
<image top="428" left="108" width="702" height="279" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-162_2.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">162	  </text>
<text top="388" left="810" width="4" height="18" font="0"> </text>
<text top="691" left="810" width="4" height="18" font="0"> </text>
<text top="731" left="136" width="634" height="15" font="12"><b>Figure C3</b>: Load test results of 1 minute with 250 users against product detail page with 1 processing unit.</text>
<text top="728" left="770" width="4" height="18" font="0"> </text>
<text top="769" left="453" width="4" height="18" font="0"> </text>
</page>
<page number="163" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="702" height="567" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-163_1.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 163	  </text>
<text top="661" left="810" width="4" height="18" font="0"> </text>
<text top="701" left="453" width="3" height="15" font="12"><b> </b></text>
<text top="716" left="157" width="595" height="15" font="12"><b>Figure C4</b>: Load test results of 1 minute with 250 users against home page with 2 processing units. </text>
<text top="746" left="453" width="4" height="18" font="0"> </text>
<text top="780" left="453" width="4" height="18" font="0"> </text>
</page>
<page number="164" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="702" height="276" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-164_1.png"/>
<image top="410" left="108" width="702" height="275" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-164_2.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">164	  </text>
<text top="370" left="810" width="4" height="18" font="0"> </text>
<text top="669" left="810" width="4" height="18" font="0"> </text>
<text top="709" left="453" width="3" height="15" font="12"><b> </b></text>
<text top="724" left="149" width="608" height="15" font="12"><b>Figure C5</b>: Load test results of 1 minute with 250 users against category page with 2 processing units.</text>
<text top="721" left="757" width="4" height="18" font="0"> </text>
<text top="754" left="453" width="4" height="18" font="0"> </text>
<text top="788" left="453" width="4" height="18" font="0"> </text>
</page>
<page number="165" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="702" height="276" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-165_1.png"/>
<image top="410" left="108" width="702" height="273" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-165_2.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 165	  </text>
<text top="370" left="810" width="4" height="18" font="0"> </text>
<text top="668" left="810" width="4" height="18" font="0"> </text>
<text top="707" left="453" width="3" height="15" font="12"><b> </b></text>
<text top="722" left="132" width="642" height="15" font="12"><b>Figure C6</b>: Load test results of 1 minute with 250 users against product detail page with 2 processing units.</text>
<text top="720" left="774" width="4" height="18" font="0"> </text>
<text top="753" left="453" width="4" height="18" font="0"> </text>
</page>
<page number="166" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="702" height="569" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-166_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">166	  </text>
<text top="663" left="810" width="4" height="18" font="0"> </text>
<text top="702" left="453" width="3" height="15" font="12"><b> </b></text>
<text top="717" left="158" width="594" height="15" font="12"><b>Figure C7</b>: Load test results of 1 minute with 250 users against home page with 4 processing units. </text>
<text top="748" left="453" width="3" height="15" font="13"> </text>
<text top="778" left="453" width="4" height="18" font="0"> </text>
<text top="812" left="453" width="4" height="18" font="0"> </text>
</page>
<page number="167" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="702" height="273" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-167_1.png"/>
<image top="407" left="108" width="702" height="276" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-167_2.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 167	  </text>
<text top="367" left="810" width="4" height="18" font="0"> </text>
<text top="668" left="810" width="4" height="18" font="0"> </text>
<text top="707" left="453" width="3" height="15" font="12"><b> </b></text>
<text top="722" left="148" width="613" height="15" font="12"><b>Figure C8</b>: Load test results of 1 minute with 250 users against category page with 4 processing units. </text>
<text top="753" left="453" width="4" height="18" font="0"> </text>
<text top="786" left="453" width="4" height="18" font="0"> </text>
</page>
<page number="168" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="702" height="275" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-168_1.png"/>
<image top="408" left="108" width="702" height="276" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-168_2.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">168	  </text>
<text top="369" left="810" width="4" height="18" font="0"> </text>
<text top="669" left="810" width="4" height="18" font="0"> </text>
<text top="709" left="453" width="3" height="15" font="12"><b> </b></text>
<text top="724" left="132" width="642" height="15" font="12"><b>Figure C9</b>: Load test results of 1 minute with 250 users against product detail page with 4 processing units.</text>
<text top="721" left="774" width="4" height="18" font="0"> </text>
<text top="754" left="453" width="4" height="18" font="0"> </text>
</page>
<page number="169" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="702" height="312" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-169_1.png"/>
<image top="446" left="108" width="702" height="315" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-169_2.png"/>
<text top="1092" left="771" width="31" height="20" font="0"> 169	  </text>
<text top="406" left="810" width="4" height="18" font="0"> </text>
<text top="745" left="810" width="4" height="18" font="0"> </text>
<text top="785" left="453" width="3" height="15" font="12"><b> </b></text>
<text top="801" left="140" width="626" height="15" font="12"><b>Figure C10</b>: Load test results of 1 minute with 3000 users against category page with 4 processing units.</text>
<text top="798" left="766" width="4" height="18" font="0"> </text>
<text top="831" left="453" width="4" height="18" font="0"> </text>
<text top="865" left="108" width="4" height="18" font="0"> </text>
</page>
<page number="170" position="absolute" top="0" left="0" height="1188" width="918">
<image top="109" left="108" width="702" height="644" src="/export/freefileconvert/11576_277cf99bb5a90d9c74ccce5d3dada8a24c69a30dff0536243b650bc407ade236-170_1.png"/>
<text top="1115" left="108" width="4" height="20" font="0">	  </text>
<text top="1115" left="773" width="29" height="20" font="0">170	  </text>
<text top="753" left="453" width="3" height="15" font="12"><b> </b></text>
<text top="776" left="453" width="3" height="15" font="12"><b> </b></text>
<text top="799" left="137" width="632" height="15" font="12"><b>Figure C11</b>: Load test results of 3 minutes with 1.000 users against category page with 4 processing units.</text>
<text top="796" left="769" width="4" height="18" font="0"> </text>
</page>
</pdf2xml>
